%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Figure 6.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Melvyn Slater
%%CreationDate: 04/07/2012
%%BoundingBox: 0 0 791 576
%%HiResBoundingBox: 0 0 790.1533 575.3672
%%CropBox: 0 0 790.1533 575.3672
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 11936 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF%FFFFAFFD0BFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFA8%FFAFA87DFFA8FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAF847DFFAFA8A8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFFFAFFF7D52A8A85252A8FD35FFAFFFAFFF597DA8A82752%A8FD35FFAFA8FFA8A87DAF7D7D52A8FD18FF84FD1BFFA8FFA8FFA8847DFF%7D7D52A8FD0CFFA8A8FD26FFA8FFFFAFFFAFFFA8FD1CFFA8FD1EFFAFFFA8%FFA8FD11FF84FD28FFA8FFA8FFAFAFA8FD37FFAFFFA8FFA8FFAFAFA8FD37%FFA8FD04FFAFFFA8FD39FFAFFFFFFFAFFFA9FD39FFA9A8FFA8FFA8FFA8FD%39FFA8FFA8FFA8FFA8FD37FFAFFD06FFAFFD39FFAFFD05FFAFFD39FFAFA8%FFAFA87DFFA8FD39FFA8FFAFA8A8FFA8FD37FFAFFFFFAFFFA884A8AFFD38%FFAFFFAFFF7DA8A8FD39FFAFA8FFA8FFAFAFA8FD25FFA8AFFD04FF7DFD0B%FFA8FFA8FFA8FFAFAFA8FD2BFF59FD0BFFA8FFFFAFFFFFFFA8FD1CFFA8FD%0AFF7EFD13FFAFFFFFFFA8FD26FFA9A8FD04FF84FD0DFFA8FFA8FFA9AFA8%FD1BFFA8FD1BFFAFFFA8FFA8FFA9AFA8FD25FFA8AFFD10FFA8FD04FFAFFF%A8FD06FFA8A8FD24FF84A8FD0BFFAFFFFFFFAFFFA9FD1BFFA9A8FD0FFF84%FD0CFFA9A8FFFFFFA8FFA8FD05FFA8FD0AFF84A8FD0FFFA8FFFFFFA884FD%04FFA8FD0DFFA8FFFFFFA8FFA8FD0AFFA884FD0FFFA8FD09FF84A8FD04FF%A8FD05FFA8FD05FFAFFFFFA8527DFFAFFD11FFA8FD05FFA8FD09FF84AFFD%04FFA9FD04FFA8A8FD0BFFAFFFA85284FFAFFD26FFA87EFD04FF84FD04FF%84AFFD06FFAFAFA8F85252A8A8FD15FFA8A8FD0AFFA9FFFFFFA8A8FD12FF%AFA8F85252A8A8FD1BFFA8FD04FFA8A8FFFFFFA8FD11FFAFFFFFA87DA8FF%A8FD16FFA9A8FD0FFF84FD11FFAFFFA852A8FFA8FD1BFFA8A8FD04FF84FD%17FFAFAFA827A8FFAFA8FD1BFF53FD05FFAFFD15FFA8FFFF7D52FFAFAFA8%FD0FFFA8A8FD09FFA97DFD09FFAFFD11FFA8FFFF7D27A8FFA8FD1CFF7EFD%04FF7DA8FD18FF5252AFFFA8FD11FF84FD04FFA9A8FFFFFFA8A9FD09FFA9%84FD13FFA827A8AFAFA8FD15FFA8AFFD0AFFA8FD09FF7EFD0BFFAFFFFF7D%52FFAFAFA8FD15FF7EA8FD0EFF84A8FD10FFA8FFFF8427A8FFA8FD16FFAF%A8FD09FFA8FD0AFF84A8FFFFFFA8AFFD06FFAFFF7D52AFFFA9FD16FF7E84%FD0EFFA884FD09FFA8FD07FFA9A8A827A8FFFFA8FD15FFA8AFFD09FFA8A8%FD09FF59A9FFFFFF8459FD07FFAF7D27FFAFFFA8FD15FFA8FD05FFA8FD04%FFAFA8FFFFFFA8FD0AFFA8A8FFFFFFA87EAFFFFFA85252A8A8FD0CFFAFFD%09FFAFA8FD09FF84AFFD16FFAFFF7E2752A8A9FD0BFFA9FD0FFFAFA8FD04%FF7DFD15FFA8FFAFA8FF275252A8A8FD0AFFAF7EFD09FF84A8FD0EFFA884%FD12FFAFA827527DAFA8FD0AFFA884FD0FFF7EFD04FF7EA8FD15FFAFFFFF%A852A8FFA8FD21FFA8FD05FFAFFD04FFA8A9FD0BFFAFFF8452FFFFA8FD27%FFA8FD04FFA8FD0CFFAFA8FFA8FFA8AFA8FD15FF84A8FD09FFA8A8FD09FF%A8FD0AFF84A8FFA8FFA8FFA8AFA8FD25FF7D7EFD04FFA8FD04FFA8A8FD05%FFA8FFFFAFFFFFFFA8FD17FFAFFD0FFF7EFD0FFFA8FFFFFFAFFFFFFFA8FD%31FF7EA8FD07FFA8FFA8FFAFAFA8FD39FFA8FFA8FFA9AFA8FD37FFA8FD04%FFAFFFA8FD39FFAFFD05FFA8FD39FFA9A8FFA9A87DFFA8FD05FF7DA9FD32%FFA8FFA8A87DFFA8FD05FF7DFD31FFAFFD04FF7D52A8FD11FFA8FD27FFAF%FFFFFF5259A8A8A9FD37FFAFA8FFA9FF7DAFA8FD10FF84A8FD27FFA8FFAF%AF7DFF7D84FD36FFAFFFFFAFFFFFFFA8FD21FFA8AFFD16FFAFFFAFFFFFFF%A8FD1BFFA8A8FD1CFFAFA8FFA8FFA8AFA8FD21FFA8FD15FFA8FFA8FFA8FF%A8AFA8FD1BFFA8FD1BFFA8FFFFAFFFFFFFA8FD16FFA984FD23FFAFFFFFFF%A8FD11FF84FD28FFA8FFA8FFA9AFA8FD15FFA9FD05FFA8FD1BFFAFFFA8FF%A8FFA9AFA8FD0FFFA8A8FD26FFA8FD04FFAFFFAFFD1CFFA8FD1CFFAFFFFF%FFAFFFAFFD11FF7EFD27FFA9A8FFAFA87DAFA8FD39FFA8FFA97D7DAFA8FD%37FFAFFD04FFA87DA8A8FD38FFAFFFFFFF7D84A9A8FD0CFFAFFD27FFAFFF%FFFFAFA8FFA8FFA8FFA8A8A8AFA8A8A8AFFD04A87DAFA8AFA8A8A8AFFD07%A8AFA8A8A8AFA8A8A8FFA8A8A8AFA8A8A8FF7DA8A8AFA8A8A8AFFD05A8FF%A8FFA9FFA8FFA8A8A8AFA8A8A8AFFD05A8A9A8AFA8A8A8AFA8AF84FD04A8%AFA8A8A8AFA8A8A8FFA8A8A8AFFD04A87DAFA8AFA8A8A8AFA8A9A8A8A8FF%FFAFFD04FFAF52FD05FFAFFFFFFF7D7DFFFFAFFFFFFFAFFFFF847DFFFFFF%AFFD05FF52A8FD04FFAFFFFFFFA852A8FFAFFFFFFFAFFFFFA82784FFFFAF%FD04FF7D52FFAFFFFFFFAFFFFFFF5284FFFFAFFFFFFFAFFFFF7D7DFFFFFF%AFFD05FF52AFFD04FFAFFFFFFFA852AFFFAFFFFFFFAFFFFF7D27FFFFA8FF%A8FFA8FFA87DA8FFA8FFA8FFA8FFAFA87DFFA8FFA8FFA8FFA8FF7DA8AFFF%A8FFA8FFAFFFA87DA8FFA8FFA8FFA8FFA8FF7DAFA9FFA8FFA8FFA8FFA87D%7DFFA8FFA8FFA8FF7D84AFFFA8FFA8FFA8FFAF7D7DFFA8FFA8FFA8FFA8FF%7DA8A8A9A8FFAFFFFFFFA87DA8FFA8FFA8FFA8FFA9A87DFFA8FFA8FFA8FF%A8FFA87DA8FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD07FFAFFFFFFFAFFD05%FF52527D7D52527DFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD07%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFD07FFAFFFFFFFAFFD04FF84277D277D%7D5252FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD06FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D7D84%527D527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FF%7D527D527D7D5259A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FD04FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF%AFFD0BFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD0BFF%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFA8FFA8FFA8%FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FD04FFAFFFFFA87DA8FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFFFFFFF5952A9FFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF%FFAFFFFFFFAFFFFFFFAFA8FFFF8452FF52277DFD37FFA8FFAF5252FF7D27%27A8FD34FFAFFFFFAFFFA87DFD04A8FD36FFAFFFAFFF7D7DFD05A8FD35FF%AFA8FFA8A87DFFA884FD36FFA8FFA8FFA8FFA8FFA8FD25FF84A8FD10FFA8%FFFFAFFFFFFFA8FD3BFFAFFFFFFFA8FD3AFFA8FFA8FFAFAFA8FD37FFAFFF%A8FFA8FFA9AFA8FD37FFA8FD04FFAFFFA8FD39FFAFFFFFFFAFFFA9FD39FF%A9A8FFA8FFA8FFA8FD39FFA8FFA8FFA8FFA8FD37FFAFFD04FFAFFFA8FD39%FFAFFFFFFFAFFFA8FD39FFAFA8FFAFA87DA8A8FD39FFA8FFAF7D7DAFA8FD%37FFAFFFFFAFFFA8AFA8FD07FFA8FD31FFAFFFAFFFA8FFA8FD37FFA8FFAF%A8FFA8FFAFAFA8FD06FFA87DFD0CFF84A8FD05FFA8FD1BFFA8FFA8FFA8FF%A9AFA8FD2BFF59FD04FFAFA8FFFFFFA884A8FFFFAFFFFFFFA8FD15FFA9FD%06FF84FD1EFFAFFFFFFFA8FD31FFA8AFFD07FFA8FFA8FFA9AFA8FD0DFFA8%A9FD28FFAFFFA8FFA8FFA9AFA8FD1BFFA8FD0FFF7EFD0BFFA8FD04FFAFFF%AFA87EFD0CFFAFA8FD19FFA8FD06FFA9A8FD07FFAFFFFFFFAFFFA9FD11FF%84FD09FFA9A8FD0AFFA8FD04FFAFFD0CFFA9A8FFA8AFAFFFA8FD14FF84A8%FD05FF7EFD0CFFA87EFD05FF7EAFFD08FFA8A97DFFAFFFA8FD0FFFA8A8FD%14FF7D84FD04FF7EFD09FFA884AFFFFFA827527DA8FD15FF7EFD06FFA9FD%1CFFAFFF7D2752A8A8FD21FFAFFD05FFA8FD04FFA9FD0AFFA9FFAFA8FF27%7D7DA8A8FD1BFF7EFD0CFFA87EFD0FFFA9A8277D7DA8A8FD20FF7EA8FFFF%FF84A8FD10FFAFFFFFA87DA8FFA8FD30FFA8A9FD07FFAFFF7D52FFFFA8FD%1BFFA8A8FD1CFFAFAF84F8A8AFAFA8FD06FFA87DFD0DFFA9FD19FF7DAFFD%05FF7EA8FFFF7D27FFAFAFA8FD0FFFA87EFD04FF7DA8FD04FFA8FD09FF84%84FD10FFA8FFFFA852A8FFA8FD07FFAFFD07FFA9FD05FF7EFD25FF7D52FF%FFA8FD21FFA8FD04FFA884FD13FFA827A8AFAFA8FD0DFF7EA8FD0CFFA8FD%0CFFA884FD0DFFAFFFFF8459FFAFAFA8FD1BFFA8FD04FF59A8FD15FFA8FF%FFA852A8FFAFA853FD0CFFA9A8FD0CFFA8FD0CFFA9FD0FFFAFFF7D7DFFFF%A8FD1BFFA9A8FD04FF7EFD04FF847DFD0FFFA8FFA9A8A8277DA8FFA87EA8%FD2DFF59A8FD08FFAF7D05A8A8FFA8FD15FF7EAFFD09FF84A8FFFFFFA8AF%FD0EFFA8A8AFFFFFAF52277DA8FD15FF7EFD06FFA9FD13FFAFAFFD05FFA8%FFAFFFA852277DA8FD0BFFA8A9FD04FF7EFD15FFA8FD11FFAFA8AF277DA8%AFA8FD15FFAFFD05FF7EFD05FFA8FD13FFAFA8AFFFAFA852A8A8FFA8FD10%FFA8FD14FF84A8FD10FFAFFFFFA8AFFFFFA8FD15FFA9FD0CFFA853FD15FF%AFFFA8A9FFFFA8FD26FF7E59FD0FFFA8FFAFA8FFA8FFA8AFA8A8FD13FF84%A8FD0BFFA8A8FD14FFA8FFA8FFA8FFA8AFA8FD25FFA8A8FD09FFA8A8FFFF%FFA884A8FFFFAFFFFFFFA8FFA8FD39FFAFFFFFFFA8FD31FFA9FD08FFA8FF%A8FFFFAFA8FD37FFAFFFA8FFA8FFFFAFA8FD37FFA8FD04FFA8A8A8FD0FFF%AFFD29FFAFFFFFFF84A8AFFD06FFA9FD32FFA9A8FFFF7D27A8A8FFAFFFFF%FFA8FFFFFFAFFFFFFF7EA8FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA8FFA95952A8A8%FFAFFFFFFF7DFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA9FD04FFA8%A8A8FD07FFA8A8FD30FFAFFFFFFFA8A8AFFD06FFA8FD32FFAFA8FFA9FFA8%FFA8FD07FFA8FD21FFA8FD0FFFA8FFA9FFA8FFA8FD05FFA8FD15FFA8FD1B%FFAFFFFFAFFFFFFFA8FD29FFA8A8FD0EFFAFFFAFFFFFFFA8FD1BFFA8A8FD%1CFFAFA8FFA8FFA8AFA8FD1BFF84FD1BFFA8FFA8FFA8FFA8AFA8FD0AFFA9%A8FD2BFFA8FFFFAFFFFFFFA8FD1CFFA8FD1EFFAFFFFFFFA8FD0BFFA8AFFD%2DFFA8FFA8FFAFAFA8FD36FF7EA8FFA8FFA8FFAFAFA8FD0AFFA884FD2BFF%A8FD04FFA8AFA8FD39FFAFFFFFFF7DA8AFFD39FFA9A8FFAFA852A8A8FD39%FFA8FFAFA87DAFA8FD37FFAFFD04FFAFFFAFA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFFFFFAFFFAFA9A8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFA8FFA8FFA8FFA87DA8FF%A8FFA8FFA8FFA8FFA8FF7DA8AFFFA8FFA8FFA8FFA8FFA8FF7DFFA8FFA8FF%A8FFA8FFA8FFAF7D7DFFA8FFA8FFA8FFA8FFA8FFA87DA8FFA8FFA8FFA8FF%7D7DA8FFA8FFA8FFA8FFA87E7DFFA8FFA8FFA8FFA8FF7DA8A9FFA8FFA8FF%A8FFA87DA8FFA8FFA8FFA8FFA8A852FFA8FFA8FFA8FFA8FF7D7DA8FFFFAF%FFFFFFAFA952FFAFFFFFFFAFFFFFFFAFFFFF7D7DFFFFFFAFFFFFFFAFFFA8%FFA87DAFFFAFFFFFFFAFFFFFFFAFFF527DFD04FFAFFFFFFFAFFFFFFF2EFF%FFFFAFFD04FF7D52FFAFFFFFFFAFFFFFFF5284FFFFAFFFFFFFAFFFFF7D7D%FFA8FFAFFFFFFFAFFF52A8AFFFFFFFAFFFFFFFA852AFFFAFFFFFFFAFFFFF%7D27AFFFA8FFA8FFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8FF%A8FFA8FF8452277D52522752A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA852277D27522784AFFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8AFA8FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFD05FF7D7D7D847D7D59FFFFFFAFFFFFFFAFFFFFFFAF%FFFFFFAFFFFFFFAFFD07FFAFFFFFFFAFFFFFFFAFFFFFFFAFFD07FFAFFFFF%FFAFFFFFFFAFFFFD077DFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAF%FD06FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFFFFFAFFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFFFFFAFFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF%A9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFFFA9FF%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAFFFFFFFAFFFFFFFAFFFFFFF%AFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFA8FFAFFFA8FFAFFFA8FFAF%FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2012-07-04T14:45:28+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2012-07-04T14:45:28+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-07-04T14:45:28+02:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>188</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9FaxdzWek3t3AIzPb28s&#xA;sQmLLFyRCy+oUV3C1G/FSadAck1satvOWqweWrLUtQskuLq4ZY3W19SOJjLqEVnGUDrJNukwfjwN&#xA;TsOuBICdeRNem8z+X49TutNm0i6LenPYTMWaOQKrMhLJE1ULcGBQEMCO2Np4WRfU4/FvwxteF31O&#xA;Pxb8MbXhd9Tj8W/DG14XfU4/FvwxteF31OPxb8MbXhU3jtI5o4XlCzTcvRjZlDPxFW4g7mg60xWg&#xA;qfU4/FvwxteF31OPxb8MbXhd9Tj8W/DG14XfU4/FvwxteF31OPxb8MbXhd9Tj8W/DG14VOe3WNOQ&#xA;JrXvTG0EJJ5l1C803QL+/sxAbm1haWMXTOkFUFf3jRrI4WncKcKGNa5528xaX5Rh1CPTFvtZuIX9&#xA;CKJZRA89aR0jAe4o/wCynHkWZVrU1wJAZL5J1qXzHoi6hdafLpdyHMU9nI3Mo4VWZeTJE1ULcGBQ&#xA;FWBB6Y2nhT/6nH4t+GNrwu+px+Lfhja8KnPHaW8RluJRDECqmSRlVasQqipoN2IAxCkBU+px+Lfh&#xA;ja8Lvqcfi34Y2vC76nH4t+GNrwu+px+Lfhja8Lvqcfi34Y2vC76nH4t+GNrwu+px+Lfhja8Lvqcf&#xA;i34Y2vC76nH4t+GNrwqU8CxqCK7mm9MQUEKGFittv+OvD/zDzf8AE4sBZRTbAzdirsVdirsVdiql&#xA;JZ2ktxDcywRvcW3L6vMyqXj9QUfgxFV5AUNOuG0Uq4EuxV2KuxV2KuxVRu/7n6RhDGSBwsGrb/jq&#xA;xf8AGCb/AInFgLOKa4GTsVdiqld2dpeQNb3cEdxAxUtDKquhKMGUlWBHwsoI98INIItVwJdirsVd&#xA;irsVdirsVdirsVQ97/dr8/4YQxkl119Z+rS/VeH1rg3oerX0/Up8PPjvxr1phYKOkfpMX9qL/wBB&#xA;rj6rOZng5qnL1YqBVfkace5b6MBZRT/fAzdvirt8Vdvirt8Vdvirt8Vdvirt8VU47iGV5UikSR4W&#xA;4TKrAlGIDcWA6HiwNDjSLUbrU7K1ubS1uJAk987RWqUY83RDIwqAQKKpO+EAlSaRW+BLt8VULuvo&#xA;/SMIYySu++vfU5vqHpfXeB+rifl6Renwh+Hxca9aYWDWl/XhqNuLsRNKLWX1Hi5BS/OKtFapA/2W&#xA;As4p5vgZO3xV2+Ku3xV2+Ku3xV2+Ku3xV2+Ku3xVCXOrWFtqFnp08ype34lNnCa1k9BQ0lCBT4Qw&#xA;O+ERJFoMgDSL3wJdviqHva+mvz/hhDGSDwsFtt/x14f+Yeb/AInFgLKKbYGaF0+4vp4pGvLT6nIs&#xA;siRx+osvONWISSq9Oa/Fx6jCQOiASisCUPqOoW2nWM99c8xb26l5DGjytQeCRhmb6BhAs0gmhaIB&#xA;qAfHx2wJcCDWh6bHFUNPp1nPe2t7Kha5sxILZ+TAL6oCv8IIVqgdxt2wg7UggXaIkkjjjaSRgkaA&#xA;s7saAAbkkntgS2CCAQag7gjFUDYTaTJe6gtkiLdRSqmousRQtL6asvJyo9QiMrvU06ZI3QtiKs0u&#xA;vbu6hu7CKFIWjuZWjnaWX03VVidwYk4t6jVXcVFBvgASTyRmBLsVUbv+5+kYQxkgcLBq2/46sX/G&#xA;Cb/icWAs4prgZOxVD/pC2/SJ074/rIh+sU4Pw9Plw/vKcOVf2a19sNbWi96RGBLsVdiqHee8GoRQ&#xA;LalrR43eW85qAkilQkfp/aPMFjXoKe+GtkXuiMCXYqluiHRuWo/oytfrkv16vq/71UX1Kep2pT7H&#xA;w/jkpXtbGNb0uvFJ1jTiLW2lAE9bqVgJ4qqu0C8WLc/26MKAd8RyKnmEdNNFDE80zrHDGpeSRyFV&#xA;VUVLMTsABkWTasrqHQhlYAqwNQQehBxVQvf7tfn/AAwhjJ45+aWl6Xq35k+SbJ76W01JBdtEsMyx&#xA;NxdVCSpHJHIkjxMhdd9iBUNUDCgPRPLWkz6XNZ2cuoXGoGG3uR9YumDyuGnjdebU5EqrcevQYCmL&#xA;J6e+Bk6nvirqe+Kup74q6nviqW6Npclg2oF/QH1y8kul+rxel8Lqo/e1Z+cnw/E+1fDJSldMYxq2&#xA;73XLOz1jTdJl5fWtUE5tiDGF/wBGQO9QzKx2bbip96YiJIJ7lMgCB3ojUUsH0+6XUTH+j2hkF565&#xA;UReiVPqeoW+Hjxryr2wC72SardVtltxbxC24i3CKIRHx4cKfDx47cadKYlQoWcOpJcXjXdzHNBJI&#xA;Gso0j4NFHwUFHYs3M8wWrQdcTSgFVnsrSeWGWeGOWW2YvbyOis0bkFSyEiqniSKjEFSFanvgS6nv&#xA;iqhd/wBz17jCGMnjPn3RbHXPzi8u2Ud9LZalb6ZcytNbzpHNEsolWCaOGSN0kZXjfueOxp3woHJ6&#xA;XoGnS2FzaWr3k956NtMiy3BDyECWMqXcjkzcSASTvSuApiyKnvgZOp74q6nviqHv7+y0+1a7vrhL&#xA;a2QqrzSEKgLsEWpPizAYQCeSCQOaIp74Eup74qlFxqdxH5psdMEiiC4tLid4yq8y0UkSqQ5kDUpI&#xA;dhGfmMmI+m2BPqpG6nDqEthPHp1wltespFvcSx+qiN4sgKcvvyIq92RutkVT3wJQWm22lQfW/wBH&#xA;CJfVuJJLz0SprctT1C9P29hWuSJPViAOitLY2ct1BdywpJdWocW07KpeMSAB+DEVXkBQ0wWU0vnt&#xA;4biCS3uEWaCZWjlikUMjowoyspBBBBoQcAKkLo40jjWOMBI0AVEUAAAbAADtilRvf7tfn/DCGMnk&#xA;Xn2aCH83PJTXDwJBIsyAzQVfnyogjnX4lJdl+E7fjUsQ9Ptv+OvD/wAw83/E4sBTFNsDN2KuxV2K&#xA;uxVLNEv2u21ENewXn1a9kgAgQp6IRVPoyVZ+Ui8t2FOvTJSFUxibtGy2VnLcw3MsEclzbcvq87Ip&#xA;eP1BR+DEVXkNjTrgtNITzGLc+XtUFykUlv8AVJ/WjuHMULJ6TchJIKlEI+0w6DDDmET5FE6cIRp9&#xA;qIVjWEQxiJYW9SILxHEI9F5LToabjAeaRyRGBKR69dX0Ws+X4rdpVhnu5FuhGGKFBbSsBIRDKKcg&#xA;KVdN+5ycQKLCRNhN7ydre0nnWNpmhjaRYUBLuVUnioFdz0GRAZEqOkXz6hpNlfyQPayXdvFO9rJX&#xA;nEZUDmNqgbrWh2xkKNLE2LVbv+5+kYhEnkWvT2sH596Abg249bSzHC0kNJRJyuQoSdTvyDkcG2Hb&#xA;dsLHo9Otv+OrF/xgm/4nFgLKKa4GTsVdirTKrCjAEVBod9waj8cVbxVJfKel3+nWV3FexwRSS313&#xA;cRi2LkGKaZnRn9Rm+Ngamm2TnIE7dzCESBv3phJdaamqQW0jxjUpYZHgQ09UwoyCTievHkyVH9Mj&#xA;RryZWL8199f2VhaS3l9PHbWkC8pp5WCIo8Sx2xAJ2CkgblXwJSjy7pt5ZPqxulRfreoTXMBQoaxO&#xA;qBS3CKGjfD+1yP8AlHJzINe5hAEX703yDNRvZbiGznmtoDdXMcbvDbBlQyuqkrHzb4V5Hap2GEc0&#xA;HkvheR4Y3kT0pGUF4yQ3FiN1qNjTAlLRq1vez3trFHOkmnzLDM0sTxxuWjEgMTsAsgo1DQ/gQTLh&#xA;pgZWwzz55Al82axoUs00S6RpzTm/tz66zyiZFC+lNDLF6ZBQH+yoKgFkXlrQdN0Say0/T1eO1t7a&#xA;5WKNndgA80cjbE0+0xp4DYbYCyiyamBk6mKoWTTLWTUodRYyfWYIpIIwJZBHwlKs1Yw3AmqDciuG&#xA;9qRw72iqYEupiqWaIE5alxe9b/TZK/XgygHiu1tyC1g/lIqK13yUujGPVM6ZFkhtSZo9PunS2N6y&#xA;QyMtmCtZiFJEQ5/D8f2d9sI5oPJVgJaCNmjMLMoJhJBKEj7J4krt02NMBVBaaLMX2pCHUXvJTMpu&#xA;LVpUkFq3pqBGqqA0YZQH4t4175I8hsgVZ3V7t9SW5tFtYY5bZ5GF9JJIyPHGEYqY1CsHJegNSMAp&#xA;JtFUwJdTFUvkv7eae6s0EgmtPTMpeN1QiUErwdgFfpvxJp3yVdWBPRgvnP8ALoeafNGkX15LF+h7&#xA;GC4iu7YCZbiVplonCVJEVVU/aBU8hUEHsotlHl/RrHSZ7KxsldLa2tJIokaR3oqvFT7RPj/DpgLK&#xA;LIqYGTqYqhf0bbfpL9JfvPrPo/V/7x/T9Pnz/u68OVf2qV7Yb2pFb2iqYEupirqYqhnsuWoRXn1i&#xA;ZRFG8X1ZXpC3MqebrSpdeFFNdqnDe1Ire1mr6ZHqem3FhJNLAlyhjaaBgsig91LBxX5jGJo2so2K&#xA;RlMCUv0jU5NQN8JLK4svqd1Jap9YUr6yxhSJ4v5o35fCfbJSjTGJtXnbUBe2ywRRvZsJPrcryMsi&#xA;EAen6aBWD1NQ1WFPfAKpJu3ajfWunafdahdsUtbOGS4ncAsRHEpdjQbnYYgWaUmhapa3EF1aw3Vu&#xA;/OCdFlifcckcBlNDQ7g4kUoNrL0fu1+f8MQiSW3t7a2NnPe3kqwWlrG81xO5oqRxqWd2PgqipwsE&#xA;N5d1rTNals9T0ycXNjPb3PpTAMtSk0cbDi4VhRlI3GAs4sjwMkNp9+l7FJIkM0IjlkhK3ETwsTGx&#xA;XmocAlGpVW7jCRSAbROBLsVdirsVdirsVdiq1I40Z2RArSHlIQACzUC1PieKgYquxV2KuxVRu/7n&#xA;6RhDGSTarqunaTp1xqWpXCWthaoZLi4kNERB3OFg7QtUsNVmtNQsJRPaXFtM0UgDLWkkYIKsAykE&#xA;EEEVBwFnFP8AAyQ2m36X9ml0kM0CuWAiuY2hlHBinxRuAwrxqPEb4SKKAbCJwJdirsVdirsVdirs&#xA;VdirsVakjjkjaORQ8bgq6MKgg7EEHtirYAAAAoBsAMVQ97/dr8/4YQxkgyARQ7g9RhYITR9MsLC/&#xA;tLe0gWKKC0mjiA3IT1Ijx5GrdffAWUU/oPDAzdQeGKuoPDFUPqGn2uoWU1ldKxt51KSiN3iYqfB4&#xA;yjr9Bwg0bQRYpXCqABTp474EqVtd2Vz6v1aaOf0JGhm9NlfhKn2kbiTxYV3B3wkEIBBVqDwwJUbs&#xA;XItJjZrG12I2+rrMSsZkoeAcqGYLy60GEIPkviEhiQyqqy8R6ioSVDU3oSASK+2BK+g8MVdQeGKu&#xA;oPDFXUHhiqhdgej9IwhjJAsqspVgGVhRlO4IPY4WCWQeW9GM+n2CwGO2sYFFssUkkbKLSSEwqXVg&#xA;7KvEbMSD3xukgWyig8Mi2OoPDFXUHhiqjd3dnZwNcXc0dvApUNNKyogLsFUFmIHxMwA98IFoJAVq&#xA;DwwJdQeGKoZ/r/1+JUjhOn+m/rSMzCYS1X0wqBeJXjy5EtXph2pG9omg8MCXUHhirqDwxV1B4Yq6&#xA;g8MVdQeGKoe9A9Nfn/DCGMkuup/q9tLP6by+kjP6UQ5SNxFeKL3Y9AMLBC6Bq9vqdzZXkMckcdxa&#xA;TyIsi78fViXcqXSppWnKuAs4sjrgZOrirq4q6uKuriqyOGCIuYo1QyMXkKrTkxABZqDc7dcUKM8F&#xA;y95bTR3TxQQ+p69qEQrNzAC8mZS68DuOJFe+EHZTzRNcCXVxV1cVdXFXVxV1cVULs/ufpGEMZJXf&#xA;XX1SzmuvRlnEKFzDAvOVgorRE/abwGFgpaHqdvqNzZXkAcRXNm88RYVBSRoip5KWQ1G+zHAWcWQV&#xA;wMnVxV1cVQWsWMmoafJaRTm1dyhE/pRzceDq/wBiVXQ1403G3Ub5KJosZCwja5Fk6uKurirq4q6u&#xA;Kurirq4q6uKuriqHvT+7X5/wwhjJB4WDH/Nej6nPoH1Xy6lrb38Tx/VfWRREirIrMAODgCg3AXcb&#xA;bdcUhOP0dp//ACyw/wDItf6Yrbv0dp//ACyw/wDItf6YraUSaNfHzXBOkVsNBSykSWLgnM3TSqVN&#xA;OFacF68vo3ritpv+jtP/AOWWH/kWv9MVt36O0/8A5ZYf+Ra/0xW0ktYP0XDq175gjtBbtek2Atom&#xA;kItnWKKCMoE5tM8m3BAasQFritqEfnL8tnihl/SWnJHcJLLC8hSMMkB4yN8YXZTiu6y9utM8xeWt&#xA;S/wZcafd35iKWtyoR4Q7jZgyhgdq8SKio+eKsgtdNtxbRC5toDcBF9YoiledPi4niu1fbFbVf0dp&#xA;/wDyyw/8i1/pitpLrOi6pLreiS6alpHpUEszazFJGvqSIYisIj+E9HJJ3HbFbTr9Haf/AMssP/It&#xA;f6Yrbv0dp/8Ayyw/8i1/pitse0fSPNNr501O7upLNvLksKpp0UMYjnRhwID0XsfVqee447ChxW2U&#xA;4oY/5l0fU5rPTYNDS1hFrdQeskqKFWzT7ccQ4OF3VNhSqilRilOP0dp//LLD/wAi1/pitu/R2n/8&#xA;ssP/ACLX+mK2k8ejX481zztDbfoBrKNI4uCGQ3QlYlqcAVAQ/wAxrXoKbq2nH6O0/wD5ZYf+Ra/0&#xA;xW3fo7T/APllh/5Fr/TFbY3BcW2gaW83msWiTTXlybb6pDJOPQaR5IlKrGXqkX2zxoMVVE83/lw1&#xA;09p+kdOS7RIpXt5DHHIEnWN4iUfi3xrMhHzxXdC6jf6X5j8v6pb+Rr3S7zV440VJ0Mc0MRkcqeTR&#xA;hwG4xvx8GG+KsoTTbHgvO1h50HKiKRXvTYYra79Haf8A8ssP/Itf6YraS3+i6o/mjSbizS0TQoor&#xA;ldVgeNfVd3C+iU+E/ZZd9xtXFbTr9Haf/wAssP8AyLX+mK279Haf/wAssP8AyLX+mK2x7ytpPmyy&#xA;1/XJtWks30qeYNo62qBJEi/llHAfEAAD8RB26HlVVlOKEJqWr6TpcKT6newWMMjiKOW5lSFWkYEh&#xA;FZyoLEKdsUq9vcW9zbxXNtKk9vOiyQzRsHR0cclZWWoIINQRihUxV2KuxV2KqF9YWWoWktnewJc2&#xA;sw4ywyKGVh13B998VSr/AAP5O/cf7hrPjbwSWkKeinBYJRxkj4048WXY7dMU2jdJ0DRdHR00qyhs&#xA;Y5AitFAgjQLEvBFVFoqqo6ACmKo/FDsVdirsVdirsVdiqHv9R0/TrV7vULqGztI/7y4uJFijX5u5&#xA;CjFVHRdb0nXNMg1TSbqO90+5XnBcRGqsP1g+IO4xSjsUOxV2KuxVL9b8vaFr1mLLWbCDULQMHEFy&#xA;iyJyG1aNXxxSgl8ieTBcSXP6Fs2uJfS9SV4UdiIEjjiFWB2RIUAHTbFbRWjeWPL2iPM2j6fBp/rr&#xA;GkqWyCJCsXLgOC0UU9RugxVM8UOxV2KuxV2KuxVCaxZte6Te2SU5XNvLCtXkjFZEKirxFZF6/aQh&#xA;h23xSw7/AJV9brpmg6fNBLeNoksl/bWFlcvaoZvrCkETuRMBCJy4HqCvEDoSCgJvueh6LpFtpGj2&#xA;OlWzO9vYQRW0LyFS7JEgQFioUciBvQDIs0Zx/wA9sVdx/wA9sVdx/wA9sVdx/wA9sVdx/wA9sVdx&#xA;/wA9sVdx/wA9sVdx/wA9sVdx/wA9sVdx/wA9sVdx/wA9sVdx/wA9sVUbsfufpGEMZJB5k0Vdb0G/&#xA;0lpnthewtEJ4yyshYbMCjRtsfBh88LFKE/L3RrrT7Dy7fSzXGnWtvKFQMsZI5KrLVVDKrRysnwmq&#xA;j7JDAHAWUWS+V/Kuk+WdMOm6UJFtOZdVlcyso4qirzarEKiKoLEk0qSTU4GScU98VdT3xV1PfFXU&#xA;98VdT3xV1PfFXU98VdT3xVDWUt/Kbj63bi29OZktysgl9SEAcZD8K8C1T8O9PHCaQLRNPfAl1PfF&#xA;XU98VQ97/dr8/wCGEMZIPCwW23/HXh/5h5v+JxYCyim2Bm7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;o3f9z9IwhjJA4WDVt/x1Yv8AjBN/xOLAWcU1wMnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPe/3a/P&#xA;+GEMZJddW0N1bS20684J0aOVKkVRxxYVFD0PbCwUdI0zT7C/tbezgSGKK1nSMAVIUyxMRU1O7GuA&#xA;sop/QeGBmhXGpfpKPh6H6M9J/WqH9f1uS8OP7HDjyrXetMO1eaN78kVQeGBLqDwxVDalNdwWM81l&#xA;ai9u41LQ2vNYvUbsvqMCF+Zwjnug8tkQu6gstCRuOtDgShp70Q31rafVppPrQkP1iNOUMfpAGkr1&#xA;+HnX4fHCBsgndFUHhgS6g8MVdQeGKuoPDFXUHhirqDwxVQuwPR+kYQxkld9ZW19ZzWd0nqW1whjl&#xA;SpUlWFDRlIYfMGuFg1pdhZ2mo28VtCkSR2ssaBR0VXioK9cBZxTyg8MDJ1B4Yq6g8MVdQeGKuoPD&#xA;FXUHhirqDwxV1B4Yq6g8MVdQeGKoWeW+W+tYobVJLOQSG6uTJxaIqB6YWPifU5moPxCnvhFUg3ap&#xA;dzfV7Sa4WF7gwxtIIIQDI5UE8EDFQWalBUjEBSvhcSwxyGNoy6hvTcAMtRWjAV3HfAlAOupCW5N0&#xA;8DWxlX6isSOsgj4Dl6pZmDNzrTiBtktmBtiPnD8zPLnlLWNJ0vVxOsusCZ7eeNFMMaWwDTPK7OnF&#xA;Y0bkeu2KKTKxv9J8zx28mm6jKltd28zxXNqzQTUhuYg1OYDqOcZRqr4jEGlq2XVHjkWx1R44q6o8&#xA;cVQthYW9kJxC8jfWJpLiT1ZHlo8pqwTmW4p4Kuw7YSbQBS3V766stMubu0s31G5hQvFZRMiPKw/Z&#xA;DOQo/wA6VO2MRZRI0EUj8kVmUoWAJRiKgnseJI29jgZIW5vpotQs7VIBJDciUyzmVF9P01BUCM/E&#xA;/Kv7PTvhA2QTujKjxwJdUeOKqN48y2k7W7xpOsbmJ5q+kHCniXoQeNetO2EILrN5mtIGuHjedo0M&#xA;rw19IuVHIpUk8a9K9sSoU7tdRae0NpNDHAspN8sqM7PFwagjIZQrc+O5B2xFKbRVR44EqF2R6P0j&#xA;CGMmB+a/zR8ueVvMVhomrx3MR1CCW5XUAiG0iigDNKZpC6svELX7J6im+FjTI9D1fTtTu7S7sZ1m&#xA;hmtZZIzQq3EyRjdGCuu4IoRgLKLIKjxwMnVHjirqjxxVC6lHfy2bJp9xHbXZaMrNLH6qBQ6mQFAy&#xA;V5ICB8QwiuqDfRFVHjgS6o8cVQz2cb38V6ZZQ8UbxCFZWELByp5NEDwZl4fC1NqnDe1Ire1W4uba&#xA;3hee4lSGGMcpJZGCqo8SxoBgAUlUqPHFKVaDfalctqYvxGPq99LDa+nw3gVVKFuMkvxfEa14n/JG&#xA;SkAKphEk3a6+tzJrml3As2mWBbgNeC4Mawc1UUaAECb1KUFQeNK98QdikjcJnUeORZOqPHFUuee+&#xA;kkuUuLZYYYpVW1lWT1DMhQMXK8V4UYlaVPSuSoMCS8387z6i35m+TbaNI5bIGd5Qs7xzIWG7GEBl&#xA;kQ8B9obfFv4KA9BsoootUhSJFRPQnPFQAKmSIk0HiTXAUxTjAzQrzaiNTihS2RtPaJ3luzJR1lDK&#xA;EjEXHcMpJ5cu2Hakb2isCVCzv7K9ExtJ0nFvK9vPwIPCWM0dG8GU9RhIIQCC1qF21nYz3S28t0YU&#xA;Li2t1DSvTfiisVBY9t8QLKk0FdSSoJBUkVKmlR7bVGBKlLY2Ut1BdywRyXVqHFtOygvGJAA/Bjuv&#xA;IChphsooK2BLsVU7qK2ltporpUe2kRlnSShQxsKMGrtQjrhCC61itoraGK1VEto0VYEjoEEaiiha&#xA;bUA6YlQgtVXVDeaWbIyC3FyTqHAxAGH0ZKcvUBYj1OH2KNhjW9ole1JjkWSAlbUTPdLPHEtkPT+p&#xA;yI7GRiQfU9RSoVaNTjQmo8MlswNvLddnupfz78v2bSLLZR6PcSG1eTh6bTNMrSCPkvqmQRKtOLcQ&#xA;GO21VHR6XZoiapEqKFX0JzRRQVMkRJ28TgLKKbYGTsVdiqG1I6mLNjpgha85JwFyXWLjzHqVKBmr&#xA;6fLjt1p2wiuqDfRE4EoXTpNSkhkOoQRQSiWRYlhkMoMIciJ2LKlGZaErvTxwmuiBfVt7SZtQiuhd&#xA;SrDHE8bWY4ek7OykSNVefJeNBRqbnG9lrdR1640a20e6n1r0jpUaVu/XT1IuFf2kIbkPowxBvbmi&#xA;RFb8kfkWSVaA8rHU/U0ldKC30wQqUP1paL/pZ4KtDJ71O3XJy6b3swj12rdNcgzdirsVQ97/AHa/&#xA;P+GEMZPF/wA2rxNH/MXyTrZsxetH9aRYYoJJrnivpiQx+mCxPGX4V6V36CoUBmxuLzzVpcP6Jnut&#xA;Bu7yCRop54WWaEQ3kIcFUdQeaxsBSTdTXpkoyANkWxMSRQNM6rkG11cVdXFULYafb2KzrC0rC4nk&#xA;uZPVkeSjynkwTmTxXwVdhhJtAFN6jfJY2M940M06wKXMNtG00z0/ZSNQSxOIFlSaFohXDKGFaEVF&#xA;QQd/Y74EpdfPpQ1rTBcTOmoEXH1GFXlVZBwX1uaL8DcRSnPp23yQuixNWEyrkWTq4qpzwwXEElvP&#xA;GJYJlaOWJxVWRhRlYHqCDiCgughgt4I7eCMRQQqscUSCiqiiiqoHQADElQhNQl1lLrT10+GGW1eY&#xA;jUnmZldIfTYhogAQzcwo3/tEhW9oJO1I+uRZICTUrOee6sonLXNn6ZuE4sAvqgsnxEBTUDsdu+Sr&#xA;qwJHJ5V578w+YNB/MzRLu3jmvdHlspFuNMtZG9VzGZDJJ6PJI3KIysvLwbpSoUB6F5f1aLU57K8S&#xA;Ce3FxaSSiG5iaORQzxbN1WvyJ8emAsosirgZOriqG+vD9I/UvQmr6PrfWeB9D7XHhz/n78fDDW1o&#xA;vemtS1K006ze8u2dbeMqGKRyStV2CLRI1dz8TDoMQLNKZULRVcCUPYyX7RyG+jjikEsgjELs4MQc&#xA;+kzclSjFKchvv3wmuiBfVp7C2fUItQbn9ZhieGOjyBOErKzVjB4E1jXciuN7Utb2g/NOknWPL99p&#xA;ixQzNdR8FiuvVELGoNHMLJJTb9k4YSo2xnGxSa1yLNJfLKqj6xTUJ7/lqM7ETpKv1clU/wBHj9Tr&#xA;GnVSvw77ZOfTbowh136p1XIM3VxV1cVS54r5JLl7i5WaGWVWtIli9MwoEClC3JvUqwLVoOtMlswN&#xA;oK40vT7i8gvJoFe6ta+hKeqV60xYtXEt/FeRvYW6XV0IXCQySeipBmgDkvxenFCW+ya9MduqRfRP&#xA;8i2OxV2KuxVDalHqElhOmnTR298yEW80yGWNX7FkVkJ+/CKvdButkQvLiORBam5AoK/LfAlvFXYq&#xA;lWj6JPp9/q91JeyXS6pcrcxwvXjAFhSLgtWbb93XoMlKVgeTCMaJ801yLN2KuxV2KqN3/c/SMIYy&#xA;SeTS9Pk1CLUXgVr6FTHFcH7Sqa1A/wCCOFgibb/jqxf8YJv+JxYCzimuBk7FXYq7FXYq7FXYq7FX&#xA;YqlWgaEdJOpk3ct2dRvpr797v6QlCgRJufgXhtkpSumMY1fmmuRZKN814tlcNZIkl4sbm2jlJWNp&#xA;Qp4B2AJClqVIGEc90G62XwmYwoZgqzFR6ioSyhqbhSQpIr7YEoF4dQSW5e5uUmt5ZVa0hWL0zCgQ&#xA;BlZ+TepVgWrQdaZLZgbQt9HdyWVxHZzLb3jxuttO6eqkchUhHaPknMK25XkK+OLFLPJba40WnHWJ&#xA;DPeta3LTTyRi3kNZ4+AaFRxUiPjWh64Cziy7fAyQr6gq6lHYehMXlieYXAjcwKEZV4NLTiHblUL4&#xA;A4a2tF70it8CUNYw38Qn+t3K3POZ3gKx+l6cLH4IzQtyK/zbV8MJpAtE74Eu3xV2+Ku3xV2+Ku3x&#xA;V2+Ku3xV2+KqF3X0fpGEMZJNq8Gpz6Zcw6XdJZai6EWt1LF66Rv2Zo+Sch7csLFDeUpNWki0x9SL&#xA;PcyWLvLJKghm5M8RAlhUcEcKQHCmnKtMBZRZTvgZJZ5cnvZ9HhlvGna4Z5eRuoVt5qCVwgaJKqKL&#xA;Sh7jfvkpgXsxgTW6Z75Fk7fFXb4q7fFXb4q7fFXb4q7fFXb4q7fFXb4qh72vpr8/4YQxkg8LBbbf&#xA;8deH/mHm/wCJxYCyim2Bm7FXYq7FXYq7FUNPNfrfWsUNsslnIJDdXJl4tEVA9MLHxPqczUH4hT3w&#xA;iqQbtE4EuxVTuraG6tpradeUM6NHKoJUlXHFhVSCNj2wg0gi3WttDa20NtAvGGBFjiUksQqDioqx&#xA;JOw74k2oFKmBLsVQU99ZSyT2kU8cl1a+mbmBWBeMSAlOajdeQFRXDRYkhQwsGrb/AI6sX/GCb/ic&#xA;WAs4prgZOxVLxqbf4gOl1g4i0F1T1f8ASKmQx/3PH+72+3y67UyXDtbHi3pMMiydirsVQ76fZvqE&#xA;WoNHW8hjeGKWpqI5CrOtK03KL2w2apFC7RGBLsVdirsVdirsVQ97/dr8/wCGEMZJddRzSW0scEvo&#xA;TujLFPxD8HIor8Ts3E70OFglNpeaholvaXmvXMdwY4ngurhBHEvqzzxiPd2hXj0X7OAsgU//AEs/&#xA;/LHP/wAkf+quNMuJ36Wf/ljn/wCSP/VXGl4nfpZ/+WOf/kj/ANVcaXiQ9n5ltr1JHtYJJlileCQo&#xA;0DcZImKuppLsQR0xpbRH6Wf/AJY5/wDkj/1VxpeJ36Wf/ljn/wCSP/VXGl4lJ9fRJ44HtZlkmDGM&#xA;Ew/FwoSB+960NcaW1X9LP/yxz/8AJH/qrjS8Tv0s/wDyxz/8kf8AqrjS8SybXFhieaa2ljijUvJI&#xA;7QKqqoqWYmWgAGNLxNW+urcQRzxWk7RSorxt+53VhUH+98MaXiVP0s//ACxz/wDJH/qrjS8Tv0s/&#xA;/LHP/wAkf+quNLxIWLV7K6vLq1ihKXcIja7NYiRyB9MPwd2rxFRUdMWJLV9a/W7Oa29aW3MyFBPA&#xA;3CVCRTkjUNGHbbCxSyyurnQ7fS31aVZpPQSzmdXHx3czRj4XuJEZg7A8R9rAWQKe/pd/+WKf/kj/&#xA;ANVcaZcTv0u//LFP/wAkf+quNLxIdfMdq2oPZi2k+upEsrRcrf1PSdiobj6vLjyXFbRH6Xf/AJYp&#xA;/wDkj/1VxpeJ36Xf/lin/wCSP/VXGl4lODX1nVmitJmCO8bUMBo0bFWG0viMaW1T9Lv/AMsU/wDy&#xA;R/6q40vEo3nmKKztJru5tpYreBDJLI7QKqqoqSSZQMaW1Yaw5FRZzkHoaw/9VcaXid+l3/5Yp/8A&#xA;kj/1VxpeJQk8y28V5DZyQSLc3Cu8ERa3DOIuPPiplqach0xpbV/0u/8AyxT/APJH/qrjS8Tv0u//&#xA;ACxT/wDJH/qrjS8SEt/MNjqU9xaQf39mwE6F4WKk1G6xyOw3BG46g+GIYkojCxS7XtA0vXtNfTdT&#xA;iMtpIVZ0V2jJ4mtOSFTQ9D7YpTHFDsVdiqX6PoenaPHcx2KMq3dzLeTl3ZyZZjVjViTQUAUdgABt&#xA;ilMMUJN5sj8zPosq+W3jTVKgxmVlQEDqAzRzqKmlaodq9DQhSwhvLn5tXF5pmoXU2my6vplnwivm&#xA;9QIJri4pcUjQqrBrdVDAoKEDg1SaKso8m/8AKxfVuP8AGH6PP7qIwHTQ4iEm/qAeqTId/wCbanGm&#xA;/LFWUYoQmr6VY6vpd1pl/H6tleRtDcR1I5I4oRUb4qq2dpBZ2cFnbgrBbRpDEpJYhEUKoLMSTsOp&#xA;xVWxV2KpfZaDpdlquparbRcL7VjC1/JyY8zbx+lHsTRaJttilMMUJdrWgaXrMdtHqERlWzuEu4OL&#xA;slJYwQD8JFRxcgg7EHFKY4odiqXpoenLrsmuBG/SElstmzl2KiJXMlFQnipLfaI60FegxSmGKHYq&#xA;x660C40ny7eWflNRbXk07XS+pITWSecS3JEky3AVnDPxLIyhj9mmKWMrH+fYttOjMuh/XPRlbU5i&#xA;szW/rGWYxrEo4SUWP0RU/wCV12xXZOtM0LXte8rXukfmBFbTSXE5UrYs6RvChR42BBDqfUUn5Uri&#xA;rLEUIiov2VAAqSTQe5xQ3iqW3fl3SbvW7DW54eWpaYk0dnNyYcFnULJ8IPE1A74pTLFDsVSXRfJ3&#xA;l7RdV1PVNNtvQvNXk9e/YO7K8p6uEYlVLbV4gVpilkH+if5f4YE7O/0T/L/DFdnf6J/l/hiuzv8A&#xA;RP8AL/DFdnf6J/l/hiuzv9E/y/wxXZ3+if5f4Yrs7/RP8v8ADFdnf6J/l/hiuzv9E/y/wxXZ3+if&#xA;5f4Yrs7/AET/AC/wxXZ3+if5f4Yrs7/RP8v8MV2d/on+X+GK7O/0T/L/AAxXZv8A0P8AysV2d/of&#xA;+Viuzv8AQ/8AKxXZ3+h/5WK7O/0P/KxXZ3+h/wCViuzv9D/ysV2d/of+Viuzv9D/AMrFdnf6H/lY&#xA;rs7/AEP/ACsV2d/of+Viuzv9D/ysV2d/of8AlYrs7/Q/8rFdnf6H/lYrs//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>297.000132</stDim:w>
            <stDim:h>210.001652</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>7.0d20e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grupo de muestras por defecto</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ED7F117407206811B1A49FA2FD626ABD</stRef:instanceID>
            <stRef:documentID>xmp.did:ED7F117407206811B1A49FA2FD626ABD</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:ED7F117407206811B1A49FA2FD626ABD</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:EE7F117407206811B1A49FA2FD626ABD</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:EE7F117407206811B1A49FA2FD626ABD</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:ED7F117407206811B1A49FA2FD626ABD</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED7F117407206811B1A49FA2FD626ABD</stEvt:instanceID>
                  <stEvt:when>2012-07-04T14:45:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EE7F117407206811B1A49FA2FD626ABD</stEvt:instanceID>
                  <stEvt:when>2012-07-04T14:45:28+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -575.367 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 575.367 li
790.153 575.367 li
790.153 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.288086 288.28 mo
.288086 .279297 li
396.289 .279297 li
396.289 288.28 li
.288086 288.28 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.917647 .94902 .952941 rgb
f
.288086 288.28 mo
.288086 .288086 li
396.277 .288086 li
396.277 288.28 li
.288086 288.28 li
f
.576 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
.288086 288.28 mo
.288086 .288086 li
396.277 .288086 li
396.277 288.28 li
.288086 288.28 li
@
39.3564 249.212 mo
39.3564 10.374 li
386.191 10.374 li
386.191 249.212 li
39.3564 249.212 li
1 1 1 rgb
f
39.3564 249.212 mo
39.3564 10.374 li
386.191 10.374 li
386.191 249.212 li
39.3564 249.212 li
@
.864 lw
39.3564 16.71 mo
386.191 16.71 li
39.3564 61.9404 mo
386.191 61.9404 li
39.3564 107.171 mo
386.191 107.171 li
39.3564 152.401 mo
386.191 152.401 li
39.3564 197.646 mo
386.191 197.646 li
39.3564 242.876 mo
386.191 242.876 li
.917647 .94902 .952941 rgb
@
148.159 201.519 mo
148.159 200.31 147.177 199.329 145.968 199.329 cv
144.759 199.329 143.778 200.31 143.778 201.519 cv
143.778 202.728 144.759 203.71 145.968 203.71 cv
147.177 203.71 148.159 202.728 148.159 201.519 cv
.101961 .278431 .435294 rgb
f
148.159 201.519 mo
148.159 200.31 147.177 199.329 145.968 199.329 cv
144.759 199.329 143.778 200.31 143.778 201.519 cv
143.778 202.728 144.759 203.71 145.968 203.71 cv
147.177 203.71 148.159 202.728 148.159 201.519 cv
@
248.359 210.759 mo
248.359 209.55 247.376 208.569 246.167 208.569 cv
244.958 208.569 243.978 209.55 243.978 210.759 cv
243.978 211.968 244.958 212.95 246.167 212.95 cv
247.376 212.95 248.359 211.968 248.359 210.759 cv
f
248.359 210.759 mo
248.359 209.55 247.376 208.569 246.167 208.569 cv
244.958 208.569 243.978 209.55 243.978 210.759 cv
243.978 211.968 244.958 212.95 246.167 212.95 cv
247.376 212.95 248.359 211.968 248.359 210.759 cv
@
148.159 94.7192 mo
148.159 93.5103 147.177 92.5288 145.968 92.5288 cv
144.759 92.5288 143.778 93.5103 143.778 94.7192 cv
143.778 95.9282 144.759 96.9097 145.968 96.9097 cv
147.177 96.9097 148.159 95.9282 148.159 94.7192 cv
f
148.159 94.7192 mo
148.159 93.5103 147.177 92.5288 145.968 92.5288 cv
144.759 92.5288 143.778 93.5103 143.778 94.7192 cv
143.778 95.9282 144.759 96.9097 145.968 96.9097 cv
147.177 96.9097 148.159 95.9282 148.159 94.7192 cv
@
114.679 152.319 mo
114.679 151.11 113.697 150.13 112.488 150.13 cv
111.279 150.13 110.298 151.11 110.298 152.319 cv
110.298 153.528 111.279 154.509 112.488 154.509 cv
113.697 154.509 114.679 153.528 114.679 152.319 cv
f
114.679 152.319 mo
114.679 151.11 113.697 150.13 112.488 150.13 cv
111.279 150.13 110.298 151.11 110.298 152.319 cv
110.298 153.528 111.279 154.509 112.488 154.509 cv
113.697 154.509 114.679 153.528 114.679 152.319 cv
@
181.519 154.479 mo
181.519 153.271 180.538 152.288 179.328 152.288 cv
178.119 152.288 177.138 153.271 177.138 154.479 cv
177.138 155.688 178.119 156.669 179.328 156.669 cv
180.538 156.669 181.519 155.688 181.519 154.479 cv
f
181.519 154.479 mo
181.519 153.271 180.538 152.288 179.328 152.288 cv
178.119 152.288 177.138 153.271 177.138 154.479 cv
177.138 155.688 178.119 156.669 179.328 156.669 cv
180.538 156.669 181.519 155.688 181.519 154.479 cv
@
181.519 145.839 mo
181.519 144.63 180.538 143.649 179.328 143.649 cv
178.119 143.649 177.138 144.63 177.138 145.839 cv
177.138 147.048 178.119 148.03 179.328 148.03 cv
180.538 148.03 181.519 147.048 181.519 145.839 cv
f
181.519 145.839 mo
181.519 144.63 180.538 143.649 179.328 143.649 cv
178.119 143.649 177.138 144.63 177.138 145.839 cv
177.138 147.048 178.119 148.03 179.328 148.03 cv
180.538 148.03 181.519 147.048 181.519 145.839 cv
@
81.3188 192.159 mo
81.3188 190.95 80.3374 189.97 79.1284 189.97 cv
77.9194 189.97 76.938 190.95 76.938 192.159 cv
76.938 193.368 77.9194 194.351 79.1284 194.351 cv
80.3374 194.351 81.3188 193.368 81.3188 192.159 cv
f
81.3188 192.159 mo
81.3188 190.95 80.3374 189.97 79.1284 189.97 cv
77.9194 189.97 76.938 190.95 76.938 192.159 cv
76.938 193.368 77.9194 194.351 79.1284 194.351 cv
80.3374 194.351 81.3188 193.368 81.3188 192.159 cv
@
181.519 109.599 mo
181.519 108.39 180.538 107.409 179.328 107.409 cv
178.119 107.409 177.138 108.39 177.138 109.599 cv
177.138 110.808 178.119 111.79 179.328 111.79 cv
180.538 111.79 181.519 110.808 181.519 109.599 cv
f
181.519 109.599 mo
181.519 108.39 180.538 107.409 179.328 107.409 cv
178.119 107.409 177.138 108.39 177.138 109.599 cv
177.138 110.808 178.119 111.79 179.328 111.79 cv
180.538 111.79 181.519 110.808 181.519 109.599 cv
@
348.679 139.119 mo
348.679 137.91 347.697 136.929 346.488 136.929 cv
345.279 136.929 344.298 137.91 344.298 139.119 cv
344.298 140.329 345.279 141.31 346.488 141.31 cv
347.697 141.31 348.679 140.329 348.679 139.119 cv
f
348.679 139.119 mo
348.679 137.91 347.697 136.929 346.488 136.929 cv
345.279 136.929 344.298 137.91 344.298 139.119 cv
344.298 140.329 345.279 141.31 346.488 141.31 cv
347.697 141.31 348.679 140.329 348.679 139.119 cv
@
81.3188 89.6792 mo
81.3188 88.4702 80.3374 87.4888 79.1284 87.4888 cv
77.9194 87.4888 76.938 88.4702 76.938 89.6792 cv
76.938 90.8882 77.9194 91.8696 79.1284 91.8696 cv
80.3374 91.8696 81.3188 90.8882 81.3188 89.6792 cv
f
81.3188 89.6792 mo
81.3188 88.4702 80.3374 87.4888 79.1284 87.4888 cv
77.9194 87.4888 76.938 88.4702 76.938 89.6792 cv
76.938 90.8882 77.9194 91.8696 79.1284 91.8696 cv
80.3374 91.8696 81.3188 90.8882 81.3188 89.6792 cv
@
215 230.679 mo
215 229.47 214.017 228.489 212.808 228.489 cv
211.599 228.489 210.619 229.47 210.619 230.679 cv
210.619 231.888 211.599 232.87 212.808 232.87 cv
214.017 232.87 215 231.888 215 230.679 cv
f
215 230.679 mo
215 229.47 214.017 228.489 212.808 228.489 cv
211.599 228.489 210.619 229.47 210.619 230.679 cv
210.619 231.888 211.599 232.87 212.808 232.87 cv
214.017 232.87 215 231.888 215 230.679 cv
@
315.199 137.679 mo
315.199 136.47 314.218 135.489 313.009 135.489 cv
311.798 135.489 310.818 136.47 310.818 137.679 cv
310.818 138.888 311.798 139.87 313.009 139.87 cv
314.218 139.87 315.199 138.888 315.199 137.679 cv
f
315.199 137.679 mo
315.199 136.47 314.218 135.489 313.009 135.489 cv
311.798 135.489 310.818 136.47 310.818 137.679 cv
310.818 138.888 311.798 139.87 313.009 139.87 cv
314.218 139.87 315.199 138.888 315.199 137.679 cv
@
215 116.559 mo
215 115.35 214.017 114.369 212.808 114.369 cv
211.599 114.369 210.619 115.35 210.619 116.559 cv
210.619 117.769 211.599 118.75 212.808 118.75 cv
214.017 118.75 215 117.769 215 116.559 cv
f
215 116.559 mo
215 115.35 214.017 114.369 212.808 114.369 cv
211.599 114.369 210.619 115.35 210.619 116.559 cv
210.619 117.769 211.599 118.75 212.808 118.75 cv
214.017 118.75 215 117.769 215 116.559 cv
@
215 121.719 mo
215 120.51 214.017 119.529 212.808 119.529 cv
211.599 119.529 210.619 120.51 210.619 121.719 cv
210.619 122.928 211.599 123.91 212.808 123.91 cv
214.017 123.91 215 122.928 215 121.719 cv
f
215 121.719 mo
215 120.51 214.017 119.529 212.808 119.529 cv
211.599 119.529 210.619 120.51 210.619 121.719 cv
210.619 122.928 211.599 123.91 212.808 123.91 cv
214.017 123.91 215 122.928 215 121.719 cv
@
248.359 122.799 mo
248.359 121.59 247.376 120.609 246.167 120.609 cv
244.958 120.609 243.978 121.59 243.978 122.799 cv
243.978 124.008 244.958 124.99 246.167 124.99 cv
247.376 124.99 248.359 124.008 248.359 122.799 cv
f
248.359 122.799 mo
248.359 121.59 247.376 120.609 246.167 120.609 cv
244.958 120.609 243.978 121.59 243.978 122.799 cv
243.978 124.008 244.958 124.99 246.167 124.99 cv
247.376 124.99 248.359 124.008 248.359 122.799 cv
@
181.519 167.438 mo
181.519 166.229 180.538 165.249 179.328 165.249 cv
178.119 165.249 177.138 166.229 177.138 167.438 cv
177.138 168.647 178.119 169.63 179.328 169.63 cv
180.538 169.63 181.519 168.647 181.519 167.438 cv
f
181.519 167.438 mo
181.519 166.229 180.538 165.249 179.328 165.249 cv
178.119 165.249 177.138 166.229 177.138 167.438 cv
177.138 168.647 178.119 169.63 179.328 169.63 cv
180.538 169.63 181.519 168.647 181.519 167.438 cv
@
248.359 126.399 mo
248.359 125.19 247.376 124.209 246.167 124.209 cv
244.958 124.209 243.978 125.19 243.978 126.399 cv
243.978 127.608 244.958 128.59 246.167 128.59 cv
247.376 128.59 248.359 127.608 248.359 126.399 cv
f
248.359 126.399 mo
248.359 125.19 247.376 124.209 246.167 124.209 cv
244.958 124.209 243.978 125.19 243.978 126.399 cv
243.978 127.608 244.958 128.59 246.167 128.59 cv
247.376 128.59 248.359 127.608 248.359 126.399 cv
@
181.519 221.679 mo
181.519 220.47 180.538 219.489 179.328 219.489 cv
178.119 219.489 177.138 220.47 177.138 221.679 cv
177.138 222.888 178.119 223.87 179.328 223.87 cv
180.538 223.87 181.519 222.888 181.519 221.679 cv
f
181.519 221.679 mo
181.519 220.47 180.538 219.489 179.328 219.489 cv
178.119 219.489 177.138 220.47 177.138 221.679 cv
177.138 222.888 178.119 223.87 179.328 223.87 cv
180.538 223.87 181.519 222.888 181.519 221.679 cv
@
248.359 164.56 mo
248.359 163.351 247.376 162.368 246.167 162.368 cv
244.958 162.368 243.978 163.351 243.978 164.56 cv
243.978 165.769 244.958 166.749 246.167 166.749 cv
247.376 166.749 248.359 165.769 248.359 164.56 cv
f
248.359 164.56 mo
248.359 163.351 247.376 162.368 246.167 162.368 cv
244.958 162.368 243.978 163.351 243.978 164.56 cv
243.978 165.769 244.958 166.749 246.167 166.749 cv
247.376 166.749 248.359 165.769 248.359 164.56 cv
@
181.519 134.319 mo
181.519 133.11 180.538 132.129 179.328 132.129 cv
178.119 132.129 177.138 133.11 177.138 134.319 cv
177.138 135.528 178.119 136.51 179.328 136.51 cv
180.538 136.51 181.519 135.528 181.519 134.319 cv
f
181.519 134.319 mo
181.519 133.11 180.538 132.129 179.328 132.129 cv
178.119 132.129 177.138 133.11 177.138 134.319 cv
177.138 135.528 178.119 136.51 179.328 136.51 cv
180.538 136.51 181.519 135.528 181.519 134.319 cv
@
382.039 168.399 mo
382.039 167.19 381.058 166.208 379.849 166.208 cv
378.64 166.208 377.658 167.19 377.658 168.399 cv
377.658 169.608 378.64 170.589 379.849 170.589 cv
381.058 170.589 382.039 169.608 382.039 168.399 cv
f
382.039 168.399 mo
382.039 167.19 381.058 166.208 379.849 166.208 cv
378.64 166.208 377.658 167.19 377.658 168.399 cv
377.658 169.608 378.64 170.589 379.849 170.589 cv
381.058 170.589 382.039 169.608 382.039 168.399 cv
@
248.359 137.439 mo
248.359 136.23 247.376 135.249 246.167 135.249 cv
244.958 135.249 243.978 136.23 243.978 137.439 cv
243.978 138.648 244.958 139.629 246.167 139.629 cv
247.376 139.629 248.359 138.648 248.359 137.439 cv
f
248.359 137.439 mo
248.359 136.23 247.376 135.249 246.167 135.249 cv
244.958 135.249 243.978 136.23 243.978 137.439 cv
243.978 138.648 244.958 139.629 246.167 139.629 cv
247.376 139.629 248.359 138.648 248.359 137.439 cv
@
315.199 99.2793 mo
315.199 98.0703 314.218 97.0889 313.009 97.0889 cv
311.798 97.0889 310.818 98.0703 310.818 99.2793 cv
310.818 100.488 311.798 101.47 313.009 101.47 cv
314.218 101.47 315.199 100.488 315.199 99.2793 cv
f
315.199 99.2793 mo
315.199 98.0703 314.218 97.0889 313.009 97.0889 cv
311.798 97.0889 310.818 98.0703 310.818 99.2793 cv
310.818 100.488 311.798 101.47 313.009 101.47 cv
314.218 101.47 315.199 100.488 315.199 99.2793 cv
@
248.359 147.159 mo
248.359 145.95 247.376 144.97 246.167 144.97 cv
244.958 144.97 243.978 145.95 243.978 147.159 cv
243.978 148.368 244.958 149.351 246.167 149.351 cv
247.376 149.351 248.359 148.368 248.359 147.159 cv
f
248.359 147.159 mo
248.359 145.95 247.376 144.97 246.167 144.97 cv
244.958 144.97 243.978 145.95 243.978 147.159 cv
243.978 148.368 244.958 149.351 246.167 149.351 cv
247.376 149.351 248.359 148.368 248.359 147.159 cv
@
248.359 99.7593 mo
248.359 98.5503 247.376 97.5688 246.167 97.5688 cv
244.958 97.5688 243.978 98.5503 243.978 99.7593 cv
243.978 100.968 244.958 101.95 246.167 101.95 cv
247.376 101.95 248.359 100.968 248.359 99.7593 cv
f
248.359 99.7593 mo
248.359 98.5503 247.376 97.5688 246.167 97.5688 cv
244.958 97.5688 243.978 98.5503 243.978 99.7593 cv
243.978 100.968 244.958 101.95 246.167 101.95 cv
247.376 101.95 248.359 100.968 248.359 99.7593 cv
@
281.718 171.999 mo
281.718 170.79 280.738 169.81 279.529 169.81 cv
278.32 169.81 277.337 170.79 277.337 171.999 cv
277.337 173.208 278.32 174.19 279.529 174.19 cv
280.738 174.19 281.718 173.208 281.718 171.999 cv
f
281.718 171.999 mo
281.718 170.79 280.738 169.81 279.529 169.81 cv
278.32 169.81 277.337 170.79 277.337 171.999 cv
277.337 173.208 278.32 174.19 279.529 174.19 cv
280.738 174.19 281.718 173.208 281.718 171.999 cv
@
315.199 143.559 mo
315.199 142.35 314.218 141.369 313.009 141.369 cv
311.798 141.369 310.818 142.35 310.818 143.559 cv
310.818 144.769 311.798 145.749 313.009 145.749 cv
314.218 145.749 315.199 144.769 315.199 143.559 cv
f
315.199 143.559 mo
315.199 142.35 314.218 141.369 313.009 141.369 cv
311.798 141.369 310.818 142.35 310.818 143.559 cv
310.818 144.769 311.798 145.749 313.009 145.749 cv
314.218 145.749 315.199 144.769 315.199 143.559 cv
@
215 77.4395 mo
215 76.23 214.017 75.249 212.808 75.249 cv
211.599 75.249 210.619 76.23 210.619 77.4395 cv
210.619 78.6484 211.599 79.6294 212.808 79.6294 cv
214.017 79.6294 215 78.6484 215 77.4395 cv
f
215 77.4395 mo
215 76.23 214.017 75.249 212.808 75.249 cv
211.599 75.249 210.619 76.23 210.619 77.4395 cv
210.619 78.6484 211.599 79.6294 212.808 79.6294 cv
214.017 79.6294 215 78.6484 215 77.4395 cv
@
315.199 71.0791 mo
315.199 69.8701 314.218 68.8887 313.009 68.8887 cv
311.798 68.8887 310.818 69.8701 310.818 71.0791 cv
310.818 72.2886 311.798 73.2695 313.009 73.2695 cv
314.218 73.2695 315.199 72.2886 315.199 71.0791 cv
f
315.199 71.0791 mo
315.199 69.8701 314.218 68.8887 313.009 68.8887 cv
311.798 68.8887 310.818 69.8701 310.818 71.0791 cv
310.818 72.2886 311.798 73.2695 313.009 73.2695 cv
314.218 73.2695 315.199 72.2886 315.199 71.0791 cv
@
281.718 74.3193 mo
281.718 73.1104 280.738 72.1289 279.529 72.1289 cv
278.32 72.1289 277.337 73.1104 277.337 74.3193 cv
277.337 75.5283 278.32 76.5098 279.529 76.5098 cv
280.738 76.5098 281.718 75.5283 281.718 74.3193 cv
f
281.718 74.3193 mo
281.718 73.1104 280.738 72.1289 279.529 72.1289 cv
278.32 72.1289 277.337 73.1104 277.337 74.3193 cv
277.337 75.5283 278.32 76.5098 279.529 76.5098 cv
280.738 76.5098 281.718 75.5283 281.718 74.3193 cv
@
315.199 161.919 mo
315.199 160.71 314.218 159.729 313.009 159.729 cv
311.798 159.729 310.818 160.71 310.818 161.919 cv
310.818 163.128 311.798 164.11 313.009 164.11 cv
314.218 164.11 315.199 163.128 315.199 161.919 cv
f
315.199 161.919 mo
315.199 160.71 314.218 159.729 313.009 159.729 cv
311.798 159.729 310.818 160.71 310.818 161.919 cv
310.818 163.128 311.798 164.11 313.009 164.11 cv
314.218 164.11 315.199 163.128 315.199 161.919 cv
@
281.718 95.4395 mo
281.718 94.23 280.738 93.249 279.529 93.249 cv
278.32 93.249 277.337 94.23 277.337 95.4395 cv
277.337 96.6484 278.32 97.6294 279.529 97.6294 cv
280.738 97.6294 281.718 96.6484 281.718 95.4395 cv
f
281.718 95.4395 mo
281.718 94.23 280.738 93.249 279.529 93.249 cv
278.32 93.249 277.337 94.23 277.337 95.4395 cv
277.337 96.6484 278.32 97.6294 279.529 97.6294 cv
280.738 97.6294 281.718 96.6484 281.718 95.4395 cv
@
281.718 154.72 mo
281.718 153.511 280.738 152.528 279.529 152.528 cv
278.32 152.528 277.337 153.511 277.337 154.72 cv
277.337 155.929 278.32 156.909 279.529 156.909 cv
280.738 156.909 281.718 155.929 281.718 154.72 cv
f
281.718 154.72 mo
281.718 153.511 280.738 152.528 279.529 152.528 cv
278.32 152.528 277.337 153.511 277.337 154.72 cv
277.337 155.929 278.32 156.909 279.529 156.909 cv
280.738 156.909 281.718 155.929 281.718 154.72 cv
@
348.679 142.959 mo
348.679 141.75 347.697 140.769 346.488 140.769 cv
345.279 140.769 344.298 141.75 344.298 142.959 cv
344.298 144.169 345.279 145.149 346.488 145.149 cv
347.697 145.149 348.679 144.169 348.679 142.959 cv
f
348.679 142.959 mo
348.679 141.75 347.697 140.769 346.488 140.769 cv
345.279 140.769 344.298 141.75 344.298 142.959 cv
344.298 144.169 345.279 145.149 346.488 145.149 cv
347.697 145.149 348.679 144.169 348.679 142.959 cv
@
315.199 88.2393 mo
315.199 87.0303 314.218 86.0488 313.009 86.0488 cv
311.798 86.0488 310.818 87.0303 310.818 88.2393 cv
310.818 89.4482 311.798 90.4297 313.009 90.4297 cv
314.218 90.4297 315.199 89.4482 315.199 88.2393 cv
f
315.199 88.2393 mo
315.199 87.0303 314.218 86.0488 313.009 86.0488 cv
311.798 86.0488 310.818 87.0303 310.818 88.2393 cv
310.818 89.4482 311.798 90.4297 313.009 90.4297 cv
314.218 90.4297 315.199 89.4482 315.199 88.2393 cv
@
215 123.759 mo
215 122.55 214.017 121.569 212.808 121.569 cv
211.599 121.569 210.619 122.55 210.619 123.759 cv
210.619 124.968 211.599 125.95 212.808 125.95 cv
214.017 125.95 215 124.968 215 123.759 cv
f
215 123.759 mo
215 122.55 214.017 121.569 212.808 121.569 cv
211.599 121.569 210.619 122.55 210.619 123.759 cv
210.619 124.968 211.599 125.95 212.808 125.95 cv
214.017 125.95 215 124.968 215 123.759 cv
@
315.199 130.959 mo
315.199 129.75 314.218 128.769 313.009 128.769 cv
311.798 128.769 310.818 129.75 310.818 130.959 cv
310.818 132.168 311.798 133.15 313.009 133.15 cv
314.218 133.15 315.199 132.168 315.199 130.959 cv
f
315.199 130.959 mo
315.199 129.75 314.218 128.769 313.009 128.769 cv
311.798 128.769 310.818 129.75 310.818 130.959 cv
310.818 132.168 311.798 133.15 313.009 133.15 cv
314.218 133.15 315.199 132.168 315.199 130.959 cv
@
215 25.1191 mo
215 23.9102 214.017 22.9287 212.808 22.9287 cv
211.599 22.9287 210.619 23.9102 210.619 25.1191 cv
210.619 26.3286 211.599 27.3096 212.808 27.3096 cv
214.017 27.3096 215 26.3286 215 25.1191 cv
f
215 25.1191 mo
215 23.9102 214.017 22.9287 212.808 22.9287 cv
211.599 22.9287 210.619 23.9102 210.619 25.1191 cv
210.619 26.3286 211.599 27.3096 212.808 27.3096 cv
214.017 27.3096 215 26.3286 215 25.1191 cv
@
281.718 109.239 mo
281.718 108.03 280.738 107.049 279.529 107.049 cv
278.32 107.049 277.337 108.03 277.337 109.239 cv
277.337 110.448 278.32 111.43 279.529 111.43 cv
280.738 111.43 281.718 110.448 281.718 109.239 cv
f
281.718 109.239 mo
281.718 108.03 280.738 107.049 279.529 107.049 cv
278.32 107.049 277.337 108.03 277.337 109.239 cv
277.337 110.448 278.32 111.43 279.529 111.43 cv
280.738 111.43 281.718 110.448 281.718 109.239 cv
@
181.519 100.719 mo
181.519 99.5103 180.538 98.5288 179.328 98.5288 cv
178.119 98.5288 177.138 99.5103 177.138 100.719 cv
177.138 101.928 178.119 102.91 179.328 102.91 cv
180.538 102.91 181.519 101.928 181.519 100.719 cv
f
181.519 100.719 mo
181.519 99.5103 180.538 98.5288 179.328 98.5288 cv
178.119 98.5288 177.138 99.5103 177.138 100.719 cv
177.138 101.928 178.119 102.91 179.328 102.91 cv
180.538 102.91 181.519 101.928 181.519 100.719 cv
@
.576 lw
39.3564 242.876 mo
35.3589 242.876 li
39.3564 249.212 mo
39.3564 10.374 li
0 0 0 rgb
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdup 127 /minus putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/minus <1C60D8A8C9B7F374C6243061E982D378A14DF0A305> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SJADSM+Helvetica /Helvetica findfont ct_VMDictPut/SJADSM+Helvetica*1 [49{/.notdef}rp /one 77{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 248.576 mo(\1771)[-5.83887 0 ]ysh39.3564 197.646 mo
35.3589 197.646 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 46 /period putdup 53 /five putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [46{/.notdef}rp /period 2{/.notdef}rp /one 3{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 204.732 mo(\177.)[-5.83887 0 ]ysh30.3506 196.107 mo(5)sh39.3564 152.401 mo
35.3589 152.401 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [46{/.notdef}rp /period /.notdef /zero /one 3{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 155.178 mo(0)sh39.3564 107.171 mo
35.3589 107.171 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 111.342 mo(.5)[-2.77783 0 ]ysh39.3564 61.9404 mo
35.3589 61.9404 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 64.7246 mo(1)sh39.3564 16.71 mo
35.3589 16.71 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-/R <1C60D8A8C9B6079F62E4AB3BE2637412A7FA2BF1A87387986CC045CAB872B149BF5CA8B183616945E928E44276850B6ACD583D0202E4733E2391A44F4BCB738AB089D22707E0F4100F2BC6F35BD460D56FBB8A5713D4AF8760EB8EC1E1AE6F49A9B2B1066A8DA04011CCA29E2BB62A652880D30D80185E3336BD5BF6EB5D116E1FAF0793D4F86835A22CB564EFB5339E311318AE2981A0679F359C9E7A1FF6CE964A> |-/V <1C60D8A8C9B64EDFA60949676B75C625C6948873966B83A549B84A6BD5D6EE9C83058CE085EB61> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/g <1C60D8A8C9B7EF322B9E33783F120324D4831FD54687FCF0A3239094C0D4E3AAB20B4037430546FA4664C0C2EC6F9AF25AB8C7F18077B54094AD8EBB679EA5C6D7AFD732ED61A8DCEA904021433763160B264DB52A614A19F2765FBBC5798DAD5FE93A7CA6F9AD05E8ADF7528A45B919107B69D8844684194FE7F92E944890ACD166034B8B64BAE18E8E65CE4B5414E043D7BFC474CE1F5EA604A5C9DC3A7BA914202197CB4B05F919B47B1EB5B22C18D76DC248F3694EA79BFDDDCC0F068EB1529F2B8631C6> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 47 /slash putdup 82 /R putdup 86 /V putdup 97 /a putdup 101 /e putdup 103 /g putdup 108 /l putdup 111 /o putdup 116 /t putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one 3{/.notdef}rp /five 28{/.notdef}rp /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 10{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 23.6621 mo(1.)[-5.56104 0 ]ysh30.3506 15.3262 mo(5)sh19.3506 161.186 mo(log\(tVR/tReal)[-2.22168 -5.56055 -5.56152 -3.32959 -2.77783 -6.66943 -7.2207 -2.77783 -2.77832 -7.2207 -5.56104 -5.56104 0 ]ysh19.3506 101.732 mo(\))sh45.6924 249.212 mo
45.6924 253.208 li
39.3564 249.212 mo
386.191 249.212 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf42.9131 262.201 mo(0)sh112.53 249.212 mo
112.53 253.208 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two 2{/.notdef}rp /five 28{/.notdef}rp /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 10{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf109.749 262.201 mo(2)sh179.354 249.212 mo
179.354 253.208 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /.notdef /four /five 28{/.notdef}rp /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 10{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf176.577 262.201 mo(4)sh246.193 249.212 mo
246.193 253.208 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 54 /six putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /.notdef /four /five /six 27{/.notdef}rp /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 10{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf243.413 262.201 mo(6)sh313.017 249.212 mo
313.017 253.208 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/eight <1C60D8A8C9B7EF322BB1E6B7658B273FB04B6EA2FDD83BE014315CEA310C9045661E4654F5FAA18E921C35D5D5266AB0AB839D962ABE974A291E63893114CACA79253F9F2FA5DBD832A15E9A146C3FAF70E186074467C5FF9BFF3446DA2979E197C33ECF2E6672D0ABB4DD84DADA6F0875D027C1012708E022D3B91B078729D3EB37FF9AB4379F6AE8761C6A64E65D5782F4A15C32B5788322C1277C7EEACA49FCEF1A946497EBAE7710FA41A32E95C02F9037E734AB7501DA6FA4D1255B1B5E2A30AD357C72139096879BB9225AA54D6163D99B65B907C933335C31755E7599F49EDF67E30B707AA1BB3DFB155476D77FA4345C2EDAF4F74461> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 56 /eight putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /.notdef /four /five /six /.notdef /eight 25{/.notdef}rp /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 10{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf310.241 262.201 mo(8)sh379.855 249.212 mo
379.855 253.208 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/Q <1C60D8A8C9B6FF86FBCB44CF6891A3C234824D55FC1E278E98998FAB05FC38FCC15002C6A4195DF012BC13026F43B82D5C6C171B23B47225A9651BFFB487A382365A10E2824EF3E98F2BEFBDA8CDEC2B4FB861F71FC609498C15B62E8DCA27B9226BD61C9A414D34B67DCBAAACA8FC831C3164C87DBFDD7D9092811366CEBED008E890BA8B1478E0C4FD2B5D2104BB9CFAD56B03F03AB95917794E9BFA9D3D3AFACD27573A118C966C5D03DB2417C4B9A110> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/w <1C60D8A8C9B6079F005DC3C75B1A77147C8375CCDFD0A24C766DB69E35DE36706983CA4785D8107CB89C2D97982F5548429FD5F71FC913D3> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 32 /space putdup 81 /Q putdup 110 /n putdup 119 /w putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /.notdef /four /five /six /.notdef /eight 24{/.notdef}rp /Q /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 2{/.notdef}rp /w 7{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf374.296 262.201 mo(10)[5.56055 0 ]xsh192.233 273.201 mo(Q1 \(own\))[7.77734 5.56152 2.77734 3.33008 5.56055 7.22168 5.56055 0 ]xsh393.876 288.285 mo
393.876 .283691 li
789.877 .283691 li
789.877 288.285 li
393.876 288.285 li
.917647 .94902 .952941 rgb
f
393.876 288.285 mo
393.876 .29248 li
789.865 .29248 li
789.865 288.285 li
393.876 288.285 li
f
393.876 288.285 mo
393.876 .29248 li
789.865 .29248 li
789.865 288.285 li
393.876 288.285 li
@
432.944 249.216 mo
432.944 10.3784 li
779.779 10.3784 li
779.779 249.216 li
432.944 249.216 li
1 1 1 rgb
f
432.944 249.216 mo
432.944 10.3784 li
779.779 10.3784 li
779.779 249.216 li
432.944 249.216 li
@
.864 lw
432.944 16.7144 mo
779.779 16.7144 li
432.944 61.9448 mo
779.779 61.9448 li
432.944 107.175 mo
779.779 107.175 li
432.944 152.406 mo
779.779 152.406 li
432.944 197.65 mo
779.779 197.65 li
432.944 242.88 mo
779.779 242.88 li
.917647 .94902 .952941 rgb
@
441.547 201.523 mo
441.547 200.314 440.565 199.333 439.356 199.333 cv
438.147 199.333 437.167 200.314 437.167 201.523 cv
437.167 202.732 438.147 203.714 439.356 203.714 cv
440.565 203.714 441.547 202.732 441.547 201.523 cv
.101961 .278431 .435294 rgb
f
441.547 201.523 mo
441.547 200.314 440.565 199.333 439.356 199.333 cv
438.147 199.333 437.167 200.314 437.167 201.523 cv
437.167 202.732 438.147 203.714 439.356 203.714 cv
440.565 203.714 441.547 202.732 441.547 201.523 cv
@
608.588 210.763 mo
608.588 209.554 607.605 208.574 606.396 208.574 cv
605.188 208.574 604.207 209.554 604.207 210.763 cv
604.207 211.972 605.188 212.955 606.396 212.955 cv
607.605 212.955 608.588 211.972 608.588 210.763 cv
f
608.588 210.763 mo
608.588 209.554 607.605 208.574 606.396 208.574 cv
605.188 208.574 604.207 209.554 604.207 210.763 cv
604.207 211.972 605.188 212.955 606.396 212.955 cv
607.605 212.955 608.588 211.972 608.588 210.763 cv
@
508.267 94.7241 mo
508.267 93.5151 507.286 92.5327 506.077 92.5327 cv
504.868 92.5327 503.886 93.5151 503.886 94.7241 cv
503.886 95.9331 504.868 96.9136 506.077 96.9136 cv
507.286 96.9136 508.267 95.9331 508.267 94.7241 cv
f
508.267 94.7241 mo
508.267 93.5151 507.286 92.5327 506.077 92.5327 cv
504.868 92.5327 503.886 93.5151 503.886 94.7241 cv
503.886 95.9331 504.868 96.9136 506.077 96.9136 cv
507.286 96.9136 508.267 95.9331 508.267 94.7241 cv
@
508.267 152.324 mo
508.267 151.115 507.286 150.134 506.077 150.134 cv
504.868 150.134 503.886 151.115 503.886 152.324 cv
503.886 153.533 504.868 154.513 506.077 154.513 cv
507.286 154.513 508.267 153.533 508.267 152.324 cv
f
508.267 152.324 mo
508.267 151.115 507.286 150.134 506.077 150.134 cv
504.868 150.134 503.886 151.115 503.886 152.324 cv
503.886 153.533 504.868 154.513 506.077 154.513 cv
507.286 154.513 508.267 153.533 508.267 152.324 cv
@
608.588 154.484 mo
608.588 153.275 607.605 152.292 606.396 152.292 cv
605.188 152.292 604.207 153.275 604.207 154.484 cv
604.207 155.693 605.188 156.673 606.396 156.673 cv
607.605 156.673 608.588 155.693 608.588 154.484 cv
f
608.588 154.484 mo
608.588 153.275 607.605 152.292 606.396 152.292 cv
605.188 152.292 604.207 153.275 604.207 154.484 cv
604.207 155.693 605.188 156.673 606.396 156.673 cv
607.605 156.673 608.588 155.693 608.588 154.484 cv
@
608.588 145.843 mo
608.588 144.634 607.605 143.654 606.396 143.654 cv
605.188 143.654 604.207 144.634 604.207 145.843 cv
604.207 147.052 605.188 148.035 606.396 148.035 cv
607.605 148.035 608.588 147.052 608.588 145.843 cv
f
608.588 145.843 mo
608.588 144.634 607.605 143.654 606.396 143.654 cv
605.188 143.654 604.207 144.634 604.207 145.843 cv
604.207 147.052 605.188 148.035 606.396 148.035 cv
607.605 148.035 608.588 147.052 608.588 145.843 cv
@
474.907 192.164 mo
474.907 190.955 473.926 189.974 472.717 189.974 cv
471.508 189.974 470.526 190.955 470.526 192.164 cv
470.526 193.373 471.508 194.355 472.717 194.355 cv
473.926 194.355 474.907 193.373 474.907 192.164 cv
f
474.907 192.164 mo
474.907 190.955 473.926 189.974 472.717 189.974 cv
471.508 189.974 470.526 190.955 470.526 192.164 cv
470.526 193.373 471.508 194.355 472.717 194.355 cv
473.926 194.355 474.907 193.373 474.907 192.164 cv
@
608.588 109.603 mo
608.588 108.394 607.605 107.414 606.396 107.414 cv
605.188 107.414 604.207 108.394 604.207 109.603 cv
604.207 110.812 605.188 111.794 606.396 111.794 cv
607.605 111.794 608.588 110.812 608.588 109.603 cv
f
608.588 109.603 mo
608.588 108.394 607.605 107.414 606.396 107.414 cv
605.188 107.414 604.207 108.394 604.207 109.603 cv
604.207 110.812 605.188 111.794 606.396 111.794 cv
607.605 111.794 608.588 110.812 608.588 109.603 cv
@
742.268 139.124 mo
742.268 137.915 741.285 136.933 740.076 136.933 cv
738.867 136.933 737.887 137.915 737.887 139.124 cv
737.887 140.333 738.867 141.314 740.076 141.314 cv
741.285 141.314 742.268 140.333 742.268 139.124 cv
f
742.268 139.124 mo
742.268 137.915 741.285 136.933 740.076 136.933 cv
738.867 136.933 737.887 137.915 737.887 139.124 cv
737.887 140.333 738.867 141.314 740.076 141.314 cv
741.285 141.314 742.268 140.333 742.268 139.124 cv
@
608.588 89.6831 mo
608.588 88.4741 607.605 87.4937 606.396 87.4937 cv
605.188 87.4937 604.207 88.4741 604.207 89.6831 cv
604.207 90.8921 605.188 91.8745 606.396 91.8745 cv
607.605 91.8745 608.588 90.8921 608.588 89.6831 cv
f
608.588 89.6831 mo
608.588 88.4741 607.605 87.4937 606.396 87.4937 cv
605.188 87.4937 604.207 88.4741 604.207 89.6831 cv
604.207 90.8921 605.188 91.8745 606.396 91.8745 cv
607.605 91.8745 608.588 90.8921 608.588 89.6831 cv
@
541.747 230.683 mo
541.747 229.474 540.766 228.494 539.557 228.494 cv
538.348 228.494 537.366 229.474 537.366 230.683 cv
537.366 231.892 538.348 232.875 539.557 232.875 cv
540.766 232.875 541.747 231.892 541.747 230.683 cv
f
541.747 230.683 mo
541.747 229.474 540.766 228.494 539.557 228.494 cv
538.348 228.494 537.366 229.474 537.366 230.683 cv
537.366 231.892 538.348 232.875 539.557 232.875 cv
540.766 232.875 541.747 231.892 541.747 230.683 cv
@
575.106 137.683 mo
575.106 136.474 574.126 135.494 572.917 135.494 cv
571.708 135.494 570.726 136.474 570.726 137.683 cv
570.726 138.892 571.708 139.875 572.917 139.875 cv
574.126 139.875 575.106 138.892 575.106 137.683 cv
f
575.106 137.683 mo
575.106 136.474 574.126 135.494 572.917 135.494 cv
571.708 135.494 570.726 136.474 570.726 137.683 cv
570.726 138.892 571.708 139.875 572.917 139.875 cv
574.126 139.875 575.106 138.892 575.106 137.683 cv
@
608.588 116.564 mo
608.588 115.355 607.605 114.373 606.396 114.373 cv
605.188 114.373 604.207 115.355 604.207 116.564 cv
604.207 117.773 605.188 118.753 606.396 118.753 cv
607.605 118.753 608.588 117.773 608.588 116.564 cv
f
608.588 116.564 mo
608.588 115.355 607.605 114.373 606.396 114.373 cv
605.188 114.373 604.207 115.355 604.207 116.564 cv
604.207 117.773 605.188 118.753 606.396 118.753 cv
607.605 118.753 608.588 117.773 608.588 116.564 cv
@
541.747 121.724 mo
541.747 120.515 540.766 119.533 539.557 119.533 cv
538.348 119.533 537.366 120.515 537.366 121.724 cv
537.366 122.933 538.348 123.914 539.557 123.914 cv
540.766 123.914 541.747 122.933 541.747 121.724 cv
f
541.747 121.724 mo
541.747 120.515 540.766 119.533 539.557 119.533 cv
538.348 119.533 537.366 120.515 537.366 121.724 cv
537.366 122.933 538.348 123.914 539.557 123.914 cv
540.766 123.914 541.747 122.933 541.747 121.724 cv
@
608.588 122.804 mo
608.588 121.595 607.605 120.613 606.396 120.613 cv
605.188 120.613 604.207 121.595 604.207 122.804 cv
604.207 124.013 605.188 124.994 606.396 124.994 cv
607.605 124.994 608.588 124.013 608.588 122.804 cv
f
608.588 122.804 mo
608.588 121.595 607.605 120.613 606.396 120.613 cv
605.188 120.613 604.207 121.595 604.207 122.804 cv
604.207 124.013 605.188 124.994 606.396 124.994 cv
607.605 124.994 608.588 124.013 608.588 122.804 cv
@
675.307 167.443 mo
675.307 166.234 674.326 165.253 673.117 165.253 cv
671.908 165.253 670.926 166.234 670.926 167.443 cv
670.926 168.652 671.908 169.634 673.117 169.634 cv
674.326 169.634 675.307 168.652 675.307 167.443 cv
f
675.307 167.443 mo
675.307 166.234 674.326 165.253 673.117 165.253 cv
671.908 165.253 670.926 166.234 670.926 167.443 cv
670.926 168.652 671.908 169.634 673.117 169.634 cv
674.326 169.634 675.307 168.652 675.307 167.443 cv
@
575.106 126.404 mo
575.106 125.195 574.126 124.213 572.917 124.213 cv
571.708 124.213 570.726 125.195 570.726 126.404 cv
570.726 127.613 571.708 128.594 572.917 128.594 cv
574.126 128.594 575.106 127.613 575.106 126.404 cv
f
575.106 126.404 mo
575.106 125.195 574.126 124.213 572.917 124.213 cv
571.708 124.213 570.726 125.195 570.726 126.404 cv
570.726 127.613 571.708 128.594 572.917 128.594 cv
574.126 128.594 575.106 127.613 575.106 126.404 cv
@
541.747 221.683 mo
541.747 220.474 540.766 219.494 539.557 219.494 cv
538.348 219.494 537.366 220.474 537.366 221.683 cv
537.366 222.892 538.348 223.875 539.557 223.875 cv
540.766 223.875 541.747 222.892 541.747 221.683 cv
f
541.747 221.683 mo
541.747 220.474 540.766 219.494 539.557 219.494 cv
538.348 219.494 537.366 220.474 537.366 221.683 cv
537.366 222.892 538.348 223.875 539.557 223.875 cv
540.766 223.875 541.747 222.892 541.747 221.683 cv
@
675.307 164.564 mo
675.307 163.355 674.326 162.373 673.117 162.373 cv
671.908 162.373 670.926 163.355 670.926 164.564 cv
670.926 165.773 671.908 166.753 673.117 166.753 cv
674.326 166.753 675.307 165.773 675.307 164.564 cv
f
675.307 164.564 mo
675.307 163.355 674.326 162.373 673.117 162.373 cv
671.908 162.373 670.926 163.355 670.926 164.564 cv
670.926 165.773 671.908 166.753 673.117 166.753 cv
674.326 166.753 675.307 165.773 675.307 164.564 cv
@
575.106 134.324 mo
575.106 133.115 574.126 132.133 572.917 132.133 cv
571.708 132.133 570.726 133.115 570.726 134.324 cv
570.726 135.533 571.708 136.514 572.917 136.514 cv
574.126 136.514 575.106 135.533 575.106 134.324 cv
f
575.106 134.324 mo
575.106 133.115 574.126 132.133 572.917 132.133 cv
571.708 132.133 570.726 133.115 570.726 134.324 cv
570.726 135.533 571.708 136.514 572.917 136.514 cv
574.126 136.514 575.106 135.533 575.106 134.324 cv
@
742.268 168.404 mo
742.268 167.195 741.285 166.212 740.076 166.212 cv
738.867 166.212 737.887 167.195 737.887 168.404 cv
737.887 169.613 738.867 170.593 740.076 170.593 cv
741.285 170.593 742.268 169.613 742.268 168.404 cv
f
742.268 168.404 mo
742.268 167.195 741.285 166.212 740.076 166.212 cv
738.867 166.212 737.887 167.195 737.887 168.404 cv
737.887 169.613 738.867 170.593 740.076 170.593 cv
741.285 170.593 742.268 169.613 742.268 168.404 cv
@
675.307 137.444 mo
675.307 136.234 674.326 135.253 673.117 135.253 cv
671.908 135.253 670.926 136.234 670.926 137.444 cv
670.926 138.653 671.908 139.634 673.117 139.634 cv
674.326 139.634 675.307 138.653 675.307 137.444 cv
f
675.307 137.444 mo
675.307 136.234 674.326 135.253 673.117 135.253 cv
671.908 135.253 670.926 136.234 670.926 137.444 cv
670.926 138.653 671.908 139.634 673.117 139.634 cv
674.326 139.634 675.307 138.653 675.307 137.444 cv
@
742.268 99.2837 mo
742.268 98.0747 741.285 97.0933 740.076 97.0933 cv
738.867 97.0933 737.887 98.0747 737.887 99.2837 cv
737.887 100.493 738.867 101.474 740.076 101.474 cv
741.285 101.474 742.268 100.493 742.268 99.2837 cv
f
742.268 99.2837 mo
742.268 98.0747 741.285 97.0933 740.076 97.0933 cv
738.867 97.0933 737.887 98.0747 737.887 99.2837 cv
737.887 100.493 738.867 101.474 740.076 101.474 cv
741.285 101.474 742.268 100.493 742.268 99.2837 cv
@
641.947 147.164 mo
641.947 145.955 640.965 144.974 639.756 144.974 cv
638.547 144.974 637.566 145.955 637.566 147.164 cv
637.566 148.373 638.547 149.355 639.756 149.355 cv
640.965 149.355 641.947 148.373 641.947 147.164 cv
f
641.947 147.164 mo
641.947 145.955 640.965 144.974 639.756 144.974 cv
638.547 144.974 637.566 145.955 637.566 147.164 cv
637.566 148.373 638.547 149.355 639.756 149.355 cv
640.965 149.355 641.947 148.373 641.947 147.164 cv
@
708.787 99.7632 mo
708.787 98.5542 707.807 97.5737 706.598 97.5737 cv
705.387 97.5737 704.406 98.5542 704.406 99.7632 cv
704.406 100.972 705.387 101.955 706.598 101.955 cv
707.807 101.955 708.787 100.972 708.787 99.7632 cv
f
708.787 99.7632 mo
708.787 98.5542 707.807 97.5737 706.598 97.5737 cv
705.387 97.5737 704.406 98.5542 704.406 99.7632 cv
704.406 100.972 705.387 101.955 706.598 101.955 cv
707.807 101.955 708.787 100.972 708.787 99.7632 cv
@
742.268 172.003 mo
742.268 170.794 741.285 169.814 740.076 169.814 cv
738.867 169.814 737.887 170.794 737.887 172.003 cv
737.887 173.212 738.867 174.195 740.076 174.195 cv
741.285 174.195 742.268 173.212 742.268 172.003 cv
f
742.268 172.003 mo
742.268 170.794 741.285 169.814 740.076 169.814 cv
738.867 169.814 737.887 170.794 737.887 172.003 cv
737.887 173.212 738.867 174.195 740.076 174.195 cv
741.285 174.195 742.268 173.212 742.268 172.003 cv
@
775.627 143.564 mo
775.627 142.355 774.646 141.373 773.438 141.373 cv
772.229 141.373 771.246 142.355 771.246 143.564 cv
771.246 144.773 772.229 145.753 773.438 145.753 cv
774.646 145.753 775.627 144.773 775.627 143.564 cv
f
775.627 143.564 mo
775.627 142.355 774.646 141.373 773.438 141.373 cv
772.229 141.373 771.246 142.355 771.246 143.564 cv
771.246 144.773 772.229 145.753 773.438 145.753 cv
774.646 145.753 775.627 144.773 775.627 143.564 cv
@
675.307 77.4438 mo
675.307 76.2339 674.326 75.2534 673.117 75.2534 cv
671.908 75.2534 670.926 76.2339 670.926 77.4438 cv
670.926 78.6528 671.908 79.6343 673.117 79.6343 cv
674.326 79.6343 675.307 78.6528 675.307 77.4438 cv
f
675.307 77.4438 mo
675.307 76.2339 674.326 75.2534 673.117 75.2534 cv
671.908 75.2534 670.926 76.2339 670.926 77.4438 cv
670.926 78.6528 671.908 79.6343 673.117 79.6343 cv
674.326 79.6343 675.307 78.6528 675.307 77.4438 cv
@
708.787 71.0835 mo
708.787 69.8745 707.807 68.8931 706.598 68.8931 cv
705.387 68.8931 704.406 69.8745 704.406 71.0835 cv
704.406 72.2925 705.387 73.2739 706.598 73.2739 cv
707.807 73.2739 708.787 72.2925 708.787 71.0835 cv
f
708.787 71.0835 mo
708.787 69.8745 707.807 68.8931 706.598 68.8931 cv
705.387 68.8931 704.406 69.8745 704.406 71.0835 cv
704.406 72.2925 705.387 73.2739 706.598 73.2739 cv
707.807 73.2739 708.787 72.2925 708.787 71.0835 cv
@
708.787 74.3237 mo
708.787 73.1147 707.807 72.1333 706.598 72.1333 cv
705.387 72.1333 704.406 73.1147 704.406 74.3237 cv
704.406 75.5327 705.387 76.5142 706.598 76.5142 cv
707.807 76.5142 708.787 75.5327 708.787 74.3237 cv
f
708.787 74.3237 mo
708.787 73.1147 707.807 72.1333 706.598 72.1333 cv
705.387 72.1333 704.406 73.1147 704.406 74.3237 cv
704.406 75.5327 705.387 76.5142 706.598 76.5142 cv
707.807 76.5142 708.787 75.5327 708.787 74.3237 cv
@
708.787 161.923 mo
708.787 160.714 707.807 159.734 706.598 159.734 cv
705.387 159.734 704.406 160.714 704.406 161.923 cv
704.406 163.132 705.387 164.115 706.598 164.115 cv
707.807 164.115 708.787 163.132 708.787 161.923 cv
f
708.787 161.923 mo
708.787 160.714 707.807 159.734 706.598 159.734 cv
705.387 159.734 704.406 160.714 704.406 161.923 cv
704.406 163.132 705.387 164.115 706.598 164.115 cv
707.807 164.115 708.787 163.132 708.787 161.923 cv
@
675.307 95.4438 mo
675.307 94.2339 674.326 93.2534 673.117 93.2534 cv
671.908 93.2534 670.926 94.2339 670.926 95.4438 cv
670.926 96.6528 671.908 97.6343 673.117 97.6343 cv
674.326 97.6343 675.307 96.6528 675.307 95.4438 cv
f
675.307 95.4438 mo
675.307 94.2339 674.326 93.2534 673.117 93.2534 cv
671.908 93.2534 670.926 94.2339 670.926 95.4438 cv
670.926 96.6528 671.908 97.6343 673.117 97.6343 cv
674.326 97.6343 675.307 96.6528 675.307 95.4438 cv
@
641.947 154.724 mo
641.947 153.515 640.965 152.533 639.756 152.533 cv
638.547 152.533 637.566 153.515 637.566 154.724 cv
637.566 155.933 638.547 156.914 639.756 156.914 cv
640.965 156.914 641.947 155.933 641.947 154.724 cv
f
641.947 154.724 mo
641.947 153.515 640.965 152.533 639.756 152.533 cv
638.547 152.533 637.566 153.515 637.566 154.724 cv
637.566 155.933 638.547 156.914 639.756 156.914 cv
640.965 156.914 641.947 155.933 641.947 154.724 cv
@
775.627 142.964 mo
775.627 141.754 774.646 140.773 773.438 140.773 cv
772.229 140.773 771.246 141.754 771.246 142.964 cv
771.246 144.173 772.229 145.154 773.438 145.154 cv
774.646 145.154 775.627 144.173 775.627 142.964 cv
f
775.627 142.964 mo
775.627 141.754 774.646 140.773 773.438 140.773 cv
772.229 140.773 771.246 141.754 771.246 142.964 cv
771.246 144.173 772.229 145.154 773.438 145.154 cv
774.646 145.154 775.627 144.173 775.627 142.964 cv
@
708.787 88.2437 mo
708.787 87.0347 707.807 86.0532 706.598 86.0532 cv
705.387 86.0532 704.406 87.0347 704.406 88.2437 cv
704.406 89.4526 705.387 90.4341 706.598 90.4341 cv
707.807 90.4341 708.787 89.4526 708.787 88.2437 cv
f
708.787 88.2437 mo
708.787 87.0347 707.807 86.0532 706.598 86.0532 cv
705.387 86.0532 704.406 87.0347 704.406 88.2437 cv
704.406 89.4526 705.387 90.4341 706.598 90.4341 cv
707.807 90.4341 708.787 89.4526 708.787 88.2437 cv
@
675.307 123.763 mo
675.307 122.554 674.326 121.574 673.117 121.574 cv
671.908 121.574 670.926 122.554 670.926 123.763 cv
670.926 124.972 671.908 125.955 673.117 125.955 cv
674.326 125.955 675.307 124.972 675.307 123.763 cv
f
675.307 123.763 mo
675.307 122.554 674.326 121.574 673.117 121.574 cv
671.908 121.574 670.926 122.554 670.926 123.763 cv
670.926 124.972 671.908 125.955 673.117 125.955 cv
674.326 125.955 675.307 124.972 675.307 123.763 cv
@
675.307 130.964 mo
675.307 129.754 674.326 128.773 673.117 128.773 cv
671.908 128.773 670.926 129.754 670.926 130.964 cv
670.926 132.173 671.908 133.154 673.117 133.154 cv
674.326 133.154 675.307 132.173 675.307 130.964 cv
f
675.307 130.964 mo
675.307 129.754 674.326 128.773 673.117 128.773 cv
671.908 128.773 670.926 129.754 670.926 130.964 cv
670.926 132.173 671.908 133.154 673.117 133.154 cv
674.326 133.154 675.307 132.173 675.307 130.964 cv
@
541.747 25.1235 mo
541.747 23.9146 540.766 22.9331 539.557 22.9331 cv
538.348 22.9331 537.366 23.9146 537.366 25.1235 cv
537.366 26.3335 538.348 27.314 539.557 27.314 cv
540.766 27.314 541.747 26.3335 541.747 25.1235 cv
f
541.747 25.1235 mo
541.747 23.9146 540.766 22.9331 539.557 22.9331 cv
538.348 22.9331 537.366 23.9146 537.366 25.1235 cv
537.366 26.3335 538.348 27.314 539.557 27.314 cv
540.766 27.314 541.747 26.3335 541.747 25.1235 cv
@
641.947 109.244 mo
641.947 108.035 640.965 107.053 639.756 107.053 cv
638.547 107.053 637.566 108.035 637.566 109.244 cv
637.566 110.453 638.547 111.434 639.756 111.434 cv
640.965 111.434 641.947 110.453 641.947 109.244 cv
f
641.947 109.244 mo
641.947 108.035 640.965 107.053 639.756 107.053 cv
638.547 107.053 637.566 108.035 637.566 109.244 cv
637.566 110.453 638.547 111.434 639.756 111.434 cv
640.965 111.434 641.947 110.453 641.947 109.244 cv
@
675.307 100.724 mo
675.307 99.5151 674.326 98.5327 673.117 98.5327 cv
671.908 98.5327 670.926 99.5151 670.926 100.724 cv
670.926 101.933 671.908 102.914 673.117 102.914 cv
674.326 102.914 675.307 101.933 675.307 100.724 cv
f
675.307 100.724 mo
675.307 99.5151 674.326 98.5327 673.117 98.5327 cv
671.908 98.5327 670.926 99.5151 670.926 100.724 cv
670.926 101.933 671.908 102.914 673.117 102.914 cv
674.326 102.914 675.307 101.933 675.307 100.724 cv
@
.576 lw
432.944 242.88 mo
428.947 242.88 li
432.944 249.216 mo
432.944 10.3784 li
0 0 0 rgb
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 248.581 mo(\1771)[-5.83887 0 ]ysh432.944 197.65 mo
428.947 197.65 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 204.737 mo(\177.)[-5.83887 0 ]ysh423.939 196.112 mo(5)sh432.944 152.406 mo
428.947 152.406 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 155.182 mo(0)sh432.944 107.175 mo
428.947 107.175 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 111.346 mo(.5)[-2.77783 0 ]ysh432.944 61.9448 mo
428.947 61.9448 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 64.729 mo(1)sh432.944 16.7144 mo
428.947 16.7144 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 23.6665 mo(1.)[-5.56104 0 ]ysh423.939 15.3306 mo(5)sh412.939 161.19 mo(log\(tVR/tReal)[-2.22168 -5.56055 -5.56152 -3.32959 -2.77783 -6.66943 -7.2207 -2.77783 -2.77832 -7.2207 -5.56104 -5.56104 0 ]ysh412.939 101.737 mo(\))sh439.28 249.216 mo
439.28 253.212 li
432.944 249.216 mo
779.779 249.216 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf436.501 262.206 mo(0)sh506.118 249.216 mo
506.118 253.212 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf503.337 262.206 mo(2)sh572.942 249.216 mo
572.942 253.212 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf570.166 262.206 mo(4)sh639.781 249.216 mo
639.781 253.212 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf637.001 262.206 mo(6)sh706.605 249.216 mo
706.605 253.212 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf703.83 262.206 mo(8)sh773.443 249.216 mo
773.443 253.212 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 109 /m putdup 118 /v putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /.notdef /four /five /six /.notdef /eight 24{/.notdef}rp /Q /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 4{/.notdef}rp /l /m /n /o 4{/.notdef}rp /t /.notdef /v /w 7{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf767.884 262.206 mo(10)[5.56055 0 ]xsh582.759 273.206 mo(Q2 \(move\))[7.77734 5.56152 2.77734 3.33008 8.3291 5.56152 4.99902 5.56055 0 ]xsh.288086 575.079 mo
.288086 287.078 li
396.289 287.078 li
396.289 575.079 li
.288086 575.079 li
.917647 .94902 .952941 rgb
f
.288086 575.079 mo
.288086 287.087 li
396.277 287.087 li
396.277 575.079 li
.288086 575.079 li
f
.288086 575.079 mo
.288086 287.087 li
396.277 287.087 li
396.277 575.079 li
.288086 575.079 li
@
39.3564 536.011 mo
39.3564 297.173 li
386.191 297.173 li
386.191 536.011 li
39.3564 536.011 li
1 1 1 rgb
f
39.3564 536.011 mo
39.3564 297.173 li
386.191 297.173 li
386.191 536.011 li
39.3564 536.011 li
@
.864 lw
39.3564 303.509 mo
386.191 303.509 li
39.3564 348.739 mo
386.191 348.739 li
39.3564 393.97 mo
386.191 393.97 li
39.3564 439.2 mo
386.191 439.2 li
39.3564 484.444 mo
386.191 484.444 li
39.3564 529.675 mo
386.191 529.675 li
.917647 .94902 .952941 rgb
@
89.7188 488.317 mo
89.7188 487.108 88.7373 486.128 87.5283 486.128 cv
86.3193 486.128 85.3379 487.108 85.3379 488.317 cv
85.3379 489.526 86.3193 490.509 87.5283 490.509 cv
88.7373 490.509 89.7188 489.526 89.7188 488.317 cv
.101961 .278431 .435294 rgb
f
89.7188 488.317 mo
89.7188 487.108 88.7373 486.128 87.5283 486.128 cv
86.3193 486.128 85.3379 487.108 85.3379 488.317 cv
85.3379 489.526 86.3193 490.509 87.5283 490.509 cv
88.7373 490.509 89.7188 489.526 89.7188 488.317 cv
@
298.519 497.558 mo
298.519 496.349 297.537 495.368 296.328 495.368 cv
295.119 495.368 294.138 496.349 294.138 497.558 cv
294.138 498.767 295.119 499.749 296.328 499.749 cv
297.537 499.749 298.519 498.767 298.519 497.558 cv
f
298.519 497.558 mo
298.519 496.349 297.537 495.368 296.328 495.368 cv
295.119 495.368 294.138 496.349 294.138 497.558 cv
294.138 498.767 295.119 499.749 296.328 499.749 cv
297.537 499.749 298.519 498.767 298.519 497.558 cv
@
340.279 381.519 mo
340.279 380.31 339.298 379.327 338.087 379.327 cv
336.878 379.327 335.898 380.31 335.898 381.519 cv
335.898 382.728 336.878 383.708 338.087 383.708 cv
339.298 383.708 340.279 382.728 340.279 381.519 cv
f
340.279 381.519 mo
340.279 380.31 339.298 379.327 338.087 379.327 cv
336.878 379.327 335.898 380.31 335.898 381.519 cv
335.898 382.728 336.878 383.708 338.087 383.708 cv
339.298 383.708 340.279 382.728 340.279 381.519 cv
@
173.239 439.118 mo
173.239 437.909 172.257 436.929 171.048 436.929 cv
169.839 436.929 168.858 437.909 168.858 439.118 cv
168.858 440.327 169.839 441.308 171.048 441.308 cv
172.257 441.308 173.239 440.327 173.239 439.118 cv
f
173.239 439.118 mo
173.239 437.909 172.257 436.929 171.048 436.929 cv
169.839 436.929 168.858 437.909 168.858 439.118 cv
168.858 440.327 169.839 441.308 171.048 441.308 cv
172.257 441.308 173.239 440.327 173.239 439.118 cv
@
382.039 441.278 mo
382.039 440.069 381.058 439.087 379.849 439.087 cv
378.64 439.087 377.658 440.069 377.658 441.278 cv
377.658 442.487 378.64 443.468 379.849 443.468 cv
381.058 443.468 382.039 442.487 382.039 441.278 cv
f
382.039 441.278 mo
382.039 440.069 381.058 439.087 379.849 439.087 cv
378.64 439.087 377.658 440.069 377.658 441.278 cv
377.658 442.487 378.64 443.468 379.849 443.468 cv
381.058 443.468 382.039 442.487 382.039 441.278 cv
@
340.279 432.638 mo
340.279 431.429 339.298 430.448 338.087 430.448 cv
336.878 430.448 335.898 431.429 335.898 432.638 cv
335.898 433.847 336.878 434.829 338.087 434.829 cv
339.298 434.829 340.279 433.847 340.279 432.638 cv
f
340.279 432.638 mo
340.279 431.429 339.298 430.448 338.087 430.448 cv
336.878 430.448 335.898 431.429 335.898 432.638 cv
335.898 433.847 336.878 434.829 338.087 434.829 cv
339.298 434.829 340.279 433.847 340.279 432.638 cv
@
131.479 478.958 mo
131.479 477.749 130.498 476.769 129.288 476.769 cv
128.079 476.769 127.098 477.749 127.098 478.958 cv
127.098 480.167 128.079 481.149 129.288 481.149 cv
130.498 481.149 131.479 480.167 131.479 478.958 cv
f
131.479 478.958 mo
131.479 477.749 130.498 476.769 129.288 476.769 cv
128.079 476.769 127.098 477.749 127.098 478.958 cv
127.098 480.167 128.079 481.149 129.288 481.149 cv
130.498 481.149 131.479 480.167 131.479 478.958 cv
@
298.519 396.397 mo
298.519 395.188 297.537 394.208 296.328 394.208 cv
295.119 394.208 294.138 395.188 294.138 396.397 cv
294.138 397.606 295.119 398.589 296.328 398.589 cv
297.537 398.589 298.519 397.606 298.519 396.397 cv
f
298.519 396.397 mo
298.519 395.188 297.537 394.208 296.328 394.208 cv
295.119 394.208 294.138 395.188 294.138 396.397 cv
294.138 397.606 295.119 398.589 296.328 398.589 cv
297.537 398.589 298.519 397.606 298.519 396.397 cv
@
47.9585 425.918 mo
47.9585 424.709 46.9775 423.728 45.7686 423.728 cv
44.5591 423.728 43.5781 424.709 43.5781 425.918 cv
43.5781 427.128 44.5591 428.108 45.7686 428.108 cv
46.9775 428.108 47.9585 427.128 47.9585 425.918 cv
f
47.9585 425.918 mo
47.9585 424.709 46.9775 423.728 45.7686 423.728 cv
44.5591 423.728 43.5781 424.709 43.5781 425.918 cv
43.5781 427.128 44.5591 428.108 45.7686 428.108 cv
46.9775 428.108 47.9585 427.128 47.9585 425.918 cv
@
47.9585 376.478 mo
47.9585 375.269 46.9775 374.288 45.7686 374.288 cv
44.5591 374.288 43.5781 375.269 43.5781 376.478 cv
43.5781 377.687 44.5591 378.669 45.7686 378.669 cv
46.9775 378.669 47.9585 377.687 47.9585 376.478 cv
f
47.9585 376.478 mo
47.9585 375.269 46.9775 374.288 45.7686 374.288 cv
44.5591 374.288 43.5781 375.269 43.5781 376.478 cv
43.5781 377.687 44.5591 378.669 45.7686 378.669 cv
46.9775 378.669 47.9585 377.687 47.9585 376.478 cv
@
382.039 517.478 mo
382.039 516.269 381.058 515.288 379.849 515.288 cv
378.64 515.288 377.658 516.269 377.658 517.478 cv
377.658 518.687 378.64 519.669 379.849 519.669 cv
381.058 519.669 382.039 518.687 382.039 517.478 cv
f
382.039 517.478 mo
382.039 516.269 381.058 515.288 379.849 515.288 cv
378.64 515.288 377.658 516.269 377.658 517.478 cv
377.658 518.687 378.64 519.669 379.849 519.669 cv
381.058 519.669 382.039 518.687 382.039 517.478 cv
@
131.479 424.478 mo
131.479 423.269 130.498 422.288 129.288 422.288 cv
128.079 422.288 127.098 423.269 127.098 424.478 cv
127.098 425.687 128.079 426.669 129.288 426.669 cv
130.498 426.669 131.479 425.687 131.479 424.478 cv
f
131.479 424.478 mo
131.479 423.269 130.498 422.288 129.288 422.288 cv
128.079 422.288 127.098 423.269 127.098 424.478 cv
127.098 425.687 128.079 426.669 129.288 426.669 cv
130.498 426.669 131.479 425.687 131.479 424.478 cv
@
340.279 403.358 mo
340.279 402.149 339.298 401.167 338.087 401.167 cv
336.878 401.167 335.898 402.149 335.898 403.358 cv
335.898 404.567 336.878 405.548 338.087 405.548 cv
339.298 405.548 340.279 404.567 340.279 403.358 cv
f
340.279 403.358 mo
340.279 402.149 339.298 401.167 338.087 401.167 cv
336.878 401.167 335.898 402.149 335.898 403.358 cv
335.898 404.567 336.878 405.548 338.087 405.548 cv
339.298 405.548 340.279 404.567 340.279 403.358 cv
@
382.039 408.519 mo
382.039 407.31 381.058 406.327 379.849 406.327 cv
378.64 406.327 377.658 407.31 377.658 408.519 cv
377.658 409.728 378.64 410.708 379.849 410.708 cv
381.058 410.708 382.039 409.728 382.039 408.519 cv
f
382.039 408.519 mo
382.039 407.31 381.058 406.327 379.849 406.327 cv
378.64 406.327 377.658 407.31 377.658 408.519 cv
377.658 409.728 378.64 410.708 379.849 410.708 cv
381.058 410.708 382.039 409.728 382.039 408.519 cv
@
89.7188 409.599 mo
89.7188 408.39 88.7373 407.407 87.5283 407.407 cv
86.3193 407.407 85.3379 408.39 85.3379 409.599 cv
85.3379 410.808 86.3193 411.788 87.5283 411.788 cv
88.7373 411.788 89.7188 410.808 89.7188 409.599 cv
f
89.7188 409.599 mo
89.7188 408.39 88.7373 407.407 87.5283 407.407 cv
86.3193 407.407 85.3379 408.39 85.3379 409.599 cv
85.3379 410.808 86.3193 411.788 87.5283 411.788 cv
88.7373 411.788 89.7188 410.808 89.7188 409.599 cv
@
256.759 454.237 mo
256.759 453.028 255.777 452.048 254.568 452.048 cv
253.359 452.048 252.378 453.028 252.378 454.237 cv
252.378 455.446 253.359 456.429 254.568 456.429 cv
255.777 456.429 256.759 455.446 256.759 454.237 cv
f
256.759 454.237 mo
256.759 453.028 255.777 452.048 254.568 452.048 cv
253.359 452.048 252.378 453.028 252.378 454.237 cv
252.378 455.446 253.359 456.429 254.568 456.429 cv
255.777 456.429 256.759 455.446 256.759 454.237 cv
@
173.239 413.198 mo
173.239 411.989 172.257 411.008 171.048 411.008 cv
169.839 411.008 168.858 411.989 168.858 413.198 cv
168.858 414.407 169.839 415.389 171.048 415.389 cv
172.257 415.389 173.239 414.407 173.239 413.198 cv
f
173.239 413.198 mo
173.239 411.989 172.257 411.008 171.048 411.008 cv
169.839 411.008 168.858 411.989 168.858 413.198 cv
168.858 414.407 169.839 415.389 171.048 415.389 cv
172.257 415.389 173.239 414.407 173.239 413.198 cv
@
215 508.478 mo
215 507.269 214.017 506.288 212.808 506.288 cv
211.599 506.288 210.619 507.269 210.619 508.478 cv
210.619 509.687 211.599 510.669 212.808 510.669 cv
214.017 510.669 215 509.687 215 508.478 cv
f
215 508.478 mo
215 507.269 214.017 506.288 212.808 506.288 cv
211.599 506.288 210.619 507.269 210.619 508.478 cv
210.619 509.687 211.599 510.669 212.808 510.669 cv
214.017 510.669 215 509.687 215 508.478 cv
@
256.759 451.358 mo
256.759 450.149 255.777 449.167 254.568 449.167 cv
253.359 449.167 252.378 450.149 252.378 451.358 cv
252.378 452.567 253.359 453.548 254.568 453.548 cv
255.777 453.548 256.759 452.567 256.759 451.358 cv
f
256.759 451.358 mo
256.759 450.149 255.777 449.167 254.568 449.167 cv
253.359 449.167 252.378 450.149 252.378 451.358 cv
252.378 452.567 253.359 453.548 254.568 453.548 cv
255.777 453.548 256.759 452.567 256.759 451.358 cv
@
298.519 421.118 mo
298.519 419.909 297.537 418.928 296.328 418.928 cv
295.119 418.928 294.138 419.909 294.138 421.118 cv
294.138 422.327 295.119 423.309 296.328 423.309 cv
297.537 423.309 298.519 422.327 298.519 421.118 cv
f
298.519 421.118 mo
298.519 419.909 297.537 418.928 296.328 418.928 cv
295.119 418.928 294.138 419.909 294.138 421.118 cv
294.138 422.327 295.119 423.309 296.328 423.309 cv
297.537 423.309 298.519 422.327 298.519 421.118 cv
@
173.239 455.198 mo
173.239 453.989 172.257 453.007 171.048 453.007 cv
169.839 453.007 168.858 453.989 168.858 455.198 cv
168.858 456.407 169.839 457.388 171.048 457.388 cv
172.257 457.388 173.239 456.407 173.239 455.198 cv
f
173.239 455.198 mo
173.239 453.989 172.257 453.007 171.048 453.007 cv
169.839 453.007 168.858 453.989 168.858 455.198 cv
168.858 456.407 169.839 457.388 171.048 457.388 cv
172.257 457.388 173.239 456.407 173.239 455.198 cv
@
215 424.238 mo
215 423.028 214.017 422.048 212.808 422.048 cv
211.599 422.048 210.619 423.028 210.619 424.238 cv
210.619 425.447 211.599 426.429 212.808 426.429 cv
214.017 426.429 215 425.447 215 424.238 cv
f
215 424.238 mo
215 423.028 214.017 422.048 212.808 422.048 cv
211.599 422.048 210.619 423.028 210.619 424.238 cv
210.619 425.447 211.599 426.429 212.808 426.429 cv
214.017 426.429 215 425.447 215 424.238 cv
@
215 386.078 mo
215 384.869 214.017 383.888 212.808 383.888 cv
211.599 383.888 210.619 384.869 210.619 386.078 cv
210.619 387.287 211.599 388.269 212.808 388.269 cv
214.017 388.269 215 387.287 215 386.078 cv
f
215 386.078 mo
215 384.869 214.017 383.888 212.808 383.888 cv
211.599 383.888 210.619 384.869 210.619 386.078 cv
210.619 387.287 211.599 388.269 212.808 388.269 cv
214.017 388.269 215 387.287 215 386.078 cv
@
340.279 433.958 mo
340.279 432.749 339.298 431.769 338.087 431.769 cv
336.878 431.769 335.898 432.749 335.898 433.958 cv
335.898 435.167 336.878 436.149 338.087 436.149 cv
339.298 436.149 340.279 435.167 340.279 433.958 cv
f
340.279 433.958 mo
340.279 432.749 339.298 431.769 338.087 431.769 cv
336.878 431.769 335.898 432.749 335.898 433.958 cv
335.898 435.167 336.878 436.149 338.087 436.149 cv
339.298 436.149 340.279 435.167 340.279 433.958 cv
@
173.239 386.558 mo
173.239 385.349 172.257 384.368 171.048 384.368 cv
169.839 384.368 168.858 385.349 168.858 386.558 cv
168.858 387.767 169.839 388.749 171.048 388.749 cv
172.257 388.749 173.239 387.767 173.239 386.558 cv
f
173.239 386.558 mo
173.239 385.349 172.257 384.368 171.048 384.368 cv
169.839 384.368 168.858 385.349 168.858 386.558 cv
168.858 387.767 169.839 388.749 171.048 388.749 cv
172.257 388.749 173.239 387.767 173.239 386.558 cv
@
47.9585 458.798 mo
47.9585 457.589 46.9775 456.608 45.7686 456.608 cv
44.5591 456.608 43.5781 457.589 43.5781 458.798 cv
43.5781 460.007 44.5591 460.989 45.7686 460.989 cv
46.9775 460.989 47.9585 460.007 47.9585 458.798 cv
f
47.9585 458.798 mo
47.9585 457.589 46.9775 456.608 45.7686 456.608 cv
44.5591 456.608 43.5781 457.589 43.5781 458.798 cv
43.5781 460.007 44.5591 460.989 45.7686 460.989 cv
46.9775 460.989 47.9585 460.007 47.9585 458.798 cv
@
47.9585 430.358 mo
47.9585 429.149 46.9775 428.167 45.7686 428.167 cv
44.5591 428.167 43.5781 429.149 43.5781 430.358 cv
43.5781 431.567 44.5591 432.548 45.7686 432.548 cv
46.9775 432.548 47.9585 431.567 47.9585 430.358 cv
f
47.9585 430.358 mo
47.9585 429.149 46.9775 428.167 45.7686 428.167 cv
44.5591 428.167 43.5781 429.149 43.5781 430.358 cv
43.5781 431.567 44.5591 432.548 45.7686 432.548 cv
46.9775 432.548 47.9585 431.567 47.9585 430.358 cv
@
215 364.238 mo
215 363.028 214.017 362.048 212.808 362.048 cv
211.599 362.048 210.619 363.028 210.619 364.238 cv
210.619 365.447 211.599 366.429 212.808 366.429 cv
214.017 366.429 215 365.447 215 364.238 cv
f
215 364.238 mo
215 363.028 214.017 362.048 212.808 362.048 cv
211.599 362.048 210.619 363.028 210.619 364.238 cv
210.619 365.447 211.599 366.429 212.808 366.429 cv
214.017 366.429 215 365.447 215 364.238 cv
@
89.7188 357.878 mo
89.7188 356.669 88.7373 355.688 87.5283 355.688 cv
86.3193 355.688 85.3379 356.669 85.3379 357.878 cv
85.3379 359.087 86.3193 360.068 87.5283 360.068 cv
88.7373 360.068 89.7188 359.087 89.7188 357.878 cv
f
89.7188 357.878 mo
89.7188 356.669 88.7373 355.688 87.5283 355.688 cv
86.3193 355.688 85.3379 356.669 85.3379 357.878 cv
85.3379 359.087 86.3193 360.068 87.5283 360.068 cv
88.7373 360.068 89.7188 359.087 89.7188 357.878 cv
@
173.239 361.118 mo
173.239 359.909 172.257 358.928 171.048 358.928 cv
169.839 358.928 168.858 359.909 168.858 361.118 cv
168.858 362.327 169.839 363.309 171.048 363.309 cv
172.257 363.309 173.239 362.327 173.239 361.118 cv
f
173.239 361.118 mo
173.239 359.909 172.257 358.928 171.048 358.928 cv
169.839 358.928 168.858 359.909 168.858 361.118 cv
168.858 362.327 169.839 363.309 171.048 363.309 cv
172.257 363.309 173.239 362.327 173.239 361.118 cv
@
256.759 448.718 mo
256.759 447.509 255.777 446.528 254.568 446.528 cv
253.359 446.528 252.378 447.509 252.378 448.718 cv
252.378 449.927 253.359 450.909 254.568 450.909 cv
255.777 450.909 256.759 449.927 256.759 448.718 cv
f
256.759 448.718 mo
256.759 447.509 255.777 446.528 254.568 446.528 cv
253.359 446.528 252.378 447.509 252.378 448.718 cv
252.378 449.927 253.359 450.909 254.568 450.909 cv
255.777 450.909 256.759 449.927 256.759 448.718 cv
@
298.519 382.238 mo
298.519 381.028 297.537 380.048 296.328 380.048 cv
295.119 380.048 294.138 381.028 294.138 382.238 cv
294.138 383.447 295.119 384.429 296.328 384.429 cv
297.537 384.429 298.519 383.447 298.519 382.238 cv
f
298.519 382.238 mo
298.519 381.028 297.537 380.048 296.328 380.048 cv
295.119 380.048 294.138 381.028 294.138 382.238 cv
294.138 383.447 295.119 384.429 296.328 384.429 cv
297.537 384.429 298.519 383.447 298.519 382.238 cv
@
215 441.519 mo
215 440.31 214.017 439.327 212.808 439.327 cv
211.599 439.327 210.619 440.31 210.619 441.519 cv
210.619 442.728 211.599 443.708 212.808 443.708 cv
214.017 443.708 215 442.728 215 441.519 cv
f
215 441.519 mo
215 440.31 214.017 439.327 212.808 439.327 cv
211.599 439.327 210.619 440.31 210.619 441.519 cv
210.619 442.728 211.599 443.708 212.808 443.708 cv
214.017 443.708 215 442.728 215 441.519 cv
@
47.9585 429.759 mo
47.9585 428.549 46.9775 427.567 45.7686 427.567 cv
44.5591 427.567 43.5781 428.549 43.5781 429.759 cv
43.5781 430.968 44.5591 431.948 45.7686 431.948 cv
46.9775 431.948 47.9585 430.968 47.9585 429.759 cv
f
47.9585 429.759 mo
47.9585 428.549 46.9775 427.567 45.7686 427.567 cv
44.5591 427.567 43.5781 428.549 43.5781 429.759 cv
43.5781 430.968 44.5591 431.948 45.7686 431.948 cv
46.9775 431.948 47.9585 430.968 47.9585 429.759 cv
@
131.479 375.038 mo
131.479 373.829 130.498 372.848 129.288 372.848 cv
128.079 372.848 127.098 373.829 127.098 375.038 cv
127.098 376.247 128.079 377.229 129.288 377.229 cv
130.498 377.229 131.479 376.247 131.479 375.038 cv
f
131.479 375.038 mo
131.479 373.829 130.498 372.848 129.288 372.848 cv
128.079 372.848 127.098 373.829 127.098 375.038 cv
127.098 376.247 128.079 377.229 129.288 377.229 cv
130.498 377.229 131.479 376.247 131.479 375.038 cv
@
340.279 410.558 mo
340.279 409.349 339.298 408.368 338.087 408.368 cv
336.878 408.368 335.898 409.349 335.898 410.558 cv
335.898 411.767 336.878 412.749 338.087 412.749 cv
339.298 412.749 340.279 411.767 340.279 410.558 cv
f
340.279 410.558 mo
340.279 409.349 339.298 408.368 338.087 408.368 cv
336.878 408.368 335.898 409.349 335.898 410.558 cv
335.898 411.767 336.878 412.749 338.087 412.749 cv
339.298 412.749 340.279 411.767 340.279 410.558 cv
@
131.479 417.759 mo
131.479 416.549 130.498 415.567 129.288 415.567 cv
128.079 415.567 127.098 416.549 127.098 417.759 cv
127.098 418.968 128.079 419.948 129.288 419.948 cv
130.498 419.948 131.479 418.968 131.479 417.759 cv
f
131.479 417.759 mo
131.479 416.549 130.498 415.567 129.288 415.567 cv
128.079 415.567 127.098 416.549 127.098 417.759 cv
127.098 418.968 128.079 419.948 129.288 419.948 cv
130.498 419.948 131.479 418.968 131.479 417.759 cv
@
47.9585 311.918 mo
47.9585 310.709 46.9775 309.728 45.7686 309.728 cv
44.5591 309.728 43.5781 310.709 43.5781 311.918 cv
43.5781 313.128 44.5591 314.108 45.7686 314.108 cv
46.9775 314.108 47.9585 313.128 47.9585 311.918 cv
f
47.9585 311.918 mo
47.9585 310.709 46.9775 309.728 45.7686 309.728 cv
44.5591 309.728 43.5781 310.709 43.5781 311.918 cv
43.5781 313.128 44.5591 314.108 45.7686 314.108 cv
46.9775 314.108 47.9585 313.128 47.9585 311.918 cv
@
215 396.038 mo
215 394.829 214.017 393.848 212.808 393.848 cv
211.599 393.848 210.619 394.829 210.619 396.038 cv
210.619 397.247 211.599 398.229 212.808 398.229 cv
214.017 398.229 215 397.247 215 396.038 cv
f
215 396.038 mo
215 394.829 214.017 393.848 212.808 393.848 cv
211.599 393.848 210.619 394.829 210.619 396.038 cv
210.619 397.247 211.599 398.229 212.808 398.229 cv
214.017 398.229 215 397.247 215 396.038 cv
@
173.239 387.519 mo
173.239 386.31 172.257 385.327 171.048 385.327 cv
169.839 385.327 168.858 386.31 168.858 387.519 cv
168.858 388.728 169.839 389.708 171.048 389.708 cv
172.257 389.708 173.239 388.728 173.239 387.519 cv
f
173.239 387.519 mo
173.239 386.31 172.257 385.327 171.048 385.327 cv
169.839 385.327 168.858 386.31 168.858 387.519 cv
168.858 388.728 169.839 389.708 171.048 389.708 cv
172.257 389.708 173.239 388.728 173.239 387.519 cv
@
.576 lw
39.3564 529.675 mo
35.3589 529.675 li
39.3564 536.011 mo
39.3564 297.173 li
0 0 0 rgb
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 535.375 mo(\1771)[-5.83887 0 ]ysh39.3564 484.444 mo
35.3589 484.444 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 491.531 mo(\177.)[-5.83887 0 ]ysh30.3506 482.906 mo(5)sh39.3564 439.2 mo
35.3589 439.2 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 441.977 mo(0)sh39.3564 393.97 mo
35.3589 393.97 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 398.141 mo(.5)[-2.77783 0 ]ysh39.3564 348.739 mo
35.3589 348.739 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 351.523 mo(1)sh39.3564 303.509 mo
35.3589 303.509 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf30.3506 310.461 mo(1.)[-5.56104 0 ]ysh30.3506 302.125 mo(5)sh19.3506 447.984 mo(log\(tVR/tReal)[-2.22168 -5.56055 -5.56152 -3.32959 -2.77783 -6.66943 -7.2207 -2.77783 -2.77832 -7.2207 -5.56104 -5.56104 0 ]ysh19.3506 388.531 mo(\))sh45.6924 536.011 mo
45.6924 540.007 li
39.3564 536.011 mo
386.191 536.011 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf42.9131 549 mo(0)sh129.236 536.011 mo
129.236 540.007 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf126.46 549 mo(2)sh212.779 536.011 mo
212.779 540.007 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf209.999 549 mo(4)sh296.31 536.011 mo
296.31 540.007 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf293.538 549 mo(6)sh379.855 536.011 mo
379.855 540.007 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.systemdict beginSJADSM+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/h <1C60D8A8C9B7EF3217E3BC2FA8B1DA462FB5094608F57CE7723860E586F183A8CEF3068A0C010301729338C182E1C8129546DF528AA710511DF02DFE7ACA98F8F6531E02F7C3E3DBAF3320F3D602AE65A66CA41E6984> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-systemdict /gcheck known {setglobal} if end {end} ifendSJADSM+Helvetica /Encoding getdup 51 /three putdup 104 /h putdup 114 /r putpop%ADOEndSubsetFont
/SJADSM+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /.notdef /eight 24{/.notdef}rp /Q /R 3{/.notdef}rp /V 10{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /h 3{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /.notdef /v /w 7{/.notdef}rp /minus 128{/.notdef}rp]SJADSM+Helvetica nfSJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf377.085 549 mo(8)sh189.999 560 mo(Q3 \(other)[7.77734 5.56152 2.77734 3.33008 5.56055 2.77832 5.56152 5.56055 0 ]xsh232.233 560 mo(\))sh393.876 574.358 mo
393.876 286.357 li
789.877 286.357 li
789.877 574.358 li
393.876 574.358 li
.917647 .94902 .952941 rgb
f
393.876 574.358 mo
393.876 286.366 li
789.865 286.366 li
789.865 574.358 li
393.876 574.358 li
f
393.876 574.358 mo
393.876 286.366 li
789.865 286.366 li
789.865 574.358 li
393.876 574.358 li
@
432.944 535.29 mo
432.944 296.452 li
779.779 296.452 li
779.779 535.29 li
432.944 535.29 li
1 1 1 rgb
f
432.944 535.29 mo
432.944 296.452 li
779.779 296.452 li
779.779 535.29 li
432.944 535.29 li
@
.864 lw
432.944 302.788 mo
779.779 302.788 li
432.944 348.019 mo
779.779 348.019 li
432.944 393.249 mo
779.779 393.249 li
432.944 438.479 mo
779.779 438.479 li
432.944 483.724 mo
779.779 483.724 li
432.944 528.954 mo
779.779 528.954 li
.917647 .94902 .952941 rgb
@
474.907 487.597 mo
474.907 486.388 473.926 485.407 472.717 485.407 cv
471.508 485.407 470.526 486.388 470.526 487.597 cv
470.526 488.806 471.508 489.788 472.717 489.788 cv
473.926 489.788 474.907 488.806 474.907 487.597 cv
.101961 .278431 .435294 rgb
f
474.907 487.597 mo
474.907 486.388 473.926 485.407 472.717 485.407 cv
471.508 485.407 470.526 486.388 470.526 487.597 cv
470.526 488.806 471.508 489.788 472.717 489.788 cv
473.926 489.788 474.907 488.806 474.907 487.597 cv
@
608.588 496.837 mo
608.588 495.628 607.605 494.647 606.396 494.647 cv
605.188 494.647 604.207 495.628 604.207 496.837 cv
604.207 498.046 605.188 499.028 606.396 499.028 cv
607.605 499.028 608.588 498.046 608.588 496.837 cv
f
608.588 496.837 mo
608.588 495.628 607.605 494.647 606.396 494.647 cv
605.188 494.647 604.207 495.628 604.207 496.837 cv
604.207 498.046 605.188 499.028 606.396 499.028 cv
607.605 499.028 608.588 498.046 608.588 496.837 cv
@
541.747 380.798 mo
541.747 379.589 540.766 378.606 539.557 378.606 cv
538.348 378.606 537.366 379.589 537.366 380.798 cv
537.366 382.007 538.348 382.987 539.557 382.987 cv
540.766 382.987 541.747 382.007 541.747 380.798 cv
f
541.747 380.798 mo
541.747 379.589 540.766 378.606 539.557 378.606 cv
538.348 378.606 537.366 379.589 537.366 380.798 cv
537.366 382.007 538.348 382.987 539.557 382.987 cv
540.766 382.987 541.747 382.007 541.747 380.798 cv
@
508.267 438.397 mo
508.267 437.188 507.286 436.208 506.077 436.208 cv
504.868 436.208 503.886 437.188 503.886 438.397 cv
503.886 439.606 504.868 440.587 506.077 440.587 cv
507.286 440.587 508.267 439.606 508.267 438.397 cv
f
508.267 438.397 mo
508.267 437.188 507.286 436.208 506.077 436.208 cv
504.868 436.208 503.886 437.188 503.886 438.397 cv
503.886 439.606 504.868 440.587 506.077 440.587 cv
507.286 440.587 508.267 439.606 508.267 438.397 cv
@
541.747 440.558 mo
541.747 439.349 540.766 438.366 539.557 438.366 cv
538.348 438.366 537.366 439.349 537.366 440.558 cv
537.366 441.767 538.348 442.747 539.557 442.747 cv
540.766 442.747 541.747 441.767 541.747 440.558 cv
f
541.747 440.558 mo
541.747 439.349 540.766 438.366 539.557 438.366 cv
538.348 438.366 537.366 439.349 537.366 440.558 cv
537.366 441.767 538.348 442.747 539.557 442.747 cv
540.766 442.747 541.747 441.767 541.747 440.558 cv
@
641.947 431.917 mo
641.947 430.708 640.965 429.728 639.756 429.728 cv
638.547 429.728 637.566 430.708 637.566 431.917 cv
637.566 433.126 638.547 434.108 639.756 434.108 cv
640.965 434.108 641.947 433.126 641.947 431.917 cv
f
641.947 431.917 mo
641.947 430.708 640.965 429.728 639.756 429.728 cv
638.547 429.728 637.566 430.708 637.566 431.917 cv
637.566 433.126 638.547 434.108 639.756 434.108 cv
640.965 434.108 641.947 433.126 641.947 431.917 cv
@
474.907 478.237 mo
474.907 477.028 473.926 476.048 472.717 476.048 cv
471.508 476.048 470.526 477.028 470.526 478.237 cv
470.526 479.446 471.508 480.429 472.717 480.429 cv
473.926 480.429 474.907 479.446 474.907 478.237 cv
f
474.907 478.237 mo
474.907 477.028 473.926 476.048 472.717 476.048 cv
471.508 476.048 470.526 477.028 470.526 478.237 cv
470.526 479.446 471.508 480.429 472.717 480.429 cv
473.926 480.429 474.907 479.446 474.907 478.237 cv
@
675.307 395.677 mo
675.307 394.468 674.326 393.487 673.117 393.487 cv
671.908 393.487 670.926 394.468 670.926 395.677 cv
670.926 396.886 671.908 397.868 673.117 397.868 cv
674.326 397.868 675.307 396.886 675.307 395.677 cv
f
675.307 395.677 mo
675.307 394.468 674.326 393.487 673.117 393.487 cv
671.908 393.487 670.926 394.468 670.926 395.677 cv
670.926 396.886 671.908 397.868 673.117 397.868 cv
674.326 397.868 675.307 396.886 675.307 395.677 cv
@
675.307 425.197 mo
675.307 423.988 674.326 423.007 673.117 423.007 cv
671.908 423.007 670.926 423.988 670.926 425.197 cv
670.926 426.407 671.908 427.388 673.117 427.388 cv
674.326 427.388 675.307 426.407 675.307 425.197 cv
f
675.307 425.197 mo
675.307 423.988 674.326 423.007 673.117 423.007 cv
671.908 423.007 670.926 423.988 670.926 425.197 cv
670.926 426.407 671.908 427.388 673.117 427.388 cv
674.326 427.388 675.307 426.407 675.307 425.197 cv
@
608.588 375.757 mo
608.588 374.548 607.605 373.567 606.396 373.567 cv
605.188 373.567 604.207 374.548 604.207 375.757 cv
604.207 376.966 605.188 377.948 606.396 377.948 cv
607.605 377.948 608.588 376.966 608.588 375.757 cv
f
608.588 375.757 mo
608.588 374.548 607.605 373.567 606.396 373.567 cv
605.188 373.567 604.207 374.548 604.207 375.757 cv
604.207 376.966 605.188 377.948 606.396 377.948 cv
607.605 377.948 608.588 376.966 608.588 375.757 cv
@
508.267 516.757 mo
508.267 515.548 507.286 514.567 506.077 514.567 cv
504.868 514.567 503.886 515.548 503.886 516.757 cv
503.886 517.966 504.868 518.948 506.077 518.948 cv
507.286 518.948 508.267 517.966 508.267 516.757 cv
f
508.267 516.757 mo
508.267 515.548 507.286 514.567 506.077 514.567 cv
504.868 514.567 503.886 515.548 503.886 516.757 cv
503.886 517.966 504.868 518.948 506.077 518.948 cv
507.286 518.948 508.267 517.966 508.267 516.757 cv
@
608.588 423.757 mo
608.588 422.548 607.605 421.567 606.396 421.567 cv
605.188 421.567 604.207 422.548 604.207 423.757 cv
604.207 424.966 605.188 425.948 606.396 425.948 cv
607.605 425.948 608.588 424.966 608.588 423.757 cv
f
608.588 423.757 mo
608.588 422.548 607.605 421.567 606.396 421.567 cv
605.188 421.567 604.207 422.548 604.207 423.757 cv
604.207 424.966 605.188 425.948 606.396 425.948 cv
607.605 425.948 608.588 424.966 608.588 423.757 cv
@
608.588 402.638 mo
608.588 401.429 607.605 400.446 606.396 400.446 cv
605.188 400.446 604.207 401.429 604.207 402.638 cv
604.207 403.847 605.188 404.827 606.396 404.827 cv
607.605 404.827 608.588 403.847 608.588 402.638 cv
f
608.588 402.638 mo
608.588 401.429 607.605 400.446 606.396 400.446 cv
605.188 400.446 604.207 401.429 604.207 402.638 cv
604.207 403.847 605.188 404.827 606.396 404.827 cv
607.605 404.827 608.588 403.847 608.588 402.638 cv
@
541.747 407.798 mo
541.747 406.589 540.766 405.606 539.557 405.606 cv
538.348 405.606 537.366 406.589 537.366 407.798 cv
537.366 409.007 538.348 409.987 539.557 409.987 cv
540.766 409.987 541.747 409.007 541.747 407.798 cv
f
541.747 407.798 mo
541.747 406.589 540.766 405.606 539.557 405.606 cv
538.348 405.606 537.366 406.589 537.366 407.798 cv
537.366 409.007 538.348 409.987 539.557 409.987 cv
540.766 409.987 541.747 409.007 541.747 407.798 cv
@
575.106 408.878 mo
575.106 407.669 574.126 406.687 572.917 406.687 cv
571.708 406.687 570.726 407.669 570.726 408.878 cv
570.726 410.087 571.708 411.067 572.917 411.067 cv
574.126 411.067 575.106 410.087 575.106 408.878 cv
f
575.106 408.878 mo
575.106 407.669 574.126 406.687 572.917 406.687 cv
571.708 406.687 570.726 407.669 570.726 408.878 cv
570.726 410.087 571.708 411.067 572.917 411.067 cv
574.126 411.067 575.106 410.087 575.106 408.878 cv
@
675.307 453.517 mo
675.307 452.308 674.326 451.327 673.117 451.327 cv
671.908 451.327 670.926 452.308 670.926 453.517 cv
670.926 454.726 671.908 455.708 673.117 455.708 cv
674.326 455.708 675.307 454.726 675.307 453.517 cv
f
675.307 453.517 mo
675.307 452.308 674.326 451.327 673.117 451.327 cv
671.908 451.327 670.926 452.308 670.926 453.517 cv
670.926 454.726 671.908 455.708 673.117 455.708 cv
674.326 455.708 675.307 454.726 675.307 453.517 cv
@
675.307 412.478 mo
675.307 411.269 674.326 410.287 673.117 410.287 cv
671.908 410.287 670.926 411.269 670.926 412.478 cv
670.926 413.687 671.908 414.668 673.117 414.668 cv
674.326 414.668 675.307 413.687 675.307 412.478 cv
f
675.307 412.478 mo
675.307 411.269 674.326 410.287 673.117 410.287 cv
671.908 410.287 670.926 411.269 670.926 412.478 cv
670.926 413.687 671.908 414.668 673.117 414.668 cv
674.326 414.668 675.307 413.687 675.307 412.478 cv
@
508.267 507.757 mo
508.267 506.548 507.286 505.567 506.077 505.567 cv
504.868 505.567 503.886 506.548 503.886 507.757 cv
503.886 508.966 504.868 509.948 506.077 509.948 cv
507.286 509.948 508.267 508.966 508.267 507.757 cv
f
508.267 507.757 mo
508.267 506.548 507.286 505.567 506.077 505.567 cv
504.868 505.567 503.886 506.548 503.886 507.757 cv
503.886 508.966 504.868 509.948 506.077 509.948 cv
507.286 509.948 508.267 508.966 508.267 507.757 cv
@
675.307 450.638 mo
675.307 449.429 674.326 448.446 673.117 448.446 cv
671.908 448.446 670.926 449.429 670.926 450.638 cv
670.926 451.847 671.908 452.827 673.117 452.827 cv
674.326 452.827 675.307 451.847 675.307 450.638 cv
f
675.307 450.638 mo
675.307 449.429 674.326 448.446 673.117 448.446 cv
671.908 448.446 670.926 449.429 670.926 450.638 cv
670.926 451.847 671.908 452.827 673.117 452.827 cv
674.326 452.827 675.307 451.847 675.307 450.638 cv
@
641.947 420.397 mo
641.947 419.188 640.965 418.207 639.756 418.207 cv
638.547 418.207 637.566 419.188 637.566 420.397 cv
637.566 421.606 638.547 422.588 639.756 422.588 cv
640.965 422.588 641.947 421.606 641.947 420.397 cv
f
641.947 420.397 mo
641.947 419.188 640.965 418.207 639.756 418.207 cv
638.547 418.207 637.566 419.188 637.566 420.397 cv
637.566 421.606 638.547 422.588 639.756 422.588 cv
640.965 422.588 641.947 421.606 641.947 420.397 cv
@
775.627 454.478 mo
775.627 453.269 774.646 452.286 773.438 452.286 cv
772.229 452.286 771.246 453.269 771.246 454.478 cv
771.246 455.687 772.229 456.667 773.438 456.667 cv
774.646 456.667 775.627 455.687 775.627 454.478 cv
f
775.627 454.478 mo
775.627 453.269 774.646 452.286 773.438 452.286 cv
772.229 452.286 771.246 453.269 771.246 454.478 cv
771.246 455.687 772.229 456.667 773.438 456.667 cv
774.646 456.667 775.627 455.687 775.627 454.478 cv
@
641.947 423.518 mo
641.947 422.308 640.965 421.327 639.756 421.327 cv
638.547 421.327 637.566 422.308 637.566 423.518 cv
637.566 424.727 638.547 425.708 639.756 425.708 cv
640.965 425.708 641.947 424.727 641.947 423.518 cv
f
641.947 423.518 mo
641.947 422.308 640.965 421.327 639.756 421.327 cv
638.547 421.327 637.566 422.308 637.566 423.518 cv
637.566 424.727 638.547 425.708 639.756 425.708 cv
640.965 425.708 641.947 424.727 641.947 423.518 cv
@
775.627 385.357 mo
775.627 384.148 774.646 383.167 773.438 383.167 cv
772.229 383.167 771.246 384.148 771.246 385.357 cv
771.246 386.566 772.229 387.548 773.438 387.548 cv
774.646 387.548 775.627 386.566 775.627 385.357 cv
f
775.627 385.357 mo
775.627 384.148 774.646 383.167 773.438 383.167 cv
772.229 383.167 771.246 384.148 771.246 385.357 cv
771.246 386.566 772.229 387.548 773.438 387.548 cv
774.646 387.548 775.627 386.566 775.627 385.357 cv
@
575.106 433.237 mo
575.106 432.028 574.126 431.048 572.917 431.048 cv
571.708 431.048 570.726 432.028 570.726 433.237 cv
570.726 434.446 571.708 435.429 572.917 435.429 cv
574.126 435.429 575.106 434.446 575.106 433.237 cv
f
575.106 433.237 mo
575.106 432.028 574.126 431.048 572.917 431.048 cv
571.708 431.048 570.726 432.028 570.726 433.237 cv
570.726 434.446 571.708 435.429 572.917 435.429 cv
574.126 435.429 575.106 434.446 575.106 433.237 cv
@
708.787 385.837 mo
708.787 384.628 707.807 383.647 706.598 383.647 cv
705.387 383.647 704.406 384.628 704.406 385.837 cv
704.406 387.046 705.387 388.028 706.598 388.028 cv
707.807 388.028 708.787 387.046 708.787 385.837 cv
f
708.787 385.837 mo
708.787 384.628 707.807 383.647 706.598 383.647 cv
705.387 383.647 704.406 384.628 704.406 385.837 cv
704.406 387.046 705.387 388.028 706.598 388.028 cv
707.807 388.028 708.787 387.046 708.787 385.837 cv
@
742.268 458.077 mo
742.268 456.868 741.285 455.888 740.076 455.888 cv
738.867 455.888 737.887 456.868 737.887 458.077 cv
737.887 459.286 738.867 460.269 740.076 460.269 cv
741.285 460.269 742.268 459.286 742.268 458.077 cv
f
742.268 458.077 mo
742.268 456.868 741.285 455.888 740.076 455.888 cv
738.867 455.888 737.887 456.868 737.887 458.077 cv
737.887 459.286 738.867 460.269 740.076 460.269 cv
741.285 460.269 742.268 459.286 742.268 458.077 cv
@
775.627 429.638 mo
775.627 428.429 774.646 427.446 773.438 427.446 cv
772.229 427.446 771.246 428.429 771.246 429.638 cv
771.246 430.847 772.229 431.827 773.438 431.827 cv
774.646 431.827 775.627 430.847 775.627 429.638 cv
f
775.627 429.638 mo
775.627 428.429 774.646 427.446 773.438 427.446 cv
772.229 427.446 771.246 428.429 771.246 429.638 cv
771.246 430.847 772.229 431.827 773.438 431.827 cv
774.646 431.827 775.627 430.847 775.627 429.638 cv
@
742.268 363.518 mo
742.268 362.308 741.285 361.327 740.076 361.327 cv
738.867 361.327 737.887 362.308 737.887 363.518 cv
737.887 364.727 738.867 365.708 740.076 365.708 cv
741.285 365.708 742.268 364.727 742.268 363.518 cv
f
742.268 363.518 mo
742.268 362.308 741.285 361.327 740.076 361.327 cv
738.867 361.327 737.887 362.308 737.887 363.518 cv
737.887 364.727 738.867 365.708 740.076 365.708 cv
741.285 365.708 742.268 364.727 742.268 363.518 cv
@
775.627 357.157 mo
775.627 355.948 774.646 354.967 773.438 354.967 cv
772.229 354.967 771.246 355.948 771.246 357.157 cv
771.246 358.366 772.229 359.348 773.438 359.348 cv
774.646 359.348 775.627 358.366 775.627 357.157 cv
f
775.627 357.157 mo
775.627 355.948 774.646 354.967 773.438 354.967 cv
772.229 354.967 771.246 355.948 771.246 357.157 cv
771.246 358.366 772.229 359.348 773.438 359.348 cv
774.646 359.348 775.627 358.366 775.627 357.157 cv
@
708.787 360.397 mo
708.787 359.188 707.807 358.207 706.598 358.207 cv
705.387 358.207 704.406 359.188 704.406 360.397 cv
704.406 361.606 705.387 362.588 706.598 362.588 cv
707.807 362.588 708.787 361.606 708.787 360.397 cv
f
708.787 360.397 mo
708.787 359.188 707.807 358.207 706.598 358.207 cv
705.387 358.207 704.406 359.188 704.406 360.397 cv
704.406 361.606 705.387 362.588 706.598 362.588 cv
707.807 362.588 708.787 361.606 708.787 360.397 cv
@
675.307 447.997 mo
675.307 446.788 674.326 445.808 673.117 445.808 cv
671.908 445.808 670.926 446.788 670.926 447.997 cv
670.926 449.206 671.908 450.188 673.117 450.188 cv
674.326 450.188 675.307 449.206 675.307 447.997 cv
f
675.307 447.997 mo
675.307 446.788 674.326 445.808 673.117 445.808 cv
671.908 445.808 670.926 446.788 670.926 447.997 cv
670.926 449.206 671.908 450.188 673.117 450.188 cv
674.326 450.188 675.307 449.206 675.307 447.997 cv
@
675.307 381.518 mo
675.307 380.308 674.326 379.327 673.117 379.327 cv
671.908 379.327 670.926 380.308 670.926 381.518 cv
670.926 382.727 671.908 383.708 673.117 383.708 cv
674.326 383.708 675.307 382.727 675.307 381.518 cv
f
675.307 381.518 mo
675.307 380.308 674.326 379.327 673.117 379.327 cv
671.908 379.327 670.926 380.308 670.926 381.518 cv
670.926 382.727 671.908 383.708 673.117 383.708 cv
674.326 383.708 675.307 382.727 675.307 381.518 cv
@
675.307 440.798 mo
675.307 439.589 674.326 438.606 673.117 438.606 cv
671.908 438.606 670.926 439.589 670.926 440.798 cv
670.926 442.007 671.908 442.987 673.117 442.987 cv
674.326 442.987 675.307 442.007 675.307 440.798 cv
f
675.307 440.798 mo
675.307 439.589 674.326 438.606 673.117 438.606 cv
671.908 438.606 670.926 439.589 670.926 440.798 cv
670.926 442.007 671.908 442.987 673.117 442.987 cv
674.326 442.987 675.307 442.007 675.307 440.798 cv
@
675.307 429.038 mo
675.307 427.828 674.326 426.847 673.117 426.847 cv
671.908 426.847 670.926 427.828 670.926 429.038 cv
670.926 430.247 671.908 431.228 673.117 431.228 cv
674.326 431.228 675.307 430.247 675.307 429.038 cv
f
675.307 429.038 mo
675.307 427.828 674.326 426.847 673.117 426.847 cv
671.908 426.847 670.926 427.828 670.926 429.038 cv
670.926 430.247 671.908 431.228 673.117 431.228 cv
674.326 431.228 675.307 430.247 675.307 429.038 cv
@
708.787 374.317 mo
708.787 373.108 707.807 372.127 706.598 372.127 cv
705.387 372.127 704.406 373.108 704.406 374.317 cv
704.406 375.526 705.387 376.508 706.598 376.508 cv
707.807 376.508 708.787 375.526 708.787 374.317 cv
f
708.787 374.317 mo
708.787 373.108 707.807 372.127 706.598 372.127 cv
705.387 372.127 704.406 373.108 704.406 374.317 cv
704.406 375.526 705.387 376.508 706.598 376.508 cv
707.807 376.508 708.787 375.526 708.787 374.317 cv
@
675.307 409.837 mo
675.307 408.628 674.326 407.647 673.117 407.647 cv
671.908 407.647 670.926 408.628 670.926 409.837 cv
670.926 411.046 671.908 412.028 673.117 412.028 cv
674.326 412.028 675.307 411.046 675.307 409.837 cv
f
675.307 409.837 mo
675.307 408.628 674.326 407.647 673.117 407.647 cv
671.908 407.647 670.926 408.628 670.926 409.837 cv
670.926 411.046 671.908 412.028 673.117 412.028 cv
674.326 412.028 675.307 411.046 675.307 409.837 cv
@
641.947 417.038 mo
641.947 415.828 640.965 414.847 639.756 414.847 cv
638.547 414.847 637.566 415.828 637.566 417.038 cv
637.566 418.247 638.547 419.228 639.756 419.228 cv
640.965 419.228 641.947 418.247 641.947 417.038 cv
f
641.947 417.038 mo
641.947 415.828 640.965 414.847 639.756 414.847 cv
638.547 414.847 637.566 415.828 637.566 417.038 cv
637.566 418.247 638.547 419.228 639.756 419.228 cv
640.965 419.228 641.947 418.247 641.947 417.038 cv
@
675.307 311.197 mo
675.307 309.988 674.326 309.007 673.117 309.007 cv
671.908 309.007 670.926 309.988 670.926 311.197 cv
670.926 312.407 671.908 313.388 673.117 313.388 cv
674.326 313.388 675.307 312.407 675.307 311.197 cv
f
675.307 311.197 mo
675.307 309.988 674.326 309.007 673.117 309.007 cv
671.908 309.007 670.926 309.988 670.926 311.197 cv
670.926 312.407 671.908 313.388 673.117 313.388 cv
674.326 313.388 675.307 312.407 675.307 311.197 cv
@
641.947 395.317 mo
641.947 394.108 640.965 393.127 639.756 393.127 cv
638.547 393.127 637.566 394.108 637.566 395.317 cv
637.566 396.526 638.547 397.508 639.756 397.508 cv
640.965 397.508 641.947 396.526 641.947 395.317 cv
f
641.947 395.317 mo
641.947 394.108 640.965 393.127 639.756 393.127 cv
638.547 393.127 637.566 394.108 637.566 395.317 cv
637.566 396.526 638.547 397.508 639.756 397.508 cv
640.965 397.508 641.947 396.526 641.947 395.317 cv
@
675.307 386.798 mo
675.307 385.589 674.326 384.606 673.117 384.606 cv
671.908 384.606 670.926 385.589 670.926 386.798 cv
670.926 388.007 671.908 388.987 673.117 388.987 cv
674.326 388.987 675.307 388.007 675.307 386.798 cv
f
675.307 386.798 mo
675.307 385.589 674.326 384.606 673.117 384.606 cv
671.908 384.606 670.926 385.589 670.926 386.798 cv
670.926 388.007 671.908 388.987 673.117 388.987 cv
674.326 388.987 675.307 388.007 675.307 386.798 cv
@
.576 lw
432.944 528.954 mo
428.947 528.954 li
432.944 535.29 mo
432.944 296.452 li
0 0 0 rgb
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 534.654 mo(\1771)[-5.83887 0 ]ysh432.944 483.724 mo
428.947 483.724 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 490.811 mo(\177.)[-5.83887 0 ]ysh423.939 482.186 mo(5)sh432.944 438.479 mo
428.947 438.479 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 441.256 mo(0)sh432.944 393.249 mo
428.947 393.249 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 397.42 mo(.5)[-2.77783 0 ]ysh432.944 348.019 mo
428.947 348.019 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 350.803 mo(1)sh432.944 302.788 mo
428.947 302.788 li
@
SJADSM+Helvetica*1 [0 -9.999 -9.999 0 0 0 ]msf423.939 309.74 mo(1.)[-5.56104 0 ]ysh423.939 301.404 mo(5)sh412.939 447.264 mo(log\(tVR/tReal)[-2.22168 -5.56055 -5.56152 -3.32959 -2.77783 -6.66943 -7.2207 -2.77783 -2.77832 -7.2207 -5.56104 -5.56104 0 ]ysh412.939 387.811 mo(\))sh439.28 535.29 mo
439.28 539.286 li
432.944 535.29 mo
779.779 535.29 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf436.501 548.279 mo(0)sh506.118 535.29 mo
506.118 539.286 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf503.337 548.279 mo(2)sh572.942 535.29 mo
572.942 539.286 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf570.166 548.279 mo(4)sh639.781 535.29 mo
639.781 539.286 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf637.001 548.279 mo(6)sh706.605 535.29 mo
706.605 539.286 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf703.83 548.279 mo(8)sh773.443 535.29 mo
773.443 539.286 li
@
SJADSM+Helvetica*1 [9.999 0 0 -9.999 0 0 ]msf767.884 548.279 mo(10)[5.56055 0 ]xsh586.376 559.279 mo(Q4 \(arm)[7.77734 5.56152 2.77734 3.33008 5.56055 3.33008 0 ]xsh623.041 559.279 mo(\))sh%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings7 dict dup begin/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SJADSN+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/SJADSN+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b /c /d 155{/.notdef}rp]SJADSN+MyriadPro-Regular nfSJADSN+MyriadPro-Regular*1 [14 0 0 -14 0 0 ]msf42.9131 22.9331 mo(\(a\))[3.97607 6.74756 0 ]xsh436.502 22.9331 mo(\(b\))[3.97607 7.92383 0 ]xsh39.3564 302.788 mo(\(c\))sh436.502 303.509 mo(\(d\))sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SJADSN+MyriadPro-Regular*1 uf/SJADSN+MyriadPro-Regular uf/MyriadPro-Regular uf/SJADSM+Helvetica*1 uf/SJADSM+Helvetica uf/Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Melvyn Slater) ()%%Title: (Figure 6.eps)%%CreationDate: 04/07/2012 14:45%%Canvassize: 16383%AI9_DataStream%Gb!R&f6[#1dP*X>^cd3bCbh0p(u%Ge$oSSTgXlQ1`^EJ(p3ubPIo#[[fpmLM2B<K86A_r?ni)#iQ_[Y`m&K>K=1?dcS1UYPiH.nd%rB'>B;spGC9kE+:FNik>Se#ab;:cqRM9"*5A0dFJ1,7-6*MG6&)Vi+rBSN7t?0,453T6loCLPfU7BnZgcNGug0)ab+mRqEtY&NfA%IQX5#b?Z*/h%=W74.@ifdrU!9(V^f13H-G2^AK2a\K9rdI*3%d@nn.a\6I8Aj!!<$H=NY7pgAkeSt-0$DW.Il#R,^RR?-?J3::'(%-QQO7\mrhrr&OJ%OM;S4epmbq)?3s2G/qcIIgscfHaO0i/A_do&+o[X?Ru2p!'ZJb\()\EM6*15s*V!MWM-g5B((0TQ8"e(3+4)l%-L!K18S9Heg.W^-Uo>2Ke`%tJ0t6)'38t@#jhYJ*O^p#,>l@+&$dbse+J"P>Y^Mt'g*]dt#T\[%K^DbWnp_,EIq=2h]#3cA-@TBh%>S"H6R0@#=2uF3E%NUU/'Rn#&DO4j>\=X6IQk+mS#2a_elg\KL-ZhR7jp%R((0Z.*%9f8Ui"nWhBB/)_31FM'b4lU2<eL:e$S$\h%S=d6%%g_2L'@0&ZM$2j6,UlD<m05&/"JgX1B`oiS9E:S]$?00t`=QF,YW!F.cjK5!ODn,8%YiH6KOjAC.L^[(e5M;fNF,MkOYlSm%,QGdi"54P!IOYp0e?F%op&d^(H%uF-^49fj\KPK'PBK=0!E=qAK;N3t_1>tX9IpMBs538(T*<_6$N.kPn26VeYF,fH/X>C(@kma"%MnuI!(q^cFiN"L;n&BPtPH\%B$,7dMYZ3Fb>:#Ia/,,IR^c%ShCm+mLnErsS[`W,g/,0Fb_H*KGCfMt$4%glEV,W%`=;G4Sfjk`P%c*Hh"bMmk&`Y`'A%u,nD_E6lF0ec)T.r5B'K!2BnUe.Et?\9'/=4d^T"CE>.1+2S)O='`0^Hmb8/*mT6$24iWK!18Rp^Ve-1dRLr%Ri">*"mLWBYRSdmhdlOJbV>/5(GV97/%uZqNj6X7A)&b[Lq,&]\HVtbXWW&](&!;,LoJDGYf,H]C^''e-&fBdmtLDM=835&LZK%R%1$7sAp^14kqVWli,1[CN<t$0;P]Zt80'eQL1Q3F<3c'NG-M%C>Nj4A,A%XL#gp8Obgd;!mD'3u,AjYe@h3_r)("*=o@4SG:O?Ul%%HnTl$D'3sRYH6FJfYO)q&?p?$3\9TSXDJMiX=76fjDc?d'_<>TLUiH(@_P.PAVnL8@GG9A)*71+hiFu$5E%TDR95r`bV=$T%kRRp%qQ#X"I#lH$O&gC6aa@!/+)A?epT"5/]2]l78%L0]REMTM+@\+6iS>tBA6`\nA[o6WHm_WekRYC;X%5m5%"ka^n+[F)0_hQ[j$/kh%Ohe`1n+\Q$_V`mfr0L1=n*.1f4"^CG$M]MTNrOu*r*=`kIkGZMN.4^^nR&,E^T6huO&Gt]4bp=qY?7t&]DN,Q"8\C0.@sqj</P5p%pd`Bn^e_(X#PekkME[<)idVbf+UqktpJ`$CVksEpds#p.>'H(s(q0?83f\.Zhu<MWAZhiO#mS7B0^tVb`tD9#n3<%,Q/OS)"TO#8%b#QYCaM@qf+8<R:C%,n!%c3*H?dkB3QWJ#oQ13UGR7ZC=.R_c^8U@RR0SdEi(]omJ+CKT>YnTKpk'-W=.^$XEA[K$Ga@O'W$=r%e%-1LICbqC?L16ofH;L`7-6%31g[Be5I/9:l6)7su1>_@I'&jp]V4Hk-C;TU0q:K^@;J-O#YU+Q5M74;;Qj=/ksFkd3["T4diJ6ud>%(.`0XRA3S"'KM=3'&Bi7i-/5ZK#F(SZkC6eL3SXL"MmC=l)Y&Q)sSO*_npR.2U\i=VG<BpOq)jm./gD+%l!/Yh/TDoRCoERM;(UG%QDohk='WR(6,8]P:G@$p@kH9=_EG+1m#8l>1eBFg+cZ:BN>j8b703`QmKMo%iit>?OVAF#Ns,YR_@'XZYYE[(;'_s#-9-Q*OM4#o%Pj,&Fc!Vi%5c`P\4N.2]qW%.p.2cbF-'&Sl1(dGT'rHPIXHn5=P.*acKgmd8!>u?]d9TZ=P+G#N@\+eoO9J#D'6MCP-++%N#f2'S%QUV7t>TRC^3Z\[/P``lu%8N1^#?Jkk]I-]FD(Dne8L"=WPJA21=OOU9:8_YC<U5<T]KBA\&;i;:.Z-.-]qd?YZ5ct02&XVNFE[rC%&Qt=GEF`"0*$Lr>0eZ0oeb?Ri'ig71>Z-%PHr.hBXH.$gj&%#T5[s*,19D;TXX"c!V:!42m1F05*O7;+4Q&@0S-#FYU)D\uViY3%%1.,@[HGEOm+HK2I9j4e':h&]L?q<Ap.cW(Tl3Q;sUKCg(+&hs.>'O&*,b-[OR#n[Dd1ZD+cl*!.>p9&GD,<Rm-%trFY[fC8dnEqD%U)i`s[%c;(!k.Hj8Iq:6r&LH&XP/h;Fc#V@):co.L_f(#):],[YCim_b'>:jTk/\Z;T&b=J9IS_Jbi%hI*WopX?9B8h\hhKA5aYq%<#KF?/?)`Gd[S\UfTJ+ZLiPB(OuAQ6X@8"19E3u,WYHi:oeJon)b!c3("c"G<edht)-%<FQUc6M/QLOV`Hu>F`Y-[*8KB+q<>oWg%P>^J#I?%?H1,-9jaLW^6-.6-HDG$tZ6$Z"M9!TnO]oqP)\e1+F]Ys9CB,Ls!Y:5n&A:+:RE[7Qn1I6'+'P[^7T+6J6T:eV2LMVpS%e6<j/-?oa%SW$j9>psL\7^Dga=(sjQmZ8Xj32pDN`RETMXXB'>UbSa*5^b`HUYLn-?,fD?Rl,_5E%dHa7T7dAVJ+#sat-EdO!Me]%mUf1>84s_-AI\aS^V4W^Q`M559WPm/GW3'%)X\O&OBJDH`Z2HojZ;q7cONM&!;]>NVo+Y!9eSnQo([A:092eL-o]@-#]gH2a]5q(%r=:?2hB11']`&,KC^M-9"ACcRO#Wf)WB,[6*?PdKV(oDEVM;IWCYsskDNa<_.G*WCf)EE>KAQOoeJuGU"#_<>7q5hNQ_U-HUojK3%UDA[pYfN742Jc&GNi!HuZm&+iM7al,4bY(r2!ZU2<3EKnF4c,F0c^+Pln\:j-ncplTNO/#<2.*,)52;ESE&j'$1,!sqd(Ck@'s,j%_R?PaccQMIc$FrQ=7T[`=YELAHCh1!,YZ[Ug_K\1+C8"7QD-hTs-T<B@!-^iZ*rjVJuq2!9M(WYOYNle.a#:M3@>SDo`[ub2eIle%(X,71;O4)PPEZ^/CM#YK4C#nsL4,`9RU'd*jBbq4CHtE(lPd>YcO.h%4GR"E0Y4n\RfChr;^?!0$Hh^8l(,neiJ`LZ\!2S6nQJ8r%$UsOJ'@'q"]CC:e.GpuKJT\ciV;q-*#g\XpR4=5Fi$W5NXlMl\RaBk:H1X]"I!H2ibR0Ud>(OYY(\&9$DkqSLG"Y=+MlDI)6#OY<%d_&Sc/]<I1E)g@uEf@kWX*hr"/M$)]b"N<1:0Pm[&XlpiA0oJROfg!09]Z*Y3PSI4%V:=r8q'1N;CT.%1(-Ci@lhRYo/SYf9$$eN%^-p(E`+@]3ReME$9CmNgO'Ik&;e;A8-sNKD5\:p3>bfMT0l2+>!C"I.m8RKO?fX>13]eHrcq;#Uc'fhOb@=>jH-+Kf1dF3:atcGN%A@Ko:/?N(W8`qo+m$jGN_fGtsGo@"+MI,<_];ib`gnNYXD1J,s7[\PTY0iUu"W"S44HZ.Z;FdeC4smb*\B5@>;9I@R\<4MKmmI?[%8HDG<:<;rD_Gb3iTT!A)6ZAO!_?G3Y`3?*OPY*oK]o_C0!L`&4]t]]S?M/cQQ-RJE9(nsa2:XoedeljNa5dhg@q:=E+[=#0AK52j%X"%bV$Yd/ZRU9"^QUgr1&?d7:8$Q0"eMW<;RQYL%YGk;W:rYonp50Sbn0Bu\Q8g:$YDa)<<_t?36DH#Y7JE'L5c't"$:`:/b0M/d%X/ZVq4cs&,@>i[6T^$[dPH^W7Q;?H2;2$hVO>gQ(c`SS=9ZfDk^S5><RA,iNNiP.%,=BUjOI9,!6HIQG)V:*]KuiR/p-eY)LGLET%s.k[W4Nm\m@B2NBr'ELf>A5VNOc6KCT65@IA;!KujF92T=_V"nc#%#m@2nk>otmX4Ff)-A#@MHYZ?laHkD\bfb]=I!);^3*:PK_r%VP74'Z9`Yr>\g%MPPlTn]4$^3nf1d,("ql[_t]ZMD`DB`4rqpGEP-(jJY]_V_:)$)7+]kS6C`IVmfjY%'A-J.b[aM`)u('1=UiZk%U!-SMXh1]:2A+PB1'ca+F)Ql/4l_t0R^PYc>O1.Z*UNH=0S@WmIbsW9c%1jYkW*J+:5Uk[?s(Op3j34/ETD>A3DJ1YB]"$GNm#O+%X1W3lc*cGo0t-580!D`>mD5XbpetlbJ`R*1]Vtd4R#P_\HqjEqY2&Q*jkTOoMIiMHbLqI`LXX),GA!)dJ\_6'_r^F96>spQi//@'%#iKa1eE)%pnX,58\F+CR8$<]GEK?/=j^t[Z]lF@5RrG=8.+]IHh;tFsk5QI`e2I)N%X$Wn46P"^Xsf?Ljb[2ejjkUCIYc_eM)I_t%bnP<hMU$1q)/_M\g<Pqk1Q9Hh2dPF?9=:`L\l@DW\A<\3U-4#LcUYTthbeC0$Y)_]aEM'87C9B@O824dc3]R7o<0RPA&:reSMB&c%J1=SbDnTh.2ZG!1#@EDQ6K!/PXBUNj*#*@Sl"nc-qp@_Vg(_StpuPD&RZEfpA2mkpNTBgur%pH;l@3uZ[$0B[6Ee^fY(fjrI\(Lf%G<(Cbj9?V!?%W'^j@)UMDt^AKPlGrObY?GSTO#Gf2[22hGP0!4+P]sR#"p(RIPP,dq>N_ZL,m)2a29p5>b#k@5$Gb=-qMK-]iCd_%W$Bb45UjiOcl5kn^gbfmquuhO^8\m-++(o?L/:/MVC=WW<^-0[%SO17'P7VL1f>%#d5TRG/(u'HJgL'iOJ?jsB@_\BJn2!DZOSAR%$A.ILBY*u-/Oc<VY%WA_d0fESJ2O*r+BQC\WSu`MUq5-A7Q&u"M&S=/ra`U0\A^UKEDLb!O"^1!UdT2>-18d)QuH=3lFXjlAm?,]%#X"pQLiu5%QI>j^/14qF\H(Z/2W[HV/dLfc[48+A-une)&sj7qlb3E:EU=Gq;jD'@#-6mlmLQ-BN@7SLNN,35eHWMlWV(j)!k(nm%`n_8nI-]+KG78Vjps#HO%UcR4@s%B5>T.1,<M;A;@'j8),V<.72k>gpJV<fj,rZ$8P0r6q%n>dB%l*LG<)<[)[WrAJ)>rKgdki'D%_#,a<gpf<0pS38c$&:?_0$JXb/hg$fd,P1r=jVRX'5^M>!U"XRR7%bA+ukhCF=%aak2:uD93>`Qd5!pmE,LDj9B-89qu?07!UjX[%'Pol9,O4=Wc_N?9Imih=7N`#]it&rsCS3#Y8BZ-5LKDnGfAe0e<#'#gH#;9-\U92h5\dN>DW#DU^4C_*]6tuCg]^&V#!PZ2mZt`o%+5qrq^L^1l&-VIA(W"A[X8HjbGF@pGKSb":ro!57DLVH6$tp_jV[1&3k+G"OqA2Afc$;65f)<YrF*ebU@r;X<"oYTU\-@mq$Ci%B%$sBC@3"etr#[I'\#Hg)f^b*:U`A'';U=qiD'S1"4Ob]LeG4qK`F^Y<Bi%>@0n]TaWc,L[W]DNN>g`)-dd##Y!0]AF_TVU>ih=0Q6%#k/bg0PsQ>s"(tf=#Ttl7`$Y]MdHf!ZuuQWQkKD-6NLe-4@J_jY\OCJQo<=XNM08K@9:?.gqu1!L^`'8S3WnPC<"&m1X.njL/tfG%k3r;"TPn;i-"IQ@nNEPsaIY]@"=pS0h:Z<KUFo<rn)B6oXm_KL'@<qEVDT@%[^d9'"kFbKrW$lrMUn[JQpY69=[;(j"tX'PMOX,'%O=PW9S,`XE?_uOP(DTLf.#)nDO^or*9ZPKb=9Ji/F"'-fQ]1qXkE=#O_3[CEb6@\1%=\/?479h)^V3Y7*r,Em(:AJjE=am=mUMS&%pmaNm2aGX4A.lWr^#\WO0D2s)9E/o%1;=^?(e+C@o]Y1l*qR"kMu@PcikHGG?gT^[e?AQa1$VheN>V>h]gdtWh-Pa5h-Pa5h-Pa5%h-Pa5h-Pa5h-Pa5h-Pa5h-Pa5h-Pa5h-Pa5h-Pa0h-Pa0h-Pa0h-Pa0h-Pa0h-Pa0h-Pa0h-Pa0h-Pa0h-Pa0h-M?"]=g]#GC,>%%n+I[)hsE:1^Y<PBI^dpbrGJeNqqYR'p:J"-m!!f9q![npn_`^kikO5``.,8JM#V@r&c^Zn,Q><g7f7IWNVMu9)Y)_P2%m[YCF"A<%f1>gWYEAV9?6f!P]gh"*H]>u4p)8eFm55NkgM8'`\(=1MDQf3#h-M?%>J8&Boh9?!pcdS@bhd2U6q=.?,Y^M]IgF5%k<p%)'1JB%%L">]nVEK(pY3ck[CMq?L(;("V^$[jLQ98d$NHk@CQfdM.l`TQbW.:5.XL%Q/!P6\eAq`S$BTmSa1kdUAp"HX>s%E2+FJSf]UiQiL%q+N/@FnlW7^B8n8hhJ(7N"c3Kmn]:0X'(KB]Qif:rHg;kK$.S?Yn2Y\jan<I5Rg$.Jfo%4SM#*45LHM.2&u>nIYul6mV!&K7_&k5%(4YI/^?ReMMB@=fJp7\ni8"IcN+nd\`Jp4)>PPgDdV]C]05`+F,&4jj0BE\JTY(BHN+^rYhfHXP\RjusV5lC?#N=&?BEQCsa"OS,%&bbjZX`l&i/NH+$El&Fe6`r6-SLD4S<<"ldo^#qFLH98J%r4!IYIbJbZcPFIao4Ieb_dAKN1eK!6d2MjrpA_Ii:;e&q>\>\(&S%-%`SUA3*X:VKf_s]FM\E'X,aM,T7^kK=2Q-5+LRT2A&[C-^T/FKb$l,HLZ'ZP;ru1SH?V\\*)ZI'Bi<+]!B_pbBSj363/b5=?2T5OJ%O]hM#M/c%DZ^Ct7S_4(_!tDuZ^o,sKTka7l?f:gDdCYl"KeAG3Yl;\65B'L"1^XnF_=^&EZn3>e/b.K^8]_2bg-mh.)7_#P0&?'X%F)FjHF_bs:M-=%M=,jR^C"\kr\M9V&O_r2E/Joj$W"Sg-pc.R,n:1G0WI)MVL)`n+h+rf3J@\ELTgmLK--(VGX`@(T4nF:&>2Vhu%iE#,hHE&B=S9!Y`1hbk]e%;rk+ScLmXS:kp#lZ9=PjQtjlh,@0?C]=e)O0Y;S2aCp0%A[1j^RAdjkr$m_uK5;`e@U94m1r-IrRGN%NmY9d>/c.H3+:4&EC/"-L$*k7?(gNQORn(>Es9&g#eqQ!+6Aggd1LbRWKaLf+/FP9R8cj?*'KU.qpB7Y)c`FSMA1<8AEdVU*E1=M%,uim$IrXJ=6?=oELa>`OEmsH:U<NgfJB2;5FUs%`E!m^DjAFdLZLMThl],T#KmS@E:I0d`-s;iIK1fPK;C$lsmoGK<QXV3ecD8^I%B&%?T*iEiY3TX_n$DQ,hV89^Q>g*4GelX^rh[>")MK97ERdM9En$!$R9brR;`i;RG;-&LJ2=a#M;YZ/o\+kG+gm-`8_0(LmiSoo!%MiG`"K:<@:gjjTUcfU)fM9[Po?Q&f`)9hG#?C8W@XgkAOj:+@1i3$\["[L769:4QWamR^gO7%6P7sf?:q1$$8mVXh+c9kM5XlM&8%&nUhkR-,7?*H'(q]<YG7it3sV$'RP&eC`l-/9C(WDJ:nrJuc2r!NOS=#sH#3C'3;>X4]g\R3oIO\\<,DFke4`ADFtf2'lkiOj'KB%>.#(,g)qTG-E;eXdI13c!gF(QGcaEa2aRdkj0@H@Y-\;B"9ucZVE8cSS9KJp7Xe"[i&55"a?pjKBDBS97cKkTe\gY?Pj]a!5$#Z<%HiS7ClbNI.go;kN7#FEA0chU.Y6^%5^!h)#N[a^AMNiH7%V;?4XrHi2Uc<;0CEl4u4S=StQ/F&?8YbL8*(?i[N]q7bUCVVA'Znat%Z1b\M'lIXg/I^Eg$_)X:l-u))HrC,fV]aoeO;ZO)jFdi,fabQC)k40B[B8E',e8Vu=g1Ol3Gr_1\sCJ5/pf3h?k2=?+bDMNk+`Bo%l1'1>3L2K>"?8/[qKBfQ4rn:[>*0[3?^Z\]me(2[3T+1e2?g0'F$1A%=UeooN>d4D7Zb2BKZkBtp_[uW2*rqQZ'!Gl[bB\BLePV?%<eq'qa@mF=/<Q:Qr'`S4j&R@k3q./s[dF("^`55#O1Tnc'aD/3:.6\!Ji8PGR#Et*'lPcD77?oQg85;b?0+&fZqV?)f]FUVVi+)a%X:^:t)faPnWJVQZ&gLoE_8[8#LlosoN_mnG;guN]'+^9rE3,^&QkjPY2"W?S@`92Kg500A&+4)1E6,6u%'QP@W4.CiX+/G?RUF<p%fq8e5kfaVD%;,5"bbfr)5rrc->HTaof%k4,J3if-fWgri*>o"0R[[(6=fl[#Kj*.Ij6hRS*5;<k?,Z]_GCVm[!F=%Mk.>tV?GH<l%IkfLkJSsVeX?Vr)(1Ra[6mqnOWoOh8MgDK$#9bGNW`eA>=($iBZ0Y[k/0m`62@P;K8aTM<3OreZKA7DA*@!H13URlF::Z!PS%6;m%"N8Lr\Ab_ZQ4)Ad,uQ2XQ@eDBdZj8M<ncPDW3-)ip%orJY\Ws/CM"EhpNU[;Qu]5`C;\]<,:,^ZH:/2K27@>AM4NU7_HGM3fG(e,%FJ4tf'*gE4K^fG;Yd-M/[T(+l0FR/<ZQLT+jr.k6%.uS!"@0jg0Vi&3iBNKWR']2$$aMFL=9@D?k2u@lLXaTn:-_"0T>HP_ZOqk]%1`A]\4It70KXM^M'FfjP`ka*?$3i?rkI!%<1$W^]3s:a4Rq?oGH,2sHQo:>[l#;5f_-Ajd!TT$@&.TU/7`%Gq5ni\?[3c>Od^2$i%>$ocgm@^_9[=bmjedblI=<#P#1c-gR^-(]siE(qWN2+>%d%=%7L-(:;-I@L'enP6F/q0K'Wa_2a3$[W]&t1$`[2_.\?8)T$[VJ0@%-nO*29V"mKU`&]W%L>R"dY(m?borhn"m6u>P<Th.,GO.5n\m"M4#3X2OIHnT*?o3=a8Nta!d?l!O84A[TiCdk7Yuo2:q/eFTWSYM%X7AHjmcuV9:!d^j^ki22MWSC!EB!D6nf^VF-r88!GGSIpSLF*V`kdT'Zf^4^0_]g4FNcn%/n0U\E%s"F-XYQCe8rHP6GB5COGeo"%ant[%E^-&.YF](?ca&P>UW^<Sm&&DBF.)aMnb>::M<43s+@I72O5#d^4r9ZGH*PX_?/GL!_^!6^/f)FBq+W*+Mt;.hiQ5fC*/PXE%<^8NgcN%:Ob^-UpQg1=CrEbGtKL:I8X<@W\0"uq8ao*MiNZUA!^W/j*/oS9r?$$K:4%NrZWJ?tp[mI,0Gq]Iq[`cDJF!LBAT+rT7%?od:RZG((Wn+%Z7Z(E,_A\%j?Qn"-fj/6_.ppDMuV-[gE4$F1u?+TQic^c(>idLmM@];M(cbQHrT5q&8o+]+,mt8J_G^kTjGiF$B%QT+O'$[+&V`/Utm(&p8='tgfh@.>`=)9eG-mb&5f%%KLdm!g%"]A*[@)?q_j`YXA';c,.n$kGP._tHO&3;/paKn\I>ZI$*Cr.4Y?%o>_YS0pahEr:$:29Y3fYi5t)#1c9P?)5^;/YobJ%h&7:RASJ!]DYZVH!,P:KnYsPGe]SFq;%C[6^-(q>6[WmD\t3::Sf?O6WKu:g%XFr>8&]ggBRbU,%Q"KDkm\0BDANK_WW8#e#(D(\W%.$?D]I"_a2cIeqe)JH@$qmVrctcJMqu1.eb2j+9:[gf':m1<7)tefO\@bdR%Y80X#K;WN\qNQ?.e8b(XW:Gd,A"K),:u*KKG^<O"1$,aXM:Bl38aa+_IFUfM<"K9422_bI$><DO:_7kQ&YOP"\$-Gd8&$?4`UX7C%FdX&lilRPJGIPpKIg=0qB`4jGECU8QAEWq=F7"Ce0/Q>@lZ3#Cplk`'cOO4:@f3e0JXQ=sm(H@^khnf_r`!R:jmU6NddT=94ml+Y%"1H\id"$\FT;g=WDl1BEhu-76Kk;Q+B?U9\*V2a41tI'trP^m>'0LX"IP='caY]>KDCtPhXc(/=Pr'Lo#sQF^GS3,Z=*J'51eS4C%\+7u=%[bSt=d`aVnhHpA\^)7"#20Xp"cK]\>;%KYB1]q^K#!grp*D='QN/T_T.V&4_T)h>1aX$/++LT1IQ^T%Eig.tJ'cJL7'u;O%/oNO.lT:X694,fq;'jkNYc=RP!Ur4((?VdJK,U0`K5,E48DEm*#%&*"Fkj[F/Yl^?8%f>6cc6Qb^A"XmE2\sT&kQ]Rf1R`7Tlo#r%!Xj(<.2NrL,9q#%9;5_b3Rn@eVSZ/'21E*93K%\(Im#u-bD@#^GZt%S]=]V!J?!LZXcsKu@PZ_d5R&T&T0Iu?cuSc"*[lIjHB[?5%qCjG,^7Gg"(\OHL_7UDL>qt\S3;$Ibm=-.-gYNI!a^F-:>>'IVIrq7bfZq48's'M[S]`?"!3!ZA@VgL4ncTF"B=S]UH7[iu]:uai%@H"Zf3_k0c_`;8T<(?q]W7PYu<3A4Oc%g,<9)AnKrc/t98=ffg65XL,l7=I"PFk@qe**q9:%g/:"+VGB[rOY1)*G'YI:0=lqhZN1%*5<9W4tfOVeP+pXT0"\p5a0M!?j.I(7J^Tk;7Ki=ip'On(t^S4_^$mWZ\MXdjS4\BZ_'H,@%uuB5'8T+b#<Go<ran+,$"@Rn*nqe%kECjH!WD.F]9Rj:B<KX#!".-%pN-akNEq+m^.W!t^0X[cj6NZQL!.[6EWrG5DbuT][I^=!#R*+6T`>4kYMWmt*kD>uPWG#C8jHeu%Pld[7K]8J#+;E_'"i!gT)L+#Lkj-3d=-i*+002^FO/Qu^Pq%p`]M(uST=\6WJhCH2&[nnMiWR2(mElcS7S`=SdIMTQ?=,O1T[E]U%G^0IEGWE?u0=2HK60]%^kS%QegjpqC"d'7j%kg0JKJHq[.]#:"I]s-1,)\iu3rFlI<I$)PQZ\'6aPoTIBU&UN;K_3f'L<nm_*f/O%*&ge#)9TpVVd[dZ7),c#.atf4./H?;791KUI7:o991BVo_h.4jh>;N0WXS@ur\S6gPX]S9XVk(VPpBqfP:e\<h(&pm.Ku:2+E@,A%(-k/hX60U(p4P_0HIVHuU>4[&gR?-D>R_2.W0AqQC;6c'WhbK#OPrN98EM;!@pB&V7GA=oiX1TC-G1>3C#crnU%M6SZM>`Z"iC4%%6[F_c@1"":TYZ(`5%e/-ee<je;1'a\Q<et7!/*#e;>tS8IS^rk5Ot*-kiWNS1Er\e/?[7\1h>qb"LBAK=Ud^)4:(i1E;Xoco=q8b%:,D"+p@Aeb^.dd,H2CLBf7/Z'6,aAKE'#X1!L14)ciJ3_$*Amo6kbCC'fH!3Kg47Yrb?Q$rsEA4&+`CPe;>$*+XTlV*pI-H;!%kF%Eti#m]K!iE>q@c]A#)rf/_q[#,pN^M5D9d+ba=so9fdNVKA48LkiM29!QQm&&@*Zi[[EgkcVFP*S]jp3k9l@WPo0oQ%F:M$'B&RT%SYi4'&`HuX_7b%<"\DK+723oh5,hh=3#Ql4pJ*AlNkl%Ah`SSkH*L,[fsEl@3e&[3Mod1D^u$TtjBi#.)t3Y*`Pg7pPti4dM4BYM%[6IC:,N[X'MF21^Z)&WHM>`.mH0ShnBGI!1FeJ/1FQsGmRos-JSgKX%AH5\fj5f,5=;^EN?klPQ=g!dt4;_B`3LJL`Jkr(/FhZJL%A:hkl.rDa)UR;IH`cFWUCuK9%%t_Cu5BQYnXNBPl4W.tFg'[>"=eiLObb'.um?bQD4B[4(a+l5EpP@!##`dDmUWXdINEl5<aoKQ#%fg350@ST&N"\%+DCi;)+TU7>g'BNbebuNUE8hVX%r>ksd3*Ve'58eBOP/`q*3f(MI;r,G^n`Dl^c1mnY<t_7NB5cbklL"[J\E+*Z%h_Bu.ZU63">'@'J`]Q#ZMG7DR+Tj+sY]gNoqL&WR<_52&#[d>rm,d7F!cUi(*IkpT?A[r[8i<@3k.GqFN%^)'*P*%MWXOC\?JC1X%EBUC.BXteGT?+5:Y#dr8@IN3G%JW;1@'1Qe,U_*2!q16SZ6+PA(SimRcZRsjr8UN@0`)Tt)Zo2hq*o[*=Qbr#`]4khjU37$Brj%\%ash5-U^&`I3?,Y*Z>^)B?ls&@IUd-Td<bEtLqqCGk(C!(d,^l[9U>S7<tORpIS.0m*DH-_DJqYQF3C=;7TW7UZ'6ERdV7#Bl[QWT%'^F"d%u]tRIaotC-CKssI(h`t=[/\(V=T*gib*Mu3K;s5!-V2"-]'DSH,rX+3kp[ja,sREFF#m"[)degp?Fj??MS8]?NK^":]@9E%p*h'K9@5h/Fd!&:^kk_oqOBjJ'7Ca5@i/a]?dSut&IC6=N<)kTbP@^[GN5!g>cbeDg<InJLeWo'_<LhIh&uAkM#/qd_#-?mE@`5`%O6u+OBD72Cg19t^9KYF+$9*P%!J#4F$F3ZMofZ:pd63$h<NnhNM3_q\N;sAFDG_'TSTB!EaJW6t#C#OTro%q/&,9-EV[l,U$_Q<H%k/O5g@c/7-NQCH,pCH]+%"Q?K'>5,2_*G;%\i2%<q+%]\IlLO]'Z^_+idh?sqAS^;1!tl324'=c<:.)^PIaTg.n\8sIeW`miR,mr%#jFYZ[etLo0Hs5.#<=\:"HVGQYA^:t5a-sglDf3de298Kg\qdWVIcq8a2:M_p-JknR%Oh2$22%n=Tjam]5QB>XD$"q#^jbU(QLZ(%P#'WV<U&I9V]4&/%)MNB_WIIp+QE;0&KOJL;8BpH#!^D\;\0$K7)8T!-^,qEcZuZUDC!^S=;#(ihc&t#IEkI&]n6Gam!,ij4futN%?/aEkMNt>)lcq;Qr?trbAh3QPEH+`Ch@aE\?X="NQI$uA$`WmW<OnatN)j9[`M&<aR;_&_"oNiH)9?C_eI:Z+71#=-f/FFiJC7S[%d#ukAAB[S118@14<Cg\=;:tXEZ_KHg*LdBBg[fj%<-TLhV>T9Fr8<72'f+06_73&[n=>&BeMoHg?4b`h9>&$+cT^oPI!RDm5ejLu%-e0h!N'Di'"gmLib:08IbgZ9KX,\h\0SW/!cgs@Sa3TXeA&(oA7$t$i!P7fLR"+>/Q:0W.abs^jEn^ubZWH$/+uff\XlLNb/P48q%A@u1(n5"UL'IU]nC"RnlNdgNc:RTa\S7KZcF'1\FMde]r@4OA<JbL5Liq#rcdQC7*lH@EnI%'O]H7=l7BcjR#EA%UJ>1%B*-%O)Y%eXmBtYU7)6<l$W"Seq+TMfO:o6k"0%"2*d3%j1:'Z).G&$k4;gUCI=u4U&0s35f8:T"]soP8J_5X/B8FKG^+&:;h;t?::XEA(F`I%4i5>&)mg2QANn_#;h\dZ[?*$-PGhU!k>*IYj$sXq<PJo9\ekOum'BPQG<4V/a.aOXJPWs-_*ps)]d-DBj-;qT>ebiEJmO._)BhN'%/CQBH8UG8`>3RB2!-1'Y2dk36+a&"N!XUtr(M8B8cPR#IHp)>tKb$RIe0')UMuc`.3qPBMWNt5N:ok@<ahUi5&"j]e!l^\72aF?+%WClnf8<i`/o,kM_BEeRM,Z^`+F+0(>*_OgKnDrTjK&@..3Uaq,.XuuG'%57Q,^dIj$7qmY\BTd*3C0@'9L2pTql/S"4TAA.n2_R7%gifUDTlNY6'J9!F`"rbjNe`ZBp>HZ(Wc1%8/BX[K:J["87S<o#d_?nQLR%:6nf>qb49A_Yhk'.dNM#gs#+?q^pEt`O@+tUN7'VhV%"E4YuFsR4]0ZN*Q@Z'3d9!ERT":T+%XkK=PJmhbG!0Gli%Pj?a$MuQM)mauK#1n'BB/o<)dutXIPccL(:[ChO`Kq"l`F=Xr'AnfL%)9u']U;QqG:'tZG$d*pWUIei<PN.&UBi$7SX5X1ErslBLMss)j^7U5%I.hL\BYO/'OAC?Qkd_Oh,L<s6elj[6l-=ZA\-->]?Z*Ap%&F7T>j8P2XFJ^uZ$^@F)*D5`'dumE(d$Zs,Dr7g9IK5W1DV==.lYdD1H4_7W4Q$jNcQ`POOkaO,/sHT])$Hf^'Vq7amW.ckO:FeS%?pL+/W>BMD;na(jom4`8qtGkflE#)6qKhPr_&:g15'IZUQg=>"T(9ge\.)VjE8r[r*EMaOn+Rsk9\fh#-M5aj<rQY5Hu=F?\/cq<%2+Es[b)?7s]lO&q#1S+:3&`UkntZ*J(RI)2qH-KYbL/t-O@\g$6HciHo(4;+!OJH7&"@(@dPt(iPN"H2Rj?ZA;4:Hh*sPO3WP(&j%5QD@@0**JF]ihL!5A5h/3C^4(D.OS;E*XH=kuRKAj_5(_Z7)a+4P]"th-%%Un&mAojPgHiNPa.@/$9ODR#(nqaC/fTUZ"]cpj6@V%g)5^(D:A.0AgYS(&dp9Jh*-AI[Cl\OHj4S>lXl!V&j#_gB\fRi.do-fr-&6>5'bYR/?`DYXj9MqU?7\BTQ4+T+t&88<BSF3b(4!.%RgVC2MhQ8OFop[.6/lj^$iS:/0+1:-n1#QJ.Wu3EqDiq83d?C,?o0:fliH:b^Uh(uguIb5*3FU8fh,j7XL+V6mX`1\58uHZ9\q^8%^Ej9:@,FZTB)RYJ=f%V[-]47>rt%_N>.Y*DAts9phnN]_J3"db<5QuG5r&?U$PUr1[R5[6X"4I<5BZD\"O)jR?uhO-[IA,g/hcE9%E,saUN_[ac_rlG7d?K+,Zl]"4M.%3nK@io_/)L`$CZEj<cK/!Kbo=kUq<Gq@iVFiW,O!b?_,\Z4K_*MXV:2Fi<6M4kquQtUo,^M+%b8HJ0%.Go(X+FC;BQGfZ$MX?:.SS/NfBfF(SUlFPXaK*l;[>OFSCI:'qmb3>^J/=4mQ5q7Ss;W1TPDPO5[#e=!=\St!5KPAX&!@%%h]8gP8n:,;Q-3P>N4NC&N1lP>l(4K!Y3lh`#FYGrd'85Ii)'KAS\r*fUg7Y^FVbV0s)Y1k^!eT_/#1o?:t\Ah-#^u2dRpWW\#Es1%]fpD>6@,e8,et^O[IJKuQK-8D%13dX=-^WkK\'f/UPTbrZbgNV&/P;7$)<6\c?9*^'"Lr?E"Q?qKo9#-M]!Z#&6>`K]el5Pd/*06%O.S%ZrLm6]XHQ!;\Dc.>)=,K!FB5"3CPqj;X2/P&6>%WH.l!"1.WkLC&mPTWIe.k0BN^UBaXk$CFY:(9([)(]dIh<<PcNE!G*nTF%FhID+ZtB[Sh,P3"5K$8T927(^2_:>:?FOgb1metLpC$JF=1Pq@<k@Gl[NmpbdZ6HkCWPf6o\ihV+`9`K?EtImXTu+EZcZOe;;SON%ckU.5DUIDAn:JX5BC52C>Js2OOrct(6)sEXL16u,HP@`;_'S%9d:9fjSK%suWb>:fk]elnU-`%5^OltdX>/>[W0Mcr/.J,8CqY7<%U*G=)K0+D[Od<L;hVVfk)ec#+;\a^_nMrG[&B%,TpEG[LaL?t?>Y>G07m"3<>@5QFB?C\((6oGgT**Mdj?!l>ra-.jVi_R#'"7KP%&AbD5KUnep!b)="BAB%e#&eRCQj`ss(jj92K]1u)QFtj/^#]J/>9ZfXa\!k#SH\:aZRh;<[2YBH653VG%U<Vr>'f`\H(0[;q$'g7%e$-!Ed^6\nVrO(SNKpB?;oaD#*m4ASQo'f?VK.6NeC$)j\6F-LURFmn\'P31j.YgQia=HMQes!q5dJ&EH@m=jhfH9bVEI\YN^6K7%0]<%e&fLQUS0N%J[Lr:<pIb>[s1,G:24%MLL<o$T2.]3]bXAoGSD+mnF/VW$eBE\uIL_ZoH^s##:>MGer>P[3T-_=(D5M.<V(6>%%hnpHQ]"FM&Y[eU1coiKA^i6mbRZ2mP\2cJYGG#T(r)a!;:J!5`GghoGnfhb&2Rhsl_AK[a:,t6l#@KMRI0(8XL*HX^s7Zr^<h#CP%fs#f-qr%J:s..$OF1O&Aj<;=83-4hFnAaD3Z$S5?-aSV=WHX'T>a64p[t<N-9WY&6&*7RWF&;OW#jm`XE1Gj]%,ftpnhh4%5NFJP%j^5jQ`+LQEp<\XodGSRiGkSP$_,!`eGE\"8(N,I5ke_?+XL0IBqjHa5I/innK+FVMQ)dUJj>Qhqn\#,:4JBrrB:%3`lpe-@+bhRo%K)(plMOls-&ZCA\jM-P0N-GX?.?EJ$c-Oj@0c`n7?]pTh[*f"e0\!/Qq$17>KMubl*C"pqMP$4oKgKIm#$p*.@qkB\H<tiq(XA4W%-+7q3J'(7t3>(%p0qllWY=f5L-:S\H7JRJBY`(jrorE#&6F5LZB60@5[nLj1'Egnd4M_ik"f/!kF6`;gW/)gKGP9r$Vo+`Ho_%&2%KT"/r8=GSb/KVKWT8I``n5_ebS7^%W^3'R8T(f!8F*+up7Mf<9[8A2!VQ7qorcoH1XcBC;iH(F*lr\WHhT"e@'oh*Za@*N%WqRs.%^[_-8D=j&8*(n<6(#DT7HmI9608$0&c_2fo">i<S]pkGkD%#eS?[!h^:HfFVJN8F7]"C).69G!`D$KW[J)#mp(^&$.?H)kukA)<8%0!CYV3B9.FQ<l5'BFQ#,j#IdGao20nQ`Gcod.m2?`>4Y3";He2*Na\TGPY\c42*TS9!S?_\LGlm-N77)!Xdui_"O^A<HpE60`,q;%PZf(\\1p1rZhOE3P*LQ(+!'TV)A=0d?O3UR$WOE1d7X(3GV;9(#5_Ju)Lmf$,55MUT_%a_,G6YB!h6isNqX,f"/&qnSYi$<JR2=X%q`i3aV%HODIpQXt:h[mMBK\RiVY#d$d('*9GW`^T1'G2/EX<t`!",$,rMF8Fi8hU2O\VF7!.Fj>fNG7d%((>"EnK<bmTkQFV5cK=%#;`?N+,2oj/60:P2I\OrB$W+Oj[13p)Gktd-lD=Ha$^uLWOX'`UNZ;_!IYITFHiX8OiWG8d.g7rC.rMC!/_Pn"LPVH9K/QTBg\Q<%0n4'JZl]%2LNGd)'Fa[m8DQ.PQGu2UZ$(b2cTHqI>I@na'^4@aZLs'%V%Ki5Aa4h]B8hC"_Y^Il8)W#2kX558e,`!7,d7eCraTgM%oTFM/T+t(N<e?D.ZqrL\q@[PN_5K2com<mm.%1-a92b66B@%LZebsHOoj3>OTIqku[bZE/0EjMtc[5gNTU4/@V,9,Tb21T"n(uOQ%VIi5s+C'Wp-(pfr?T2YMR6W'QJT?*qWn,X0Kk7>R6(fA('G\b@@%/OXT6B<F%tL5WH;B`q4bk;UUJ*oXeD#K/lQ`&rnX6Oobl]Mc%WEd,;+kZ:a.D-#2Su/mA9=7[nNaSMm^.Lou2">_<$VE<+G*"<+TbeqJ+Wig<?bJe!d8ci2n(u1Xq)JG$iR%]!0ZE1@">kH=d8B3"%Ia:b=,7O;4^<t:_)#1W0Y8MA!;Ii6">Dn>na\FoE=-n]6=Dos]4S$Yf\/u-JdfaT:GMFhOA[i_K>QrMD-.f6VX,:+^/^2BEe]>cJ%FFD]T^RS/\gU"ECeH4:beWXTH5n$+dH61OIf.0h,>Iuc)qE`r&7LPE\Y9E3!@G`;Lbi!f#C?7*sAp5W$Hd>L+paV*^Kr$.C>rAq0%kL@D_k6,/D&%"<PefG%S1UF+klL>uq0Y;W7TKFPO-*upheB<=+h<aDcp&=Rr0Y.%GU>EZ^+dli@f/$D'r]"M5GFnY%IUl-TIL($@%:f$;XWZ:&HFQSdt1qC6):DXPrXP),c\pgu0@</b;"12<mR%_XpStCK2XreQh9sgh#j4rY5paRLpH]J"?<t`Qh>fLuj]jC1rcL[st%qMOZM(1U,mIdq9&2=>r%k*WuEm]+Das*HGD4Llc@Qbn=.\/7<;5o/j0md%94`L1t)Xk2gZge1>c.W9^^FD;#TnMAl,-B^l<8ssuX%^Tc%dnk18F!P_KJW>Olc9#YI,#]@;E9/h<G`t4^WL.=McNuaqY.%]e\cc<5bhiD*@Vak,)q6WQ=*FN.L3G%Kh+!$qpr*TZq<PW,m%H`]$R_B*c?EZLGn43^F8==ZX61nOILG]TIEC9C.$n`M9@TR1K.C'p27>K%P@h^<+AJT5aUadE2.ZiF8=B*b0D_o$m*</S[!0cLfA%>%9Sta.L'aa"l$,=MruY*sjcQGG#!PQCi7ej7a:mR))VR9Rq`J,a^[+)$>j_^D[,A2An5o_ALZM0c8+T9S('k6dH/hO+8^/?UH@5%nMa8+5[ccab$GpGI-?*t;(7(0=cquu2C*iDT-QSG3c'#A[R4Q^XC_=3iMaf,ru/Aaeq.T][:q6Qj!0:2]*'q_UXt[)rS26%`IHOM%aIH7#I%Ci(dimi7Q(7,4q4Y>W[epP/@2HC@g?nP/E!F^BZ2@n!1eePZ7De@Z02S1"A,r`+Erg+"G`L"B7P_W71Weu`n#sRZ6a-.!%4V@4m/k6-b^R"-,]3$B#<=jm]:+Pm.k]2EgK4BA`*30bR%4l31W2't*b/NQ\?hV>QTTEec9goBOPk7KqNV#c`fMk347H,]?fA&oA%OXsk6->4`D_0#;nd>-lFL@ebuXQaeO'f'^0,m^:490;rt/-@YUGWpfF;e(8JW>$MF0[$a!Ne=?\8m]`%=VdQ^*%8GBM7NpfX3^D1%2+uIMM&)mi<1i#ohN7=i^?_"_/!i+R:H>fkg>%D%prES,Ah0bA3Af=f:oH<-4huuD8>?7.W"NAa-u2M;rt&n@1%1]$$f.ad_$AY:%oHNf8-!^t)=*]/^R$hft;2HYa#,Ig;ou;`^@4qhA$h$/b28rom%Su9egt\:;ea&&(<S35/3e)sb1:HT;$H7pua7TbeC,4-VXcJ8U%lZomeW/K1`@OaljCf,TAHAqYRpX0bj\;s7N6YJ6Hh\^Of&_H;AgD)I.;!rq,YDg('o<[#X1E1Hf9L..(Z#;2:O6$t0oe&Uh<UuQV%"iiCeb@9:,S/T-q+chi>X!8M/VmV,Fc9aslKG',Cd+%N*/CcCB?;65lhAA[iVBQ$BM>uM8[72F:Zs[`dSXLTbeItt*@_=D\`/L^D%X*UhHG=t34E$k!@^:c#@*?:Vg(d2TRr[?g3A(F5lk5Zg*pl`0Ao9BYH:-uNhB&=:K<HRHDjgCB3keJsXfQSH&Cm1oC+e@Z`frJ"5%pMmD&8r[91md-EmE/GGQ034WX*Qht^_Iql4Zi8@uduHD"&CkXCZ$t9uZ87O*/D>D<8pN!G&$n7od7ml6i_s(:-9@Ht)4\UCcX\f@%'$qOYk]?N@k1i#1G,YMN@B9G7)XZp*<1_!?..q^0b(bgW&9hRga7Y1I2bMT_O?75OqZu&?OV6Tt8&TBc_2K-SUS&V\-E(SiEBJ#6%&HT9&:pI8,NY#W@L`"0u2E\5^pA11cp.'sJF=q<J.dHr&h96EndSs0#8:@9q_G\m]-F<e;h_edF\;G>--:n[/?(?5b@i-H^@5^Bb%CNa-A'O*UaC9bO5!KaE0BO9G]!Vih^%"S;(hitiDnAqTJ`r<ps.AL"]8o'D2Gt<js]V#AGDfuphoq`alat1YNiaX_kYCYX!m:RI6%k*K+l))?!P+`9(&JZJq#pj,;4_^t0dO/ri\aTWU@=Sc()DVOMUll`pLk9NE(R7ioP=NpB,V.=.EGt-g^JR+#K4s^S-UQ9Mm&S'^,%RUgFN4*tXHY*IkjXr^!0A:CIoo0*rjb/6n!LlhU^"R1?7A_tJGMk/639<CY?+R]EcP-E.&ktQ_#^?39f?UJT!^+S$1$`9cZR_<%k%6L!.U^"4U!Lq8?tELU?^?JdeVk4/S$BWi^G:*O-!\?:%.7&72m,FmAnNc;>pEcurl[qE+FT$Q^`k=7_tEL`!m+h:,/pM:+e&ZgP\%"5SfPCB3Y"[j.L6DSd6]UGHEgE-*_9)U4^k8*fATrQo:1912BB!;?C(nL,0#.Y6K)L?\-6VQ`UTTC-mlI%kpM1%f]^G1:6?$?g$L%D`,\GRa!BKBBp'lSYj7i6T_TqQF[F"k4^m_GaF&3!o&a*'$A#eK3S'PHO6,6ips8$:O'S.^Z+uEFV]"1OUXBV9oJoIdZY8;`;.nL%cPUiqKE61k\/TS@NR9G%i,0ZD((Yi;T(/3O&WhR&r^i>[paKE(abskcpEMA78bdED%K)N_D.q==)3Uop?!+H=h:(YV_<f^W70B)@%ZtM)H-V0o:XXtHu0]FLhp"5$1ils';o<H'AqS>0M`;Bf3j2?])A"tt()a&I9rBuXBp%ZqXf.;.jl];eg5[ULI#"U*eNe/$&B_'PZ%e1a@S(4%F145cVVTO61PIWH\=qZj>OZm)5V@tneEZ_n%D,E$X':<i-XBiK"fA<!1o_Tk&Hr?)X5kIEX?`gXP3J-)RE?.<EA$aqbO%rN$afS+`S+19tUYee;ebj*p@Ga'",WR^%o7gKC]U#e8]*&G\YP*TQi35?l2&:e;aO^2Thb+.QiCQ-DWl9YDV5D!h#S,R4]=gHN@?%dsHpWGVO+)E[P0%o]%3A[Duka.u7"dlQthPI'TmsH7a&KmL+T]_Nt#Y28#XD$a[RoMD*3M,&06KSMp\-]IlmE:;M0K>s+r9UbS]1%l_@2Ed]cUY:<fEFJ]Yd[\SAN&+IAXXDUb*=fJZrLD8EL<qX[!_9a7nNE'@2X1!EF.lImq5j^:*>%OE'RE-\R@Qd.<?`M_n'DN_H6%El(#4D!ICZXX7b*/([haqZ*rUdmS;,c,!D;`-/QB(3X<X>3'L\_l#GtZON/ON+:1\L[0U15mp9,Mf3HQYdcKQ_;5d+(>k8n5s.lG%7-`#RKQ=A!<L^VqJm6-s+,9&3aT1eSdep,*+1RC&IW&@t1C*_6gH*$NQr_SE]Xt/:$X-TX.2>3Sf$IQ$d,DZ"[]cB/"\MhB),pu]%<'t;(6&54&fY3*c#cLom-dVRrXeE)(TMtRPfWp7W&?&JmB3[$uILVij"W`'/]6t-ZFTif>,@Um8FOh1KaM7)7L/'WE`YEU,#hETR%Z:3H9j\cni2=Tan5X-3^Us&B3V!Jk7?d9YA95.9tkfLo#.r/M8g?@-63T)=7H[W9P>&s4II'7,KJrS%NUoUfKeqt4h+&>S@/;h7`%XiJn(PM,j;FCqulb;"FkF-kL7_Y*0"<__1,8:=U,M413H;Yb!m\["KB]OXd>jK^;)F(T4A'r0QX_9-2U!ii-^K\Ll'LuF;rZ=2J>%Lbpr`[9obB6e^;/K=ne=CKKl">m\&=@H&9Xmr+UKL;e$g#qqWt<)pmmk'-C3!Ei(2(lQ?Uj@$q0)?RNSXj9nsNSAZS?%R4Q@:m(n%_DG9*[S?0D9=rT`3pAM.gB3Q6YZX<WYf)ckE_<s3gVY!V@nJ!d0.*YSe&3DgF@4b=8JO"X6M@Mf-J!KPeZ2ku2QJ;]74r?H;0oLR%3kk=9AduE%F`pd`j1X!a/"g/MDiPNM=p3l][#iAE=0:&h2fB-t1sP,p^BWP?*M70o^IB69/q^]k1.\Ip@:qJ%2J[!WKDp`'atnru%3jYfp=c[(T:G4WaR,NAkc%q<qa"_Gj(N2",=m.\%2i?.nnX-(Rp>!Aq2k[2Ve)r<"lfD0Z=Qs5Di92[5dHIHE8,(rsl"!T7-_!j(%(2&Zjl"1qUg?m[)gVp-_fkcWlbLs77`4/ca9aRpa)6oS#R$P88%Tf&9(0,(/o*_G>:dR`rV^"!@=@Fj(TXY)Ub];aTV>S'5TWa6$%(C(>GdnD8d#-N$L["We%(>OaUSb.qf7?gf.YuX!\?!D*_X'Ahf`rM_AGJbg,$DPf@A<PfsWISjJb"607/P:9e;R>9(83=Gg6HMK^%XLso(T@V0+R''2>8?J5@d@d;[aIFe^p[3PX8\<'b9J4hRbf6^5@L$&nJ^]R:<5WK0D7J4m7L%-3-Pp!j+9J@XIAWePCT[!Hd'h$:%W7?J9bH3QUYRJcqH14EpWbm1@-5d\,SfcPH3@iF\/'\1.;$WVf-9GBW&R>j3kB1XGCq+B<8[)H,CDFILKur3(/7<KZd>4@LViK!m%0P_tWlIIIu?!\nh7mNMmRmhAM^XPu%%U69Bc=H0kY$02\Y&:R7ZfI&Uf%&G)3H8)$[o,P%==J($5QhkSR;Z!213uf6BsgnNfZ5<9%;EaN=NAB];Sa$&`VtG"pH2aAb_l^9Ff]MjGR]M*=&\%(P\4p#&Y$V]P]WQ2)ol/Ye$T_F%k]0K+^3r/7[N8SSLtd&8S=53V/)n!b%k-e.uB>.$S0'hJ$L)"]_2#nTG_s->nArh)7&$m9UejB[T6abr3Oe=3lj09M,3`m%%3\u8[Zc;;&5iL#)'.`BPV0g65+mo/PE)7!X%o7RqQURaMcKT/rDYm]uec^T&mi,('7ocCoGjTOZ99)UHF]U]9!_m&]4Z=]cgZW2XUDa4jqWJDa3f'I:c_:%D>+"&;Rj_SZ%On!g=%]kG(>FD6A5al"dp"%N5K)MZhL=4GRi_sfrN#WLQ)#5)J-*Nn9obB00F_o``NG.UHdAu1dK)?GOBCDc#Kg*u],'C$4ag%a-qJAIh.%O1VJaIGAC&lJjKH;VuqH;NXT?Km-FW$MrFA74P;RgO]<Wf^,=V(%gO*)ed.S2/Q(p%M4Om;qG>d"O$rdKK:M'_JY+%XqXWLa4@BD%EE3Do=$KjN#Ic:=>N+5l;@9m)hGVNO-WNQpk*9/;_VmY6Sh*%lp8)_=<l%(ul%Z$RqYZ_eATtq>=r=-e*T:ito!<dr`4A%ICZ;Ua%XbA^j:^qU@UOW2OQr.se5_bg]*9<h7`A#X79nkTR\:A0_Y_^Q?,93c?H(c[JR^tUla)$['[HaUGle?kKX#<$h\Hb!&0;>"#%,bi[%5efHQ_6^uH4<RsF^n\b24G!>`m0T%r+$H<Qp79Cm$%;GLSj9?<KV,DUbE=5Xs%#u6Vbp',7jkVTM6`XkdMBIj9FJYol.FTbMWD(?%mS#`(R$!0%C5^nqSV,[ZaiSE!2ld:t4gl@h"cA>j2?B9%f9A_+<nOg^MVUB$F.i#!D$?lP(/(bjPNJ-6#/=B,JDK:)$)"k=2gEiZ%&Q&9c^AMJKDH6i4CfTg[TM0o7m/+=nKq3E%IH[%!jXbp_WN6\.jZL8n`P)Y2PP^r\rT(X`/YOP&7;;-cRt1fBK`a5l&3ulK>.eEB%-[k#uc$eHU*Jfp0Q@$jiO+SL-ji<0.Q\@9""JYJ&"o!b!Ra^Ak7CS^bfe9nd7BkC!'D-s6o_U-VeW!4Kk.7p`aYO;KCLVaQ<Si&&%B)S/KF/3WuBQ7)78$!dg>EH/Q8TI9KC%bN2cS!nC,j-ulGC?j-)a:6=hVl%0B8=PGTk'7=g\_UCC\kF$^=aMbiflY*ic'PCaUX_V%Hd2nJ&u9+1oAc@%(TQAK^H"W<b^-F9!1d8iGOoR\2=iL@<mqq>mM3*Mr_BNYbi7^><mqrJ"P*%JX(j\j^jl=*8%WLsUKkH\V>^,<%F@NZ[])BZm:ebTPQ*XK;lVu?8m?'?-VDE\p]'F)lo-YcpXJReRV6aC\Z[Od&;6J_sD9p5PF@NZ[pA6>@>>8`Egdq;kmBE&)W0V=4%\,!/,km3MSFuJ2_24[T`Wlt&&TUO.sI[UqIG#D%I<(gkOVXQLoF@KQH]Xt>DF2G3LX6GRXl*fcB^7&q6NbqlmB2W6Ij(c/j%Q^k9%D/?b@C-$2:\<`0Ea?-E!1O<6!6qTPAVR)Z'm]`/*oZ>0LX6D25b7:T;b];aUXemm`L3ubUm],N1U.Bq.ppQdpAjtMY:c_s"2[*Zf%LK(jtL/2^3$_Ns?hJ0>VX3nnpkLC.m=[j4^SQBI"T:2[PVL5[4g")6\.[T3WnTXNHeq#n]!Ma^Loi9<r81>t?QEG""Z92E1oaoj%%:l;HcbF&O+/5MlqYV6h`,r[NG-0`&f)6)7SAe`e@LbA<UU=Ei+:,6lCYChJq*7V&mYEs2gcPUS?balT7EiTH$X\YDRQohYG/+!].%G-H>%rh-k4#uYiUeu-_oQ78qUbah0l;*F,\Z\em;2q!oaNAn1dG0HLOm@0l+8&-eE>LVqLT<%eulR_2k*A(+iV!Xh@Vs\4ML.4B:%.dOE"*iEcac1Mak4JnTLDHKHmI-n,:YCncTk)23hf,*.BV)_aJ#.]q<Ura*Bf^c.>P[Pl0XeXA5%;"Pa?tt.k_CfO['L4KmP9"hX%)@FI]]35YtWrKQZ0u37c#G4kA+aO]o))%KQA%itne;MLI5O4j,C:^\Yp9X,l`4_O;Z>1tEm;(BpB5844;CcBFkR21@H/D5&m5JtT%/BK<LB"TW:m*&<XjJ;/.Rh+`7.bOVN;c_aL9j)1ZhQ,`VlA*n[]'qYb("=QdEO.OP.k=+JX%^(]h$Ji1]0*q!hE`<;K<bG1>Q:A]%Q!"_\G\ubc!qg$5WcO_[[biA2pTs7$ebDs%m=HMK/8;f*WaL?:/7`_pKGVR5X2>MHk-0r`-3IW/bmAS*b-$Jmq$D92T3K"N$$XCS%O'<,^h$J;[SWr<ET#gW$]UbR3Vr-TPdseCMm?.CeY!-Cf'CJQ>HWAA$,=]s>$S<d-?-TEg5<C=\ZDndFZ`obPF&WO*B1[9#[Ii>,%Vki@q8)AR`/SC?0<h&21h<,.<ZZ.m]fH]Bq-\\sh7LPaqk@4/`=Oaf!'eplBR+/UK/?W.I\3+mFihrM@#)d8)Z.-Ip"*7S_"S_+d%X,P0+,j3:VL^A>]k@I=BOWDog_$m7/BUt;X):R!TQ\4CO:8[D4L,g,3(mPR@iHd8M]<=H&r".F4@TpmhUXKl.4RIHG+[?@Z^.kp@%ldrXioM8`^D_NlPhR1I.NGJ'`[knaL2?g6`LLP6Ih0SDR<)spV@i]Q%a$#$W@/AM>UZeMn[3Jjn9sm_);i95'-V]eg7V<*X38Zg>%A:-T,>b5NWZ[If`5fnjP\BL@ph1HUWSL,teL@?H+1djW;('d`ohF6QEf(QN09A\e'"M9d(=P-\AeU<Q^,BKL`mnee2oLVuM-A]$1%+NLCW1bHG^A2@ca6@03sTkQZ[Yl'HI(Z>O=bWp[;*3q9h3GdiUlc#K'XH'jgVG2V>D#`cqULUlVf]\6SXr5TXeN%Hb3s$h5j<CTD%pV1t'!:"A":4Ea#$Dk=[359_N*anFCUTsan1;"$,=SmlS*,d2ugT1ZV?Z(\O>pp*sj5rV-U!EsBTLZXJojq0W(X\iOVD#i&*16jC%`;<Jo.8Wh>4kq5_Foegp7RdB+Op'_s^%<Wil'o%q0.0]aG,W,1\c:-]4>gu&9RKEX-b2fN,4ej^"eB['`]$b#Vm><B>mf]u8TAh^%QVHb;#"b_[3F+UYl'ok8Y/M<UR*7?3(8p/[/Zgcsamf+TH-N0ck(QO2BX`&s_ad[;X$]_)*3=cddVIOPdOJ2C&Tb5JRS0\4$GZ_S%ajoNRBf7Iu2;3`^^/\gHla56@&"^mC34<+Vm^29)A<iH9?CWg"Xjq4g+s'rWb%dKu3[iBjA]j9p)rn992HFUr$oZ">=,_1D)k<<o%=arM:K:)[!['5QuSL1fGRL^Ge3ug;K!*=@7Pik&CZ_YT)5?<o<n8;V"B)0O%ftQ%9$?1oVVR1L\<WP87VUY<-4id5)G-dKljXMiP%q(_92&UO-':5AYMdrT.;L1>Eb8++=hF;AKKVqs*TBX?BWd<\HlX9r@$2UChOAZ'K@QW4p"kPA\"oEiMpiXu,_]P8@qX^=Vr5L3g1%I1A_\o6h,"YHdAoZd6Gp8rA*9A^'m/E"J"E;#8TneL0@]F\;bCp>3*>'1YY1V1<_Z)EX*(HM3dCC^YA*.tcd<X>K+2fq+qE;I+(g%RGD+Z*KJh(ni/#FkfMr+*4%e(B-!"8'Vqjq$_'V@+Xq3?@25GHF@am]g@%C<<<_S7PVua:m^NVNBap^^41],ifsV+3[8ds7di(K<%f@IIaQG(u'!%ODnNN)uLec7b7Z8#pGK,R"AALcN=$IEJrTZarA'qj"o5lA:chH7i\4-\(-M/575PRl14?2L*%jWh&<J)d5MVC/\:%oM@_E41;I_q,![?fa2n-*6Lc>I=L:NI(#qamGq)-lglX93g>[j$"Xire+&pJpt1i9T.KW@>j\M>g[#A<T'NlU>.Cucos:/2>jQEJ%.#V%&S?KB/51e-F3i25hocpL)[bi%HoNXWHXH7lX^?N1Weu/B/p4h;r>X&Tj7aZqgQHr=Oos6O`E&H,tcLit?=$G0\,,aLDJre4M%Z^.E1BgUG6>X*#PPk-E74P*B3]%b%-+;X/:=VIV$@U#AgV\.D#WI>f:=0?W>#E!dYCD,5N59aX@/O"c/(:uQXcYWOh51OQV<G;rk%_@Cd_Z9?gcHE+#M"hjH:ITgXDY(GO">X.O\bg5<Rmp&)`?@pHXn.*e;ZgPf?UN?C8+/l+QWS=!0V[54^:A)N&1MhQDT/$fa:\E3)%6aHNuIb'Q(j]\6mch4V.eW1Q4>Fk(m^#0gR/9Z!8TCo148d4sTkPA=GkVB1R?2%Sg_aX4?WIA'Da62[NY_2QB[betj3fe1akPA<d%nW'Y1CsM^[IRLiSg31ATrQHI2I&c)HDY"g=lXs2OVLOc=rOIC.iOgpqg%&B4lfZO`=e+6<lR-c.G`1\Vcf<bjObV8/I+o0!rMb8#%SB'f?/oA=L_s4d]CE:C';N\PKF8_nG!@F`@_0Bc4#DuZVlF0Mgg?)h(?H4ref?Y!]AQHM?Y"dVkrAMsoX`^e=FY@]ni\&OLZOVSW%T?"E8's;!t=3gKf4u6NGk%WpV5I>lU#NtqtTWF[KB:FHrGcm[Xnh/@KD0`:Vog1#P41aOaIQEMRVX8!m_E"T@,1#r:,]B[DR$2Ui%*6g"C51f8Qnl3@5<Y$+?lXq4T_Qgk6F8`0B6^&mSCS0p*l&hSm/_co`-PL3AWZMh6D0<"Rkp0NZNUPq55?j08jBTHmjf*]`e[6?d%lY#T)N2nqi5M+6(3UdCr_.qd.^T`OA,em`sM(,^5<<#-$<>3!%YIr1b$tnm[pU[Y!NAf$-*?u%649)rGWP`&+nd8,`-D3*pV$)\1%S!G=Kb$@TJIIJOK35$?D]_Ub8G>Y$^O*Agql!>5bK(W++_:CIkGe@t26OuinH&gVA?_5?\G9M3YqND6JNc1PBXl3q_<@Zm'Wq%1U%;Jc</9X1p4K<!d=_Gm:Rog(G^r;khYF3K,2GF,QCeZ''#W-e'8:H_O41%imW=]1=>#9WUO](].lS\6B#DEmfnO5&<=qM[QX;4j2h%)aP#b;*fT!*=GMdqB.=RdQ[1LFU/)$gBF\F4E>_b_qo\1r$p1A5J4`>4Folge+H$'G[0lIhc2<>^II(n]hJ(@[m0;,C[oVWZh+,p%c3<9,5gM2BO'd;ZOl3OS!o%I8W<9j>I_20p$aQ5cQ/mP^919F.PVtY_icCVL!`D'L0O$AB<]1GTZ2C:ZF)AZ7>_Re_Y6D%Js&1Tf%43CK<Z!O6YIeSGo2QnIeIQQ56Q)br4hW[f^G`odeV5!=3#M(0W:mHgc#<Lq,MDk:Wasib4iH(qp1uC^G[h>L9hM:10im?^IRm]Eu%6EC>dah3#4oc04Ff:HA/I,bOillCGi;;W"8\q7?!=7GJ_jP:J3=gJ1ua?s-eCa?IKr$%aC_P4f^AC_;"ouG*rYT33d?!c*+?A!$?%-?&7+s0W=@hfAkQg&niY.Kh0P&**HZ2";p0Y>H`,8XpkOT7!jSE"%qS!VeO&:[\F0$6Fk>Nh23&+%hY$r#qfi(_'LeT$AKCDd]"h%0:%>tPbt1QEM%jH44WruZLW]c5eTEag=`!D+V16EQ[idbSB@2N#]\gOg!7bW)O,Q!"CKFM+f0W#E]"q,N<'a74VDq'%BF;6/)S0]%N@5:'U=CRo1W$u\6"[D&?gelbG6$:-77QPBQmpZ5"C=u)n?j$4c[8t%,i-"K6r5*.i(4&YD^jgSm*O[e#JWI]DI[<20FEs?r!*fu%9$gD^k8KL/J5W,&-(rT/L]f#)9ZPT%I,!O3I3mQYELbl]'/P+`>%krrBDP;bSGWCNhF<M$F*T_5nX`X*9\uCP9838\j3Q.TW]i)C%$I_N'DAjCip_mfJ9h,!Fmlh3P`sn(0e>j<_eE`<_Dl41F"NCK>'UaL/DBk63+]q"ia.KlTLG8Q-=FM&OTA]"NQe4;,<M"akj_F"C%,hgNdJ]8(BnW'U4kWT'W5b`hZdRWL&ke#cjT=BO%M1j-0@h``?T_nUBQWLmXLpIiY&e<`aKLEus[BFXtHC$#TiC9,\)Qh9H5Z7n=%9]2H^_]sK^Se/dtJ0>fEH@dfa4L?VWSr@<j":"&Q_@mp0)eQNJ?h#eKrQ2AVW?GFWJZ0.#_u=O+2<'(8ECi8#5S)j<._>+8oC0#H%BndC8EV]dh_$8k"5<e)5J+SB-JsYX<P1gLQ$^^V#,8G`@-A6QU5n]%bT,&$/"r`6%5nmm^a]IT@-moA/jJn6J;L*g0mK&Q:!$e>h%Pb50FGefoB"D*h`+_9kG!![/:")F<N3%o]?$9]Y<eau[p:*!*plSPocfFCu@5=q)8*]1^0X+3O1+'3(7@8SV1n8I)gD%=;2,#YN&%81ekN3V$pRmt0gh*0fZ)jJWF*7Q!YjHmcsVfUG8@?:ca]^R2f]qh@dYTiBNs!(QUZ"D2p(GS4f]F?epn$kB.DLOtUH9GS:Vb!a_&%a15;[5-M-)*P#]D3_Z()@Y_jR?;NXh(<"\8Z>)MCh6WlCmsEaOn@ETX/!QYM^^8h/!<qgER_9Y.q?5c![<-mlG>h"CTX2rNWa=\B%+IM:DV!#g7Off<,^>;esKSSP\3BWFI#>45gmi&KTV$c6Y`X7:XAZUtT90-Xq"-s$mm$UW=SU<J!&8mq%SNFsd$&?sdPj*r3@!__"%!R'"Cc<Z8'FT3[]GAdR"9K=3/J;@$DE5]W$$5X]u)6%t^q8r6!A2j7(q\!F%l]f6[5H+E^_[MOIRg<$?^)!BKMCJZh"E,4MA,8Pd%q.<N8r3]W?Ju@i_h(5`?*hL<]0)ZXba3/ZEC4+8,Gh4S$O/*;n,b&HEB4=F9s50&iR.3s]<T`?7TXYI.2jJiF\p-sj;g$u5q4Eat%K^Kn#B6<g%CA\anO"gQP]<$tis1\+MZ,3_C#@4uKr7@bUgeA^>RQRg^59:$=Rp6iBRkdo&Soc!_)\ATog">9Hk;B:$\I6iVG4QR/%o2INk_@[;S-LXVSOK;?&)O@3T;$Qg/E#JA:?6L:_HM,UI:929SFSOY'TY"hom-4Qa_H/.Vs7\u!T7/9Pm84=igrlOgQRuPkqDHGt%R*Ws$f-hY3X<KfdAM0^pC97d'if*/>BI7I`5VQ>)!'"<XRkVsR?IQSld;8_SS>81W-q8u_!O2,:h`8LO6%SIJH`Zl'jlAE3d>Xh/%Zo2?PSerQ$pugoTkh'ONIO-MTmgLU@/%<F36G'#<QBI87S^n/+hH0j[(#uPdcOjR$l"u!S2YN`<?-\8bKc]A]hMl!?i3Bf&3`@*W%8*+Ee=[^Su/QM]W-lT2F#/`HJ$>d=56![`fU`"Y8`_-&;P3FC"^IQMVck+6mqsj7fnEqK.3jt%5?5nsPTq!h9gK6U^G+VLXTi1Ij%qm[BdUIY35.W2F>F/BRc>pG3$R7/e57VsKYl^1#HWeC#,i9Ppma"/#(E'JTkpm8[S^#2Ze(MdS)l.61PI%[PJ5)=Ceq`=s'aBTp6%^lAGO1#UpAm,'"3UM&SG7t>8)"7@&B#DT#Keq-D$#IHH(r-I=TcCMPT'mp,Gd:sDA`30GQin3-Gip0<XDmKH"2jDMC.sO[5K&PdM%%c+n^O]R7./Im*&O25XQI-/MVm@PEISOORBK%_CN#k*>+I+#SrMa@iEn7pAspL4/joi_Yr>W5??^ie[NqH//YJDBRD$C&(s43s4n%f78IW/=`H,3Ugk]ePLTh^;nGfn"9k$5_josqQ9ihGE]G\;e//R\RG-+A/3\SGJM\=77CH>d8S-<a<GMsh17IU'TeN$bj?c3s'EDX%Egs.\!7i_1j/8f<;gpgi[`c;K8A]q<=]"KBOt_b<>cW$:(3cj)pmKYA0*dVm;&l:2*ji=*8m7*`5*iYd#[YJ*S>!<+B*jPf!+j>E%6BQPrM>$"^1-^g#()!mIAejr5+pk%?)-YSTgpf>",`L^gQZlM_QQlg335XeURg"l4#[h(!O!L5$*f8]\#HB@#M3WoX&3Gij*=L_$%,[hBW.!+IO7Q_P[(r[)S@t09l@2tE3SUh)KTShpRlUDNJ*#V"::0=BVX4No\0WuVo.@0rKT\BA?[nMIB6ABJ8K`.<c\TO!c!U>&q%P>e+!+hK;(Fp@c%5!Sfp_e4$^;]dWoKJ^pY8D/OY4,n38'u&fg&N[.03M>$Vga-uP#Vrb@lXh?lL[=U"-3muhR9Thi;XFd_j5l]`%WYZ:&b/61MEoRa6SaW<D5Ucoh^77/?i3(VP+JtTCi+7,@(A&<Z9F"#M5A8N5amiUek.m(G-9hKpX_,Dp#aa-8!RfrEUVmHHY\6sN%3=c@J)cR2[8`rU?FK@04eR39[foU0GA"1QP<Wk0BWZa%_J8g-#H#oCCjuoNRU&Ggq/'8?GS?C;J;_X'/B6GkJ]3HG^j1Q+KS8YOr%0N)pdHBn"0^5I(lJ!SnA;VG+4h]FTA;?U%NJ"-\Ijm-Yh84"Inl=U7FVbTKrQ\%$?f/)R<F-a,$J,5QH'OWYfO8Wj>0t5Gg)*F^'%r;!)hF]",7?rA@G#=kb'L[]==Dg)hK9P)`]DYo2U^&d^`=03uT0TZ8h-s$BYUQW!<QUh*Jh?KXVoUK4O.(#X#q43`6H\_ZH:O2^`%.rM_l'3\I2f"C=EWim7pX0XnnQ$,K#VCUM:NZGroB#EQ9oFa)Hm&'*;eK*jTcb_%Z?!ORT&J%hcnajVNl?T:=5rb898<lQ#STA5P%Org`BApg$0(muP`bC.(CK<j9$pMcse@[-).AtQ*1]%1%gH[#&I6d(8D9Vm=V%E##GVeDnDT"i'J++E9XT7uL53=Wt<Ek+uQj9mQo%P*l[/hFT5Hhh[!"\`:f6]Va<\">B,b.u`r#ZmW2Qjb]'AGgK#Y3@c>9Igg;3^B@\Y!A3cOStQO@hq@<tAIK>%P!CSK*(f=P0M<=T%1QpFT^il36E'<aJb$cgkcLQd$:S(^rK%F06`TL<JR<@N4f/^?h"-tTH`RnjFj(OWmb_.mr"D2WEs0_UWHZ:mQU/*K3!&e65b]Hit%9[:c5Hk+d5N3PSP*!"l;cTh0WY>dfam[8V4?!a_TB7FRG,H=`iFdG]u.1d/!E[JS:3"&\WB?c%iOKi2@Ie6aITJd:0MOKP3\=V$,%#s-8,%20QdQKCA\[4I[d0=%6giq_97e9e&#-3U2tRel`-N]Ir77[JlDV=24d(\K(n.5CSdb'_jB;gZH9mFR>%T+:43d&;0d%SURU%c,D^%H46'&V/&r,k1g_@(C4d9/LW59:\BC8N8XZ*+4I(b@,FVD3s*aXRGQQ2/ITdDRiRHH[77jc[]YU6:W@k5k]72&nsc_J!C!OX%DjH$9#ZS1u9dmsHSUW#jhqcoQD6tjGY>^(H&@;2_oO&:9'Ya+*[OA`b,/ijIbUiUSDa;.jd":7Be8KZ(-hI)_gG^Ot__34o.,Lcu%IT-NfLB[WJ.?=(Viqlnu,9P.T0RLQnU-?"1'T1(<>MH1o7<3bOn07eH`bhjWQnm^+@2b+EO7'1n(VVV#VJl5tDP1b1@.FN$UH!EK%MDpOJJ\L`X%oM/3A,Ye>Z1WOJRh(1%@q?A/A'<,JaOmY6#50#%PDnm>?Z`mao8U/Z@d1/1JX%%09gNRINij9*o*iIi2rj7g.\+T9%EoQJAR@0Yt!2iqE(#Qu<+4]UX=tb:9m7ua.hSs8XU!\SP.Z#a+,(n.Of'GnGWKaqq9Zkm%65SK,AQkf4X)fl=07r4so,!;i:S3"Q%XhWS72*1]piXq'*7kX>;,u<"D<B04RAOY6Ffd:$ign#d@1?aiI($39bZqd*r\NWq1O3+n6R"fJQDDPP.GWf[Q0HRAGX2O++?m9!o%nl>4`r#WDU4D,sGNkW66%Pp?KJN5HQdD7PKmbPg!1L/2@<5N/`[DHnIi0MZ71$2C`PDf"-^+S:PrY\Z,X&g6iH2DJgrT31"V_`TD%Y/J7in>a8^gYo@&Ou3s`$=5^X*8-B-hn$X?3m`0t6c!"&9h_`2^-j45V9Re4dhEL42Oh1-?a>*Ra4\[Go'h@-5c%hMNI3ZiH?t97%+f5MgT*g&H_f4W7r+>i!&H,q^Y!b(J;8i6#]s>NIs(%M*=`=8V\qH,hDPh]/EHqlQH]??hcN;@p7Bj6bC+HcTpLtE1fIb<C$h6)L%iDnJV3b)L*idR!lmY+feS`QKp7Xjpa,TgG1(d4b1AG'>82fDN"`]]cV;s2p0jm1)30^6'g-2;X%&fi"IVCKg]ci8O#p[o/A6<O0:%PHWqu4ICam(B[u[mV5X2f#t$d:4@GoMRPN13&.&/!uZm[nlWW:.q[s>@)-3bX'uet0P=7!08I]H[AHXiE+4.d?Lq[>[]1s(iP,lb%_MO83Hh[a#a_WT&T78oZ<::9nHG1)rgtu%s##BkqPE0)7'JH\)m\&$O=&(oMLGopFe&pbcY0:hI.Y!]G4IK":]A&cRl_a0L:?fl]%7OMeKh\;:1>4+)T@qGV6b4W0-_+`S;m^\H;5_Ie4@(>X)>f.F@jSkC\UD)%+71EY@q7^)uI1W&$;E&(IjN"?C/?/K3\l.4*qKpd:%c^6'[C4^F%J0^`>QnbRL\*qNlh47*%/>4?I-@$;*[P'g#[Bt=JG0XiMol086lh/H1T1l]Vo?Xn.G:0/l8+3%dJ"=:nS_-%9b#QtH%(UV0pnk.T.m.T)^UTlgr0ls4_gtJ2Kj[p9r9&-m7n%+gR3f_R,W`Ts/NFdZgGj>N20[mTjjXbdr%2?L^GHO_H;fT$"Mot13[h0l6%@8;86j3o*"gG3KWV*@ZB@D^<l.K/Y/f,Z([5ZF,Ss5WWs#6AduY>J'b]jJYTnY^-,OkZT9ZX6FQj7CSE[;ha9CHjKOTQj_6f5FK2%\rAh"KMM3<GCm0%STV`S51:]u*rbaGNEP(p6Y0f&%sEF!!=6i%Q#L3t5m@s156KQX6P].q]\V3Tp$qjuaR9[RI]s+E3"[P[?Kj/K%mI=RO:5rQIWSGI#GACg,7T2-08bp$*U1/K+.-\.ir-1<7Mi,_orF&V_3\7hp+Gh\t#LXlSh*bs;eP_d/+A6N]=5crW[g?6_\b2[m%Pt(.hY135CBr4Q<JQ$<rW&2Y8ad&=/<1;mmodW\<XOOUWBln(-r`'k*M_6cZQ'rao)GG4d3G>-FDJmt+;WC3B;)O0>;H&9A1\8#M%dU6@7Jl6Zb8ol:Dfr4AU&bU(K<OdGUkqj3q0sN%uF`]YK[EU)"YhJ7Z/hA4!ICQp6?XHOi+B%n6[f9s1CG,5##0?D\'ic3Z,aa2X%PFK+M>rtp[Ar+hT>VoH[\[Xlf4,`D^Q[_JCXf^BiY4+u_6=;;th6HeQ[XQ&WPqW``)$pBmUfM"[DnV7?rhU)DpZE4fM&Gj@a)sZL%r@^4L<<XI[=^518TN/UmiK?`=qE,(Q+5_NsW(!)bZjS3"9sm<0Ue`F&q.YJR?-V,jo.pVq0BPHG]lUD<^CbnC[fgoh+&$(IK;YJS%lfls``57-0YM63PKiM=:DKS'kW?*:r"4SXUXJ,ofKV\ZeC_g?)ff8s.,Nm'H$V.)XI)10e_Ie:Z4?=Ec1b.>)E8*t2o_ut\!mK*f%ee2&tp0h+,5H[N<`,@es(T!t(ZIfL`K.AMr2kAAp;H[gXq@-'?kL1b)B'pV3\+W,L+frdI9@I,/mM/K(EHu\!_I3/^1>"6@(a>L-%!g@D.9hmk*cV^,^!3;`qkc.nW?+tD@s#RTXX"(G1#(:EOR8m9eJ<oJ"Q&^_on[;W#.LVjZWq!e_7AX%]WmXaABo+"4d/2h2=`(eV%<Fu0>-gqG(LT+*M;50tZU4R<u$WR@B.=#:]`r%;+QkqFE[tOag.Os-foAb7=MMdE<W(9qQW2Og&A(Rb27m@?\9">cD;cJACqj/ep%lMIL@N[@R_j-IlRW>';IDhb=;Di<3d5jI/!,Zi]EH5Fku<%V1A<)GMQ4NWkSLi+kd`CUfO`35FVX82DZ537Zc.S.b@E[CR%]`Fo\%^(,/e,>a8<"\V<9gS,!5aV?1'e9g^2=.E7;Oi)Y/MN]Nt?KB7eDah3g'j_r"RcKL'>WI0.GS())q6i&/d&q1t!gR9;R0aS,0Pbpm%_e'k(eCFVO>rehiFL)#?YVn\L$.OY0KJIg<';u9@8Cd&FbQR4J!4(")AJ8bK+R%AZlG<NV5,J6PTNUk@gh6]XHSK:;V&/5]hVGXG%MlJ1J3tnP#!smc,TI*JO##K/a?k]IH"%`*1^W$C+\SOoQ*m+VkdGVi%fLCWX_="5)@EAL9NbK0*OP\,[Q&/=4IX&=HVnTg30:Pa^%HV?j0V[=DjgCP=-m`cBbSmD_H^Y#s.dO%O[D2L7'cb/E0^oC!s77Cp=<N.Gg'p[KtKrRa870UC[UT+GM#?Fhc.OrSZfr_80GM/mt%<qWV$^ZZsK8W!:KmF7;ck3hNpJ*sfBD`c`TA(1\u_(:!4n/@?+7Mg;q't@L?k&eO;cCMJFKPB*TH`Zl]]*0MrA+WctX]G7&T3-dn%D0F?gP30g<FA3fP4\o%KKi=/+HoKlWFF2M=QYdVMq\HAg2P/XNH-*Th:KGH`!dV/$%Qi_(bB^CFQ;m9VZL@E#&2&#Ak2AMCU/>$?%i8CbCIlsTU^'RnBDjKMTZ^4I0EH4#hcdb#YZ6l%"rZP:ufZHXZ>OG4S6bPQ]`Ed2dOVZ\eYBO%hY>0KPhI7AdQ-lSkZ[8@_^qU\i%jR^7Pm(I$N]jF3PE=o=\nU[j;<HWr[jU\QMim1T(NHaE7=j=k%60++#>0!XWbFi1t7Rr`@2L_E&(IR#j/"`JtWR\U1.4PKAVH#,%%CF?:Um2&!lprQ.Dh#qe__RTtF.L,<5[>P`'MqUU6db!YP]C(b\&`hd526',6)qXKoYY.`Xn*IF1CLHUl0#7\b+qk-$FEnZSX9="O%qc!Fr`Squl6U0Zl%\>HoG"N3Yc28PK;s>:oUOURcPsk(!O?<4qp(tYjA,`'#k`dFD>*-'>[`%,7k#O]QbuHb6OP0(\`U&X>_pm*d%&?2/R(__0W1[*qCXUFCDiUV<RlTa3ODKLhH71)m^F\#)kWYD1fi^diW'e)OO*$s]k4Rsn$Tb)?GLYB]q0)t;4nlhm7[)l!Bp3tb:%.X`^5*S$jHLL`)mW1uCa,)6D"LbebWK4Xh,8*=(+Tu6&rDm`T$MTO]<TNNLnBN@kKhUqo=kg=fY2$?Ghh'sjA^k)\W`o?udWNYi2%D,.&t\r%i%DH@)7!-nO^]V4fWX1^#O*S$jlnM&cI7)AE"%l:u0KUMi.OYHUs8gI*(@nrX/AnnVU02ARb1H!:rYk86#oO*F]"P!\6%.IX3XjVSLT\T3o>Z\lA2h"ud:]KQDdQGh*7Co==0gYZT"q0*`-ZsS8&`HQ97V*r$(!pS12>^s;J3@UY5KFpQ"4*\.IQXkd?'"8X.%\?h22T@8K`6dUN&GF$54UP$1pmYc]DV@.P2fkKX$\P^4Kn(F+b[ZA#(X3*WYDChjFm4,gDMj@?tEhnR(?dQfN6,&V;prZKj07M%!%21-j.p_J8;2h^slqs`IO+hgbKO2?N^96QTk.b%>'J%)BY_+J:=g0%IigJtZOhCYebm4*0aM40ZHf]8JJBei;TpX>]#`HKrKI(q$J%_;>#j;H0?]j5>'&<]7[3#ub;@;8Sj:h4M`hJW4hVLm9Zj!d/&\U[G*nG?-F!0`$2CbkTesfu7NeND:SR3i\+]W*9)aW'XJ^i:2'W%]aT')e`eiH`T-2h2Z6oO'b_stoA!Gd:Ff6/OJH&Y"[h(BR="[Kkln&3KgU4Mc<XD>Yd$tdfh6OD.Y<(KCes;u>O1jd"^QS]?sa^k%KjfbMhKAFlGr6IrXeX;@mIHTC?+@3kbiTBB*goo3VE=)I)3Ji6lq:BF&_82E?A$CLRL%7DZg0_/EkQq-,\G"7FSSW!%.',@;Sq5I%OZBur6^%=SrRjip8uhZDWamc^%#F2PW3j81qJ#_6VGI`3g+01d]i5rcmYYaoAcR0lVYKk%YrXW2H0qbkriOaX,(FY'lFUMP$#Qri%Y.cu(Ht3(Vld^20"%s8="3[)RDQ<T1%Z1ZbTINd';=(P1SOsTa67u'KVUG(re*B^Sf3cb"WC/Hd?;2`9V)9@#&lU6$V@qu9H8UtD%@r4r:=#\(`?"YY#qGDM7jq;EX)f'UKg[DUL;or.FSkUNdqt:m"B.@VUXTKH%0=e&]@UR#O'!lAG<oiejdsK]79)GZl6=Ur@'4M7:%_o"(dmJ0I%bfl-309,9l-*?bL*k?L.WMDQkGDP%Tc;`6+MnpY4g7(^\:I8VBe]M0k]pMEGgk7S_''uL;m645jD!F(!hL=WoC=S\D%Y-*@P;orQh=(j)*optq[3&W]JSG&a7\M,T037dedM[aRc@aWKK1'AmjOL3_%7oui5.nCKnZW"B.C5D9=46p:mNO?Bml7GBO=r)_q%#Y3.;*?Dlu$0+aLJb/!#OI?Mk44rh>SZ4bNU<S2m4$)nQrEer`^3cmI5e1eRW]O="k&%jVIHoM&gV:9`6(ckikpJYc850oSN7!k^%+Z7's`L0$!)/N`-2qZqYkL@^X=.s`R[.ZZ6Kk1T\;mCFb8KZX*qCq/c.HB6adaZ9T7Y1,E+-S(=dlpd#l6D']V%G#=7VdF;-R4jT%)Kh7r>r'7s.ZMQUWB(ojUsadHd7V[->#[pG6@4uP.d2&BO%jHV9r5\/9IE=d\.,>Qg)IW0p8ZP_bi#X'V('s].V1XMWmY/O)k^$K%FktG7Rs:?6?ij'F;@Kh/O,"[ALTo5SA>TD-8iD4?NuKC17X`BZWOX(hps2Sec&SFapTDro`]`EGTh7-?2,U3Ra,5<%X,%C+Vp]7L%^R$A-IT.4k4hL$3<ILl(+CPUL9losPeF*:8<>t:Vn"O3T/]mXn2[>=+`N2r>:Ud>\93XMF^+YbkC)>Dh$+EiI9XO3[;8NF91dK7Z%]BOH`FM=!I]?NeG&[d;9Pdjiddd4_Q'O)[)[nVJb:hd/R?&P>PfQsUbV7EL=hZMU/EjmNXMX@t=8par1YhbRn`Jfph]o&4!rP0cO%dBf4V$G%gt;_U6eqf-+b0iP*Ndp$*?.qXgqeq7W`Am!%aM4(.-X^Ylr5;:FCoI"5Xp<3,<AcP'"aa1ZbBP(X:E*EXT>3OL8JKOY'%8=5gq2h*,I<>$YX[eZC`Qri/LOYEuQ[7Zfo%8DL%e_KVsKXj[kJ5A4m\Qt:N70XN[o%kJ=_$\oKHf461o^nI?$Z83a\jFpk_JZ[f%PV(HdIR0UZ"jPN6'<kjAeXgd.103T,[J!:4f`e7INgJHU/m:a-=d7rXK&^L1K@c]7f`fBum&Tj(X;n$*`2oJCaY10,c/6dn155"7%h%kn33Eemr1$bUMDbnb92N.1\quU]#,?beL;KM#aN0ns@f2R"q;[L-#mA#07NU'5\RicR,]/Y3thHuM5h*q>RU<)9;89ak5K.&L_%!V3\2=(GLpPC4i7g2G[4RL'[rm>:4F'H*nQhkq[inCqUmM@B+J(T[I_)f=tkhKO-/b?^8I7A`!";r2\iMN%,DFHp2e89R:3#uf,&%(aQ`O(J:'c):-:)FHs2Hlhu!P^XP/fYju7)[IJ$aAtg;Cc2A9YdbJ2@Le7F=C2WeBq^%ddeh1WJ)S`n1nU>1Q*khKYNWgbRHFdH%%Ulo'YpIi2$dd-(FWL,&^?%.@h<3RId_DQL0Q=D)Y;5[T-2;mN,moi&%D14e8722M72HN]ZDMm-GbP:r#JmVfaZhoUjIqs15QX::D%5JK!N!La@2Fj;nK\!L&>AB4V"fk.:u[(.Yu5&[U2D3<Yr?;c&?rRVhRdU#h#b=ZQ.\$MDp0:VBFMjO%%8dm7BQuEiP5P4ZNIlWn^%/7I*OJVGtg'0^(W@B^s>2O\T/Ik(i3oI5DuZ@3>]^3prk%OU.&^:!HIFR&XL@hdS*5)>Y;FVo%6%If"?@hj,eSScl1T[^,?9?)Y%%(p6QY5K(5P)p&X5>uC!2co@9s#hmh^W]fXEG-a\a[^E[:B^KbeDeJ\KCnHFKMi5Q.\*H[C:S+^B9tks'<qCV[f:K]f\'`j\BMuAH%OTgVBj-jK<\i4rWPd422''tIUX[0$;--+=-&))YK];U=8g3C$Yg?ksjSX3;e[e<Ca.TlXlAa6Z1QBIQceA8/^$C7e"g8PQ_2-$k_%mD4ZjQBbQnO.8nL*YQ6(IG3H9Vp_e*]sJm$:ShK4H=>;42ngaJmV?OEij(PU2nhhaFWK6B*$aJOA`%UWpo;5u4MAo^mGX"2lTMb=%1aT?AII/T"$He_P>h<>P=PNQ-EZ^\A:VFaB.eKBM_n`R&^oG4d_>D?lTHkS'>i-"P7GiPR=;J5a%p%GL(]@.KouYC4IjId2&gmU+%,YZPC_Z^?F$6Lm#eD=Ck=V\:&A@M:oHg:!*;e_:NnRIf(1K8#UT(6uH>A(/+)m?jBYcb=1nrh^,g3`h!&2\e6;Llj:2qZ(R#GDb;%iP`(iSW97Bd,O)^jEZN7h9XC`ji75)-f)4$p]]>Ho($cj6]+;BHVC`p&uK]3;A(C8A"GFg8>%4X:8rQ%;A(CcnSU`es7L'&<BZd[%giuKXO?Rt9Zub:Bn&29jOjMC9")ks6*XV3R3As'(]5iM,Fl"A%g;YRLm%B/`\(eHge(NL;9PH#M?)W49Kq;$@<QM#prVlPqR\mOD%<2$k%;r$7[1gP<_)gsX9]2YJlS\ErVI'&`[](kt"/aSJm#L/;?:[TYJNU"G3hVoIo]=YQ@WC@#._pCDWoOdm%W=cE*C?L1$]Pm$-%#079UKA?d9JdreL>FNec%gfY5]/RE[a<#*O`MQIaPQ^EW7RX/I4h28`N(Jrq@c?qugA57]$.u=_2q`G`U)^,\<n9D/DMDuP9d-*T%\:%9-_O8gnm\.3rLW>_2;8'!p-QcZ:gh>5_Is!A>g&F.,pGWZ"fraIN_!3;VoDd\6r@Q/i/-9];Qra'qNeef88'UU8\\o.DIo=6D%HoY!tAq,'kKi@4C.YaHn8eO<L)=XB\kBLV?"4sY-?`@:M;FR.tT&^7I1$#l=-SXTM9(s#`Css2f2p7fK5?S9Ks"h*a/^1Yoi`c6=%;HI,Ii;WK*o"'\Ym'Erq(Vqmim\6aUK?K2I]nbcb5>:2#InSaGC;3_TrjNT5<u^TW5d++2Sf"##r41?44Kg["H_s*t(J7Y$C[4VP%!I>cd5^Y#7kO!j<3<7;b]n<6PMcdsip[)>Pf"7Y%9],i7DS7Rip-&%&3%TAW?7QQ._E@P"?>GZ4BNP31r`1X1VG:;u^);?q.E.V*%?SR[g7DT*\Q!Cb6Xeb7SQ0onk-[d:#IWf&d1LruBrT[T(PYqnsqH.kl$qdCYmP$Ms0f4;Gca[/&`_`ij$q_L:ZqLW*PiN64)9NY^%hZd"m&T8kj*b7lS_:o)'8kV`eiO@>P.P7K5m+Q]6-"\oSNbifR@8P0Yg-r,^4P5`oA!_Q3Tl#JeMl<%RIeQ=AgAJM:l75_u6g(Z7%`cSL$m"rof<Y9J(+7u!,9,MgCE[UIV^3$ZD3iOc2c]0'*NicsKooE`a-a6s,]NX!KiGAM,l]'r=9.Dc`d*LSm<+]N:8Xs$L]Zm2V%q_OKE(P;V;l9)]D?`uJ"mGbKS@5iF\n9nGUVtGJGBuKB!_Hg"\:EEN2f4aKXb'Tn,H4@&sBF`8cm3Qb`1Bsl8d9)0=^iCom$WMp@%.MfOb(Bqm<Pt?8nAR>H9b<NM'VSHLPCJ3Z/r!rRNB1)H+_tA!1fsA:5@HMc1-D=^*q^-_[;X"a/Vs.3_DPd<MTM0:,RYlJBH$a=J%"5W.&fK/f3KVc0I8B?"YQUrlh[u:GknOh^.H>L?ujH#I6Sh^qKm>&7&?JBDQCl\&qe&_htFi>jG4kN7o_@2:*DXNj--#e4K<6'2C%;0Bi.=0'e_:lM^T4Coe&ifd*].t8;;d*paHN+^*EY=pj#]8Q$UY-F`KeqKlf=2/BsAbQqCrmU\.ECGR*:p^_$?[4[i2F)^;4C)C7%X5>_JZG28u4MT<O`@I4s@qo?GX*E1Cn^ECg@k+s0dJI;_1#mYc51@#'e5!2LbgaY9ob5Btqh_p"1[8SJDa1KA1D@7$(Gjcde\Ri/%VlQeAKomikgM^"bQ(D8A4l8HfS<9uCTDGX6Km%$O]ak=HGkHt@bfo@A^Ck,i$$-_<IZHNkVmgRR;!/1Wr`eRNDk3rDFfp1s3`h<a%E*doR^&AZ0QdrX0@ZWWPnFYU!=+BO@rN1/6g\G7n*i,VrgAf8U=)WTd*5E'e:]IP<os`5sh`=iR=e2V:d6!P%o=mqhX6D67XZP.F%RVe7'rO:)&h`=hglWjCdlWg-s,]CF>fNtSTcBW2S;WeCYr`eRNDk3rDFft_Ul<I%gcDTXlUIgaqoUi7,p%I:$^;K^'ftV[4rmnXV%>Nb:d^'`-/g?e9+Kk;7m]NFX3$I(+odlU"YlYi>p^NH^Yf"(X<9:5SE,@Pm))K(foV4ce^Fft_p\b]OnlBg,5RTXG(5'=$*_PMn`%rVl(ec/<JSQKqc^9Z>ZmhZ$O#rmnXFUWuj[b<A$q6]Na`l<JnA3F"uNBChQQ=.^"iji6p*`q>>9M7I(Q)[S1\cFTB+RSNn6\bbp_%>Ql)<kIQ#qmni2Ifld>)<\JGk(>lhumLFklpg>&/XTA1*c;dY_Y/K\frZ#Tr4):r5n7FCSYJ,e3:=L_nq\@gKF2?PaK+4*rXh<5f%/5<X77E@BG6<%)gGF&r>@o8\Yp[>\LV,>XKK=/J],*k^U]aiQk[Yn6+o-FpqrjGP,6$%/-dHjWek'bU\i%D[WaK`2@D_Lr?8d!D*%MUGmSa,aUq*m6Kds44aG^!7AQ*Re*LE92NSho8l+`2]rREm:p,HX$8O-MJ;\[Y(`lJgdq*.m)s?T,1,r9<PQA6ouotSBKBb*H\t0%AF@D@[=`A\%p,gQ%_CL(dWlU,+@sIHT6:c:g)%(!/#\lRl^RuE4FF]4X<>/MW59%Uh?m/)Hkk:"f3:Q>h'H?VU&ACCjAsY*T$"1L%]t)h9%SGf%)",JEG>"M*.q6+F\qJTm*k#6<boEgXHs[r.S'NcP\I(F^H6&h5@63%,Mrtmc27n?lGM/TXlRUqXd@&J'rGDe!aaWe^%J49hZ(#@iT!0+`sS^Yh]Vl"oYF`q&@k'A'1F8lDWi7Skd-?t#Z\`38YWXI0%GHT5snQ:<ralEd9d(K=+\0/6#PJ)-;#OhDN\Nn]5%;$CXk?OsK2V5`To/3oCJ7Ait4L9n?gJ-L+m2e\r2a0#E%.R2t]P-=r2I'?3I<3ZE4??jM[S#4VQ%g?X2q*`mUeV4El:4KcujEra1%(=#RuPOm&WgTNMiYFTT$71X^eH#gWeg,SiP/<%92))R)OSSs6tF`neCf=W8]YFTU/2GW+sEXX%=^YA8VY-".]Zj4q?`7lAXp6BgK%P7:M2n#>e_T/KYa#"3T:Q!3frM4FgW`$\=K[`b[%<OWUIF)Mi5C#dK>gZhi'RupXm8QHHV9!j+#L>Eg?%POm*Wbnb?D5(r\-[<DW%89u()9!mdqfqWL@-aICDU-oAY&U5$C/CNCME)E>5A24K.H2H@&.M=3m3.=lG?+7ZsY4q2U<>JqHD^/LFRNK!K2GAaUre67C/Lh+]%Vf6@p'DEYTP\@%UG:-W*m`LO:eLfU1TLEo^h\U2qHjJF4(L%,nG&CqaY.pI_C*R!7@<kpW\?c)rmo-_Ed:2NM.hXI5c]0'7Eh;`+%*c*rCrLm.%\-Ll_XJ*e#h((8*hITDugiN%pOu9Z;dPV]ZRR\`XbF0`^=*LqShL7]2#]Xd?N:Dm374)nPA>WGs,I?\8rAmV3Q@BAK%&i82<!G:"%S_n6&!j'Tn]OXA#WJR44Gn:MH="F\s8PWi;]m_qnI[5+!no.mHH]:_QhEe28AT6\kp@`O:a1EJ(\$:E:(J\d_gr!MG%Y\i9fXNBMlraQX4&W![S9B"%l^$L(&Yk!j#/#"CE+0!C=._<N1o!Z,I1(b,tMWhJEP^F`pX6V+6#hj=X'NLC19pqdZ<2'-cUMEq*%Rjp8aFL_cGWPE]'Z$1#MY.GhKm]+**\?<Cc9[*tWH\[';e)q=U<KUe]Q`rjJp66u56Fa2@ptd7^SmpNrqem6H_R-[:aQ1bBjbc17%Im5No6J,'!X%M>JI4DgFK]'NNNVrTdD9g((G&NB4e[S1dYW&q,)RsdNXq/uO6;p\*@$E?VGAn&T7fHl`qLk`;)E6oiIm`P!G)`!P%eFr$6[uHk^SR0dV$(l)r1=Y//2$j:9f%3nuT"f$UY92#ne:I;?rH=[DcYC7JV%2_%,U'&ql[/-;rnD86g]%,WTX7tY,\?A\9!J23%Gm0DJF!hi!>bBDKk0[e#2cisuM:)Q.n:#C6#B=jkhYYj3a/jiAralU=Pr8(/jL=B6%7gEWjEA:@"*OD9_jSC'p1sj=rV>1)XFY8p%"qFuSQ'PL*Nd<hI"YZq=;2Mf4:"I+&4lssTef7EQBT7%_`_CQm>D9d8?9cG_crP";a7NE-YI)bZFQ]hWop'^SMS?9q;I=.9XT0rB%caRdlW3<SW<bgZ#kpnD/0DF.5&t]p:mAm9b\M:i+VrktAqgI`[mBdUPRo#BadS="Dq3=sX3jr]PGlPYQQ(oEi-VLuV/T3qeJ%7&;%^40>SS2EPPE)e::Q6*PdH[7JQD15^eS[&IFT)?hOW$6"BhYss*3:jam%E)]T=Te/0S*nq*cLHCj#-Q8j:ej=mp2]kM3MZN8@b/=o%J7q5D*sGfFXF\8spI2Z0F0Nhj"4Qp#i7R1d4J$j_pD[ZQFB:a*Dq;]u=Td(8`9bO(h^*'rbA9,N:teFp_6^6UGD.$nMGbHf+hefF%k98B\']Nor`2cXUj>DDD/4\8YU4[h`leB[6_1HQEhMu':f@JnUYl![#97La;\h0_\F."icD]]?Km)Z.ZDd%JFro^k&[g@6B_T&f-%ZJPkpHG<FYYI)bZ<2YQ[oG-oml2A'p[W-/\d(?_!IANLCi\[Jk*^F(h3>n];37`*YpJk!2("ISB[AW<K]r)@MraO\b&+;Z(5^VJd%Ot/2Wc%u4@I]okY3P545&u]U+,o3qg/@>SsAUb#p`EZTH/4F]XDC?KWYmM#.(WGb%o5a)_4tWK]He7+N=fS)tGh1@0[tKC^0"S';%2i'8EeKXMHN2_epeN=/UnbDCpT[&qM[ICQdWk7T]X0;KQ_F&#D:NoYFDie.I>t*QAhB\rpLq?PB]Kp;k[8o0R<"3c->'QG5e6OrE%6#,@eVseA3<bG.+P8C-s$Gj-m[A%h*&Y8faBgqE2,5rn_TG;;cGLVN(ksX)5;k6s"B?jUU?MXT^B!!KIUI)39/h0SoCnhYX4h:-:%b*"_6e@Om'U%621_*nZ?CBR^E+o$8C0Q/$l:L>^Ym4P)Y\q76<J:#"`]'0RE2DHt,Yl8A;40;"q/arWN.LCG/R5#Ur)ni0%WN*.`%RIs'c$g-jNE<ueE2[WV_qp0jWJJYO,0CNDl(Uck^YU#8>a&Z@8i8>K;1PMlHm<G;)D3JNE%%KV/I8F6Q-?m,X^5EFGf9"(-2HSX/%iU]+B.[Jk#I1#K2[n$fWL4]0o7b`#7YU)5d0;@)aHPY6LDMbj[cZM_bec4a.(>8jLd,s2VcI'CZG#V>h)a%,T.!K1n;]3FUcR=4C%^WI)u%\mooB5/J<6f>^k=V'rW.mot"EH-l07FqU<h^mO'4PirShHBJpfA1:@?e\_h^UroODn=\'"7H/k]@9]S<7KMSYapI#=chtB%GG"t2^6+s4bh;0e/6r#GFJk+OWT/ugSB@;ubp:O3JU;%]Wk=_aQsDu1:K:XnFhF$GI7F(EQjQ>2[O8Mqa=aE6SR9`fG/;L];>^(a%\<qlG>?eu[HRIOuE#;%%[@)Sdhseeae^Urm0fi7Eo/7UR]=mmW/IYk]io`qGKLl_AT;+`G*Z"aHqn>N_+==OKP*D&,A'[l**OWIq%Bln]M'2.j*CPNu_@XRasAC>=qgR8%=$sISN3X+mS)g<CH54'Z&?NphjlQTm.^S5?Jg.Pme@<(pcH`<L+.5qCsF^ZrfmQZ+)mD6-'%A1tb2]9B#5;M>0Bb$K[&aC=^Q0<*YG`aYsn?7L^3f>d[r#4AXE\7$N"o32ur,Ri8>gD?c%R!)G>9(/DV_>S=W?&WPn8U+9HC1R_$%8Wc%.Xh-?Rqn7;4Q1-,?O<Su]%W<bi(DJ@`Gr:kOkGmD`HAuqW4hT/RVdh)I'\K*R,o(RO@gA7T9r5]YO#L":2El(^E5>M"HVlVb%1]t#:M.'i?<8(]A7lt4mVQ``a$+'YL&Tn$D4l-.6+CQ2XLZb^YrHrbV[urFBoBGK6fAor(V@pk0GVtbDrEao?9!s4[puLY0WSRI'%RnC*F;R$Jjqt@ALIgdD]gNq>^[,o/WQ)XC_h=n$^.b2Oc%hOJF9s;a8o;/No+uY=6#^\:c\lRN%Vc;Yc_9t%njMUf%d1k?Ddb`%5%BkP><m1c$lLA=!>.qe$Qn]goN(X9=:9jHT"O-;5kGAW'Y<P4V#<dVUYB%hZJ1V+Z8's1=k&(6Kl9X,N*NQnj-e7Mecd;1d#\$jnd%2M8D=)C95I>ktn7([QT7gbi_U\';;We7NZ$p>=3`7W$/PdPb6uI3goP$_L=ek1Bg5dH5oB=h&Q-.@&;VB!GrHI6?<#.,c3Aqcm1M%8Dmjs#&sBXUU*SA$%_O:h$D&N?@ic5r,ghS9%,f'molLNlAhlT[<V3;q+\C+-icrK'6s'+<!BuK$rqYd^GAkNdT)Oc@*Ms8=H4c3%5LS*=ms(eO'?*=e7rF!\C[f9u'U*AM^!p#LT4i\$\A*TKdMd@l_jA%*G)DjLpRYVYo&sAn"espj*ELXZ<$CHdS)_*4&/Ag+F/U"L%mmi%DjjooJiPaQi(g$FTDQ</PErG00Ur%cJ!9Y>kh*5!I-`37(AsT=T!ke-Bm;R4-AZ!agMb7i^:IfXco(-l&7c)BEYAc(<^]-H]%`u>s:Yj\<3EVem,%X639LZj*&`F*UZ1b]94Tt"23!,5f4^R'\U%nC9@I`.6(cMO#i?;4AQecp`BWEK##q`Zmp9h6#_("s>SmXpqD%6QhCq0$h"Jk[>R6RpC@0FM6V\qfEOTCt+g@FY8Q>cfq"dO/7#DHoE*?p+tMjHQS.R]M]IKAt:-'f6`Flqh%]!AA>d%<prNN<<B)]%bW%JPWh,2+DB7&V'?@;K!5U27k,Ur2H>2fp"J/_'<,IV4fY`MbC]Q'c0@:!VKCeHc%dL&eY^PBsg:a]==(#YieHn.al+Q6"gM>!"%!1*dtmOWp3^5)^KJ*4)^rFXfb!5@,N2aP45`UX9FlUj\5Uqub%TCpsVjnDPHNk1&dTBPcQpR=Yc!i'*ug[&+X&*A<LlDgkN>4qH2%bF=d/B":np][$=lr:CsjdS=^A5CR;s'J&J@)O+pE`V45Ed,CiMk]3&TYdUKN7cmY:r<<G3I^A']HD]jD)#.G(N-[ZfE+4"XI%P7W%$q1:6.p@UMq=%W,e0\UpEU:shhZ/G,Mdgktq7=/(a*JQZce"_Q.$*P`4]MXdYlG:_N^$!W@+udb_4EUde$Mu];+:>O.L.!N@1-,i%)DVRoj=9KZ-q3OqGtCl^2'UbSC)&453^U6VW]%A][PTl@dqZ,#HXH:,ZD)Ma35#Ah/2m$uA%e\:[FVhRkMGDL7BP-D<NAqn;`F/^%<OEZZ@W$r7lR,8,;;8U-SsC*Ka"af>euYS]j*k?;!KJ1qkaWJqH;mkoNe?/gSN/N>dXn4%#H(A1ZRekldNmILYA\QWW8Un45um5W%;):h&%4tX&`<g5u*?^[:)UB.E?B6p]d3W6<"n-j4_hU[(V:,9hX.]X\a7AgPmZBIhRO$e/Zlo^-nUZK6l=ZdjF-A"M\*N2>IUl9f%5FB'gVsdAg9\j@-?GiI[Q()>;VGlmnM?<[1"dk#Bl""UI_>\/Nmf!2.qn\Ho_bS\Z+WS,k@E&6)JY56?0clabKk\+m!%=IdCMhW3%k;.&D2"23K"tf2lN,h"2Eq9V2kLO.:IY-2nKqAmBV[:2%\gB`Mo5IVgR&B>Bq"eY$(c'mX)+]qr(GOo9'6iOh9^lO#I]D/_gXH#\%1`mcnYR<X)\V@"sPMT?<O3N4-Y;;1Z(N/):f%6B=o+U1VqGb&L[l7Ym'APeT+pHQjFfg=n2VpM:X)Ad5!1*)D4^Hrj[kMP"^l.Bm%I]6,jCMcjI9M.L[D*Fd4-P6r9_EXm+&*ccG)WC8\TP6U[\'G.&g#6:n_KZ=C^6+>H9rn$Zp*<W;L4?mp'FOFM5<i0clUlMUT?j"h%l-G-9rRW"_A\E3n2#Q<<kl(Ppk07RaUtd'_ptcP5@X-FO%/N;bq\p7%_XK-80_f*TC"D"pDn<7oI\moR.cElT"ol"">ohj<._tg)%1-9VrnqZ&#bB5E%@3<7S=e,HR6?D\`@6/>l-f`31Cm,dDL=tjq9J?bNQVnVchLPtEmnL?:.VA9&1pcmfBYgprDs_pR)dLiIM2pfG%X']amh8GN@bY#7U?tM.lB7'%@o?'/AE5&O0rE5/>&]P!%0U\%2=;s>2lU01KQ1Q!?p&"b)CMB4ANAus[8/>c^6\K_?dX:uabLsje%MiSrDIN=iYh5rP9G(_jMqX3,#`S&qnZi>B[rpB@@q:XB#Oh$V:b*06(SLe)348nm@Ch-QsYc4ZSB>/P1VMC^9A:<4>r]]69]RB\I%_TDZOi5K.u^%QDl@C4n(o=-]=\Z57r;tjY]UU0uLr7C#5rg\<j3d^>kqIi%%-hTnXcWoIa^J:;FR@M$^Y9.\39:ppS]9:-A$A,G)%I_WY0]U)tXB%uq')OoVj7fR:0]QtHo`2_(9Q%`/E$^iX/Pa%1L!Gt!5h?6bn[%>h*N6]SjIAGtDFQV]G17"bdJ4/gck+ghjA#HMc%5l/D<II@A6pd_7J:B.hPd@*DA:Iu3,kP:?AB;>jCoQNp56d4R>WF-QVn+DoEB;FD\*`#AIZ#3@ZmcmWWSsQkTJMD=fEoNEj3'4gD%S.q]2cV?,@-dkmP4$0"':9LZI,Ji3EFV,]\-&CX4`9?:1Gn[$r;\YIW;9V-BSN3f:)P-isitCIr+j-'=/W&3()KP?b=^s4'>sLg@%%,4p]`M8KqNo.534:j,.gGgpS,pu1lD3CZ6LNb,P1HLUtM%Oa.M'7cL_\mU?7+MU!RFurV?K/?sHt*\Ydt'Vm@U8!<VK%/$^,mWo%\/&^W3FhKPrt0GKjQ)gG)KUdp8[7gJh4\"-Al5;$gXDl,]2U]?GNZ^E0R0q?78NpYMa#n]@ls]?3F$>A)PZKN>+T`3]*`W`fOeD^%(j%o`qcT:/B]g?f\HjV=oKG@(`\u\l@,F2_;FsN@E<#la0flLuQ`r\K-*5R3:XAT^TbtJ3]He1%>>R`:>E*<CjZIcHrcS2!@c?&u%%lIB_q>'kM,r]pCo?$o!W%P0q.1X_cp?;;:fXaLk3miOg[E26QBhZ@kQF2\$d8p"Ui[s>J3Z:^(JN=c&oUd3@p>VhBn\NhFE,:"&%=FC7nlVtCn7[g)$'j3An,66lpSj13sGSL2I*<1!4ZqZpuqrQa"j./)LOeA>e$W8Fo\G1QOQ_.!E^iqK=$%EKq[8?OOWQD!S09.VV%q:0C+9HSX_M3#u4_E7OL;1SHo1[4.VHal:YiHefE?B3/71`Uj+qQ7:/(iO6k.pj8G5,h+$hi9jK"l_c#;QDNR(>R#HR.,hd6%4&H%9R*P(i)[`un2^A`=g/l,(=^@%a6,sR/JFkU@figrZX\Tu3,hQ)bCZS$cX/73VT0\bZkKT;9__[bWgI1#8UDcu=KlaU^\se"NWl3*%jl(l%!U?!E95+2C/Bp>j1*?5Te/g>QqfUrMVZY+o7_Ri+J?neW\s,#nk<t)$kundnc6g.g:`I.R`T?9^J^sh4jg7>S*:%N5W59V3%Y!KN8BLOX73BJ&qCQ5p[f#B`(,8pAUUSg!!``l7ZbV]Y%W5.O)8dI8o\jh8%nRT8fIJr$bOrn1"VKtbK&`d$BK1Qn7]/Dk%Fq$B[%&`suL<JT6H;=HHMYjt'/42+IT^5j[;k3kAGiSbT8E>7X-*oOrUlPEBC#!jDE^TRgmo0MdBlOH))WJ!TXH#%2BeY5TP:ENnr5M3KJ%eK7_%gu^!C`aO:`j2*_ZW`\"OV!rq?8(H2,A6Z#8hcR@Hfm;+\s+/u'OkO_ilU01t'Bs6@hrd%M+S:Y!Mdh$L\N.`S`<%4Uc*H-h%NK!78?X1>Moo37dj0t?rb8]#OZ.KbD?otr7*6^2ADr6LL]+__._=dN>bY/gg?mg!\._^gi5:VZNF=aQ+'=k:eIp-2mh"3Y0fJ4gp%=`BoYCOJbpFf?(58Y(WgO1@U83d,XD`O2@InA`&_mX95l)fjjXK9?#,@E_oG'DTH>O.047.'-ZFQ,]@]Z65T@`rEgoeE@>GZW@$(%$'!*%[4!r&AFB`XZ$b_Ao'.*RZVF+k53EUUdgU_<J**!p;!3>dDW`AH_tUPLoES6\"[jj:!q/pki?8$Sg>Vd=q&_dgn)t8kAaH(7%#dh&RFub#5pP$&P@Df'$Mtdn)%9igXqoF#jiG4r>B#EsuSICCJ(OcsWR_"='l-^'Im?'\]qWIolGn`;`R0cm?cAJTIKV-N<3d3.F%Ukm'l?Q(#`=!!sIhcGZ*I?_<G`I:MP"(UEe*pkU/I(DEK-#R68<hB4/qmc1eh*W`3oMi?h=2+\0B%_De?G$TdUD>T$f9]D3<1[eG%#M-k.WqZ(cBg;N.!CdTpjnMMO2paABL\cc*$L(o[7^6t-*'8V^1`29KeVeoKRJSW>Q^I>AYk9!Z2]qF5?AA@gl^u4VlgOGCfL<fR%[2$1B=#k16q>*5KX.6ZA2U1aMYB&JL4C<L3X(KFWAUI*upoD.-^Vq+=U3NGT[.3f0^J1_fNs"Ibg""F;3$:Cg4o=a=li,$+SmBja%M#L0Ms2"_1o+<.P&K/XY,=^nrgY1`BanLu20f?6IYOnd(EcJMdnau,,\$%.qs#VukT]c(C%sHMok!mkI,8b`NA.mH+*5Q%Xb7n8j%*PqT4C;Isur;ZBgWVqMMGu+ke6'A'I2?Nmi1/.1eAT%JJrtiPP)S&D&.)g[(Gp)X,A!ohrjS;A!0T-1#rsM&7i?+ZloKOSJaM!_R%f>5NiSF(;jA.9F!Hpm+*,7F*ZjIAJT-5p#$A0YGrOb`uQ7VuT+ka,=d?YZ&h:(^*V9o?:ukb\Z<OiIRp$Wu;Bdfe;JJrtDo=8^"N%@Cr\&s3Udsf4j)H/P[6n+Ms6pP`7fH,co4Ai`%b_-kWtL+DQ]d:><YLd4_WS(cT'4>D[LZ(\jdarNh*bSL)\)s"O@r6UpRSF1r%b%_`;F=(,[:<E+,DnnUZhH)l^n65*00+JS>5pbgO?n$f_>!))OaM(BtMR0JJ>&OU,K+TS4g!*gdHl:L\]o!PF"4am^CGbgI2n#?]rg%pl@]$#sr0k7>e9GLj\8jV+;49(WO7JTTK?Yfu%4%4[]jB#Zu_0m/[dO89=QPOq:qtkQ%OM'`9J;p_`ckUeEceJsa[L0agYG7[VA0%`$%`/9t?b<6L["I,WEjugL2QFG=oJX0F#sLBV`qXEUcW>T:pou_B?eiMaj)L<]K7r$$%L$7jP/oPdm(/YS"opQH98Q$&B/u3JHWm%ie3"_U6/*1j9u\fb^B1*_-kZq`).:KOuGdlkA3<i_<:0bgaH>d@4Kahkt<!c7TTIBdK^;']Fb<5c?F>oAZuJKD7"F>)CgK$jYdrA%fR@G-bZ8;B#\)q+)`l,Li`tOh$rbrC,)H#A#/W8T)au8)9P+'JMo?iKAE=mXkYI&R3C!biJj=%W":GA]9q[okiYtIBX+c&aW&'8A%Z%WSf1][q4,<e_ONZ0-c#STMjI/"\t1?:TYZC#1V8-HX9Ra4=Y3Eh[e7FYF5/bJl8(l+38Q%+a<hM;du*7[*E5j:9=Q@XUTK>N_&%/s47HY6<'"Of*^E%Km.>MXglY!BqcHJ<^[e/-I\KiDTkP@!MfD=Zi?'a.b8SJ`(%F+<!\,-:DFnI!pdf`C#-I@$ic]VA(!S"$*Hk%,HWkWJ#!7:/;,b)%C3WdL^7IeiuAKd+":kL%T*@Y_9MF\1D%ht2i?0\Ls"4mrsFO8NE(Ia0SN1s&I!S.:R#`aTNl1/'p^=*.01PW%I0CVmkR#\!!D[FG"aD[D)\Y*79P+]k"k]7$+Tc571mTA>";HtTa^[8l"i)p;0f4V50M'>#H2@5hJogqP*h$D5'_X'0B5,G1CDo'.%+X4@E/;3Ck2otDSMhZ]HRJ9fOX%Vi!MZi5MK7qQ]+FL)u;7'ejVaQeoEVG60YNjFd";<0!778;t[E(93M&PS;!]qifi:)f%(p0M<%+;#`Z$uu[cKqRR_Ki&I^@G#4GLOSQWn0%i>oS(7/$r*Cc@;I\$_<5K'1s2th&/E=Xo[sZ_pO"!a&VtU4#<sE,4G<C4,9d2OSqM(&%>KKS>G=8qq7f5>!">DXB,9h_L7##+44"RW"3/H6]#2mc42hon!Z'8tnI(]I;]W9fkN>GS,C'(Yj3FJ&AEu5bGW+&:Sp_-b,(]tF<%=G[0-*HV8c3NYlWaPnW/UX2\1d"tMb*5p'VcOh_D]13iP0h&m0R*DLX__\YD4+c%"EO8R)bP=8"/?JcJ%E!pVP^&5T`auAVmlA$V%'a_I,U-romcj^n=*&.^)EP/L)_V^@T^8)(HSd:O47!;K`=K$Eb_^+p;AFiC)KA!8<'Wp/"C8&u*WB5cloHk"l:^>uJn=:Q8nXl[r%+%HX)7Bp5^M]cgX]2<a,>!25^Sr.CE#S\!*EleSS'/m]AZsbk\JZt-X7a[q^VD;_sL#F_)d,X:*fUF)i'DfFu/QV-u+\%X%2b/gG%43B:u@WIRGhW-XuSEp%nLFLO@SWK>e69#A/.(aN:e3]f-YAe.lkq+jqB+:]K3H?g@(EUZQSN?<c(1<`_*B-::SN7^$DT`nE$aK<.%4*BV<&0c1>l;='07#9Wlq(.3TWO#Gi%:La8k;tY3L`#C&%k,4Eb=(ms8:\+5#Q4Eh,`O>iK"77"KK6Bo+R?"IL^7Iej8LSA2PLnM%*/@'gIm;1i+P`[P7a\dR;40K6%`)R^UIV:#2c:NhL!:SbNB@X187C96YY0kC90r>bG,&`?&gi3tq$NTO66VH]boAY$:dle[Hj3L$%bVY2X:702rq3Qt+_an]D0gmlaHQF"tBR^&"*V>=@T)rj`K"13l#+:In&.p1lmJmIoiNJaUKF$+pR*DIWZ`QnGm"ug@10qWUi=I]i%T-P+".(Wfmo*m6+I:qcPMTF>EU"`?I^pbtVZ2;tC+c)PFmp7u)[#*oV_5q?:>$)'f]l"N9RkU+ao.C6&KT#gd_^M>]2[@N#=;n.L%!6Oh!8;DmQQ,X9=b)/PSOHebZ*%WgABnRmP,V"]"c"8)'V/`8Dh1V_#STi=t=P-`d,9,dd1S^!LKndDffO['tH6<IBG)JXd_+RIp%.Et3a3JHX(iE=A0!H!D8U^\N"KN>iq0WDGkLBu*mji;MM)9?NOXbfNp\d;6%3aZdkTjsk4K/l7SW2*Qdau0q"8;W<(k+mAm7\2[L%gaIMU3(sH0oC5a*6K>/?=\$Vb9DNr>_G:n*MH3K>b4KsDRtlc]riYuNW=s:IX]-&nJd@A=GQ3lC),Ru2Z4MI87AK(\M(grGR?-5t%AHHeV13P1%a^(j6ZhY#_hb(FVZuV)(Kg+tWHc*`lJ!)OFC^_YC,rY_EDOiK3&XI<e=U<p3DNrtW%MM,P)^3=2Ti'8FOgJja9dad3%-<h1DU4lf>Aa6qO`F32M^CLo?G-KAP<ruM1`_tbf!&eC.$grtZ&C*R#b4<P\,)DYJEtGdQM"+Nf@7#8IDp1O-$f*473FODdkP\=!%*_'300nN/h.-W;@!@cNh]n6V"_Zf-)bcE)-TLmLA6O]%ZobmCXO?nCD:m?O^_Pl+?\N*=d1%X@F()CFa<Hjg^<3,;%4q#3im&Jhh%]5i\+9V8MLE<mHH:L=Md'0j?!3Q?KO@%fhUL9Qc6^rDG>^`tpuZknA8rQ\)%#6UgVL#p[sBr'NhDDDUY$B?&oMmf"qP^-=ELOb$6%,&fd\+d:6gXJ'5n1uc:hF#K,4+=qKMNNs]N%[2N)PL%(HU#n%3A'W?^9Kop8)FZ0cQs/_F*J$"7N:\G)A!$IO<7o<t^d(K#P<iKj%0M,l+&VTO^2p-#:MoYeI;mDl5#FK2*[_G65-UJ"jK2#r$CaZPdG0tuB9UTg%3"-f!VAI5Q>mW3Pn`5nnJ.Ui0-hW'69V#UeN2"0C%&VQ\H$t`c?%$P]*Zh`f_J?=\udE2boR6KMSi=I`lT3`pS>TdQCXcYr:EH569"Ka]IqhlS%Z(Y$j[1FYi1%TD@7Y!su@qmQ'!f5jL%S'OF2DW=4>PnU#1qRika_o##p(3>e'EoUQ,;+\j)atfa#OPsaogsC,;X9n&D&L8O]`kc,ZOuQ-t;-Vh'&LfYV<A]S6:702rH+0/r%LQVR"7]FNb70O`)<?s&'4I!CAg6O&niB24W/9`'\Jsc?n%qVJ6FVuN+81Nfo)$oE!)au8)9P+(5IuM:_88j@V+kEqt<IS3,FF^>J%L$W`/L:uLOf`k?qrh`PWg.dqc`(n>d^r$ir&<Qo%;j]E4'K2YScU)jX\/T!n+[dX9I-8fd#o!:%MHI_T.qM&I.&4XZ.7P2OKr\)Z%i@5=s,3=M43Ja)aX#RY+,\\D81)Goq03jcG#Zl$$-sF1#e3]dO?#b*+kqAqfcKL"?-ZnU"-'sK)R(F`4MAFPJPtOQPUNhri`oJ6[%h,$+6C@7?l.U$<LSm3aK68qjr'ob]1at9J+qRl"`%1a]^8]FlZdGeQ^S-ZKEim=26[)";HDeL%X>Epm&LnM)njbW)E,c!Om4Mt)b%o'6P`.HH<6.*;h)Qs/_F/fBG"OoFcP?jl0Z5n&FWYO$^'B>1\-71ao45blElDt(9oWN"^k5d@K\_pCf_";%%RZA!n_P%YO]g0uO1%k5CHS#WV%oDGI$.DA^Ss=`fBu)Jcb"R9p`Hbrn#.)KH<$6)7L=(eeV.KOG4pg;;t[XE)3Z7AFPXKW.Y;GIr-F)!N]3,nj66gqfec%oM):p(ltJmJQ"mgKs:1W2om=H3(*l]<&37F!`S<P$MNSY(:YmIQW(kB=0R`TdCKW]R6'e>/Ao=odp4;[",VCsdQGW<ooD@1eO(Yp%0Xp;J7(mNMCjYcL?,IQ0;H,:NhJ[$&T[q&Q<S4KiA.II5F7\DXm,73AD^2Ubf?*jAcI[8Qrtg-BA>K%^lJ';X>/8r4m0'iBGI:sl%Eba\21\6b$8tQ##5eRJV#h5=L]@2GscYM8PLBumfEI+9)m[BRcO@H?CIBWp7j#DnT!c(mg+Np3?-_MNZ#_2)s`h;0ZFh_\GY)%nm%h26M$7fHS#5S+3`V?L^::F/Y.TqtWte;.I(9e8TU`-II^fCt,XiGG35+=?T^"nQ*,"(P.W_Dp#]WVaYG*XGNS&r]\8J]\Z56'Oc`%Qbq_3js4]n=m\d4_2=&Jj9#]69o*Q17oB".&Y?<2OImff@=pHO$8A`]g"*1h"eI]4-3rk+W9t1l!JqFtfT7g'R4M0gqG!Ot?E&SM%9i[Yrd1954#f--6?*lk^$K2NEPZ-[OI8e\p#rsD6n-.t<g>PFKs,a5]lA0Jb^5;.SU`>IEoM_Ru?7Qbh;VAVCC;Nk;YeI+5742[Y%l3!_F;YR6Yr[8cMCPi:!A$DR[4$^ehS0,+V.uUlt8JD1)*hT!N_1o8kaNjVUD\lJ"X5AATI<R^Bo\4TG>'<g<_[M,G,idnEf+0*i%X/dbKVa&KLJ%Ia-XEpPT!kHqB>lAhgp$H"F:,"dYMQ[orpu@-ZYOl4Z]#qF5pWq]'Yu\BF@;%NhE:)Ds4HE/c(C51n73.pa\qMZI%SM.AZKC5PVg;<3O?Ws^CldQlOOD/1OJJ$`SG/G#ZpU^%3joN'L7WHerZJ=^nU$ALi@G7k"W2QUBN3N=^3uC-XV%(/T)rCRO2-/H&%Q;)nkNKitN(1LZ2W>hffH"C-gOVUt7W=@T1iZeb1*3$#/V74$u(029O/[@@s,7.BjM<7PE(N:#29BTNlhMd[;OMP"\Vb5cg0\?e"%,1RE=/:p^mA'L0)>uMZVM1M2Jn1lf@ARSQ>CI0dM">TN,Eu'MT<jPJ[3)%td'o@/+=U73(=62p)PrhZNqE2;,LQR^!HbC)\1u_?#%[\e%rmK!NU%G2'a80VR1_eL*q7dp`t))]9%0ZY\*(P4+h$_sN3=_F*-@ckSk#R63I;B07&WJ7KobiZ5CI*Sn;NM;[OVD<Rk5/q#A%ACVc3%!+u+D1p<R@BLTf%YQR+0hCgOZ[['Uegud\&Ab%e*T4;ZSutauFjh2WbCYCU+b6-j+!OP0&6V'RYeZ2`'!mu7!$AMITeWo\%Mkrh*VseOpGj"OZ6]E<dU&s4O9@Z"BN5L#6%"pL#@f_O.DN&.a6Xq9_1<qqnbL[.]Lp34W!#pnEZN/!,2hpN=1hFhBIsJrI6>m+5%>"=rNIW"@uWj-[/L2+8VVA.-lK!9<KNA;j__aG%l+$2D\6WKPs&V^Tk@3CZXB-?Qr@&%DsKW.Y;mfRfj)!UL!`:g$A;2J.5<H2*O%eRIFd,RG>_(;b@\7To.=9E[*AE?8RfeV#G-]('MTnbETHo?`JkPnU#MIGR3.iF-9I+!\d]B@pHe2)b]8(X5$nWD9LeWFB[hL@&GL%1KFoBb(E0H#R:?>$P:+>ARdLE0\E'BLn+qr,?P/gUreE[U`-PYK$@mNn/O%%N?V7OVAA0=)9Ke97=R')9eVWd_H+\5WtJ7=9nWCI%;4D]4b<ku)G,+CNFdNGDk2TY`NNXH<Cb'"Z<Z.f_4p0bJfo;_k';dO5hIY^90XBu)0hpTP6=lk4#!@ZQ*eQmh8B&\AWf#0hVQF5q%V/b)%$RYcJ[$J]<kf8jGLilE"L4UO[,(,8U6MnhDSj9p/gf+K.:RT2S+`=h+9++Ug^;-H$Sj+*KD,A-WY]EfCeq@mFCtgEI)qRFO%`c\'CQ6\j$d$+!:Mg\`>`c`qWDN/,.``i`+[;H\\g*/"Dk$@`k!=(-!d_I2#En.[")!3Q7<&A*J7#F:BWbj8l"nNMh!"8I%#T3NE%j^]uR4t:H'R.*Iflu-=2EKEEtlu6@]<of+,a[5JG],ingQ>@.uaR\Gc)&i3Kro(\J$=[#P40kAtTNG,$T7)e*R;UNSG`j<K"bQe<%TV*X:jJ1(mMKt#2a8mL.3sQ*Mbmo^iCiPY1@\-d:NM9Dl6tOMgI=&lM6%?p-p,e7,/hLnUMIr!7dFb<R._)i:KHD.NPW]X!-A%W\%pq_Me=JLI@$TkaC$.kOrKV'6%'WmlZQ0Imhq@4#\]cFtWY\c"[*(]:o+Y0s#UK6JC\$DPIlkEm'oGQWWf\_7n@BpHgNl7tA_L]gk%!C*an_G1\$atB(nQ,rNE#ljG]o-X^H\Z(CC^/WX'29PaW'gP=4IAmu[fXs%u[O#@f&3Cuk]\%6>Di5S^X<(2;eh)Pn?8mb?+\ZJD%]M$*"@:\IA@ufOA_Xpc$<Ql&-JVg"MoM%T!OK$Td=d@&4@nD@c=TD8$MF\M<ClBj4L=_fG`^.gZp_^ia7YKa;%ZrT7!Ap2F^f.T_%)FJ;KBNchUobe5S$iQJ=R&D[$Yb4j'X&TIZ3;jTHYm.u^Vr_(f=/fmJWQTt:6-O^]WQ%u>\G7#>&2lah4Z8p`E37iRU6SqV/bF=t%9SS=brZ!`HjL!uN5\6bL=hq2A7F-R>E6j+TAc)aca8QQP4:?GVZ[h=5dBd4(gp>p.OWu#&Gnt'Gc]4DXSUDQ?iKOa3#Kr&D7NsoQ%Q5YVQSBNu+rH=,]*@r*68]dEBYf,1%KIA`j)GM!2/Op2C0skPNVM-f*a7'YEd%b5-V4]aPb>#@4F!G,BaX#ol-3G]A[d5F*[Bc/>%,c/"0#>:"!kV-HFb^sb+!t)1_4,0&<dBjJJh`Ee;>kE4^N6P&('#S+><^#dq,5,CR;KemN!UNS1NNq*#%LYQhX&(L;e7sb+"EpIA%X3=:M!:EaKL:@t&/1ksh^CpP;)<gN#`oa+siZ3Z:%CrERa@34c>h!6(74j7aSW'0`fM=@rR3<B3%CrFfOGd9N3C;1]RJ0'n(g,ut%qI.:i:`UVdL2BmUkhF@6NE-GaaTC,WF^sdHFBAfXk2MjH>H#\$EgmlWX@<Mc9E00>f+)cC[4#47nh0e<E:-^YpL"S9NpFRUUcP<7%_%Mqu"cL]Z>_i2c\7>Zl<#PlL!;d$-<Z-@(9T39",tC=aaG)Z0=D0O/LI`>CgW_'^80qIQNM9ttVD</*7,P4gZ#](VP=?Gtdg/rd%*&:Wpo)qu0lct']V(1U?V@rnP)$KYu$l`VW*$o_R>_\(XdUiJ7R*^,1$r`gEcfPUO`Z\P$NM;[OVD<S6"Q9nId\@re%u;J_lHqp'%c'$ojlR2lu=od0LBae^sKS:O\/q00q0bga>)ap]qW`$UVA/=*`',j1f-7g`jq):_@GQq4JnU[h\VeD]4=&SG.@^'*1knK@_<CKkE%;ai.+Jn>s6P!OVm*%)9mW!j%h#<B]_+IR@+0j(I3:_"04;alu,c"A1ZT3[^$74T`ZAbpe&KL<gODcX,X93O+8<3oPAd]%\qgnZ0F%1[3[3CTKNQ%ao+?WD9GJUf5N;\Of9kB@=%>[-"Yca!UCn'b:HU^$16N057Ak*$!2@1Qpajg8X);8\H5P;eO`2USok?">TL&F[gLH%`<9A"#s5.VGV7Bk(;eQ=2Ti2X@4Kah>;$s?7f*!!"7kpt<hfN_Cph9,cY+L55GO`<1%#lP"<j[)K,N9'_kb!?Cc^n@B5=e_B\A'9%9Uti1ECdV'cW8%0@!RnM9K[-UMC"X[0nluHHts=IRs8h82;T<"JscADM2.?-ZSZ/=Snb,@F-G$=\;BB<fp+WmAbs'ob/;+fJ+k;B%P-jTJa%!$3Va'Gj"fK*=0W.-p+a6,DEKI!Hl&T+J$Vl2QcrY2_>6&a@].p\T\Erj3PBjl$)$UlQF'qXF.uJn"PpbbVPbo"Vo7]f:%(?IZUDNsgo&g@D0,#/QB$U$4$VA9l8N!`%Z-.+,E[7+&hbe*Im#WV%q>m$sQChdll(cFfWcq3?3%)Q3:jCL$,JsX<6,6%[PidM+i%?cgKQA&Y!jQQaC).g7RnY)BP!]F8Bdo.h.VAbu>:CPIS+r\R!D5+JWg-jGTP"WXF$W(o[(a%6VmKlDacNO#RA_aG%l+'3-[/S^Hg%9VK;RWEI*9df?PrckoqETd^Z<>qI$/0)F$'Z1Y%E+6m7E.JdcO#>DC"F[<-i@0'&qTeW@C&/keqW-5+lV5E7M724KL<'-KO0SRN+%Tf$%2/X1P4$&=(c*^;nucOpGGq?1bq%;i2K,q-,JM'L`7EI>$)*(3oFc6ABk/cK$$;Pm4q(Q"C0A&Le[d27a&Z=mDioD\h$!=QU&%P$f>_.F,h=RBEVYkm&phTUHi($Xh'fDN)k_?s"s&YpFH2.+WN`(m[_EhI0>O[QY4+%um;@';dNr^@OpNJqa3*@VdfgQ3*4I>76Qe%-u=s%g5.Vm/;.5MDNqQ]*%$8.X&^pAd)lU2'I`p59c"WeL98RXTk+n+13)/&j!!BU8+3+TXp#&ng*8k3UsSlFaO_,h@tFPTG)UKF%)(Z7?XC&ep!ppK%=Kj0QEZ!Gs/:\``D@EZ!?n'Rch_"UNo<-u2Zeb>GH.'.[Mi'(+O2''2V76/(D>G4Jkhd*]==JVGWpOW$>@+c(%9]J\'SS<DCa%$Y2iOS8#0h4*m<A!OkGN0k7'Y<i,d":];oKa^RFRRm:/J7'4#!%9[e"@`fqF0f7L`k5t<b=dP=DoE.W6j:t#D.D%%5@$pDDF(<a5.>IHj9X`sR!KmRqd,:G+SFLqR^f-hd.Z1J<r2$./_`*nXch`V?@?^#U6Y.b3mkAtU"XWO_lkG)82qEDB:4HF'7JS]%gW](]Vucd-U2qah,26W`%!?&lCfHOMS14U5:K7)/e:9qqa,DRdIR=:50RkuR$ZFS3qBr>g60X4W/?G9cEKMe`6XZa)7[A]"9ifpF%YrQbjAGD"$&-]A(P?`6_@XF2ErKGe1iAi#`.Ge=P4=QDh/toS6BX+f@andkb-k+\0\,oAf/@55+EM+s7_F+A9R@^c0qV.4BlCPAe%A-lW;8D4=nTr](=Oa&r'8_$]r!`0`A"52kOZs^bjVDhn<]jl%R0]q**Y/amp03Z*u*hX+ID>FMVXU&rIftp!bL=SkPb'Fb0p[U:\%$aWWXBu)ZO$X1<GX0h](73@/)(MU4rY/,^/7QV$c`?a!RKH4YjI$h]aq'+/\3._kLAm%L>8k!k)/W:3nh$&R*:r#W+_SA!D,XN1n%+deU^ZQ]AZ,f"]<^^_Vna:8>76GPJj6./:ZOSJmtF--#<!#$mm*T.VQJj#<J4E4lJL<KXk_dWXY-@Emd0]E2[?&(j^Rb^XAJ.L>`%cksB$_G[,MP>?0hGZV9l3tt729#>rYo3`5gf)Q9p2ZP(;e$/NSP_:RgI06i1'Zhe_28;rGOUuB%fStuP!7VU9_>H3Ti"H:r)_V\@%KZ*r2Fc,;+BG(E_BC%ZmN*Rl@.8f-iA,G;s<r$B_pQ9]ta8f1=cqKR3%OSF54P$]/)`!"T?O!fuk$Z2:PNG\&!0DiBO0UGd6sDS0%BF&&o_oE/ocAb;\@ok1=8E<nu''NW0ZOm>41J;2Pbd&+`13(#l]4'`/eXrPN%VQa*)SsG@C8_6NecE_q<WkD/WY3rD.#4@GH:4@b%ngt!?2mtdM?LUgKQI68,KBVRh0`h[#G_RT]4RST_Ag$T1>E^)henkt`C%HJo%MoX+Q\7ArF+Jn?<Y5YfJ/JdVHQ6Q@#_Dem]b%Q(%6?KEj,oK!V>NM6A(%X_Y]nM\26j,6niF<W=k)BMb(a2:UL*cLZ2OfDjf%c_L.(aAPW(`a8;)iZ6oQDL<-jKoA7f4q@WsJlR,'TE1%(pqdlQ&i?Dh*Tb6_FE4B_I9_]4!-[_,+(>!,BfYH0QGC!'*I0j$&p*+#Yg^Hhad7AE3\sY),[0('Q#7\8A++tYXn)]\>1O)"eZkN%`Zig27P><=5f-#VV$qE/$6<mc6l'0B_l#%V2"DJh0b+Z>R0G+4bWtYP=qZghAJ:prEP;qE@H4(@4'80K-'eL\_3.8/@c(C*9;0@f%.m;H%>QeJY*?1jB2MT9Sb\YS5'53)V0HFS8_?TKQjHCGe1[isE=uKe='Be+&*YpA/+5D`t?EeecaUQ`XG+]OC-eNeQeu?V/K38Cl%3@/o1+#3ii@;3X\/sXFa$!Q,1KS9D<-?t>3O`l.5/<P+(\X<j+*hq3;0sk8FV+d)^OOg,`SZbga@c`A9-B)dSbOOKk?l(;F[#op^%?tlm\*Re\TiJ0cd!&KVpR1-;U?^Qd3,[hpT"eWg8*7*CW>-,\@-HPfQp*VZAS+R/i0g'NM=;+@4;N`GgO:c&Q4+iLs(dlMUY^je-%i]s1aQ>fC>%6'3P*-2L]0m9OLUdU5]C\Nm$Rm44\KXP;,K4UK\VgW$oJ@1)qMJ<,r*MtP\drebD+LU8i:ngNn=CTMi2H=Qra4<VQ%B[)409UU*o@Mi52cb5KNEtsfQ*!9oXN?)YbB7VsaS>C*HgbI_V=d.`O,)DYJ3sJULYTd$.(eA'WVik<q&;7Y"gaH>d@4Kahh8;!1%N:c:T:.)TPEj3X?plK,DNV0+Z\M"DBq+>@WFb2Y*":=>LaMF[_m3+U/>R7mN"C2tW"jn`%1a+?4k2#&['KiJp5dmp+3,:'6bQB\@%hD>AP.4,+!OUC-9;LoJa@5/[:PR5-5Qj@0`@pp:sMbr403D;\?./@s'^u@3+(g8hk.21l+b%4\b=S6;TOk(Y,AOn?kVNQ*>%/*:G%Z4VrcA'gnTK1:B3>N1g!A<9`7%Mg+=Ki,?4,gKgBLm\dG,8euA$ZVEM,\-6)GOnrC5%dsY7a]?b;jfgF?fEapdU+t#U;F/+_Hf26%#Q3M(ks1aM11[lK(;fOgh'dVE:7);rkMqon8SY%$@7jKb*I`3N+oF6h7QG37VAB$@a!;'(,:f+>Qu<Rf_1aq#[e:[hdUnpV"jA?u%Fc`ohA;D*/P((="_X_qKkXNXp&Yo5o:_4bVVO%BVD4`g66CVq3*b"Fu[hK`j(Mg:?$1]AKLOaCDNaZ1c2X2,QBN'k\*`AJCm.?Cj%W+2_1NO%`!_aKU%)HhbM7[[`PoZ4DM`_MT=)KkE=TMb(21RQ>WGs@%=LQVT(IM6-6g)*BG3&GhHR"Pp2bD=t!=pVmMFJI'6UdJYn%_M"9g,gNe\84_)j-<)7pS]X:oQ),F2(JT]XKR(?+rUUoj:C!+UX6Ka*USPIlX>LQ0e\skblJb99V1^N_8CFNL@$S^*l69[:Kp&Jh%(;a&f)Wb!@QW4h\T4]0`GSo[>#=QUWQDpfT#.(1oeK@7hbr)P6&;2JhDNn.&*$tnFo.d'Gh=X?sf:7LC[cSLQ(H\CP<olfuat9J+%qL%U^6c;NF+!VPgNF[ToH&C.<(^G,I'Zql1&C*Q[7D,m]*'d<>q3Q^@Nq_NC9k`('R`n#VqqNT'[6[chbkkI$"<@%N+._)Hb!J@p%:8W&o]n$ZZA<FQV%B3m#]ekVcnJY(PMUt6V10A#SX!k84[eEc9g)JeF8f$/SUM/bBWD&ra&F#lsUd$FcO);l[K-`Qed&@V%&JRm8%CD[%QD.nmY=U:">`&8d#_'5F-a:O%P.bMu]g?_28,Wj.#gL=n@cF\rn,[BsWSr+9;iLB!RQ<8G;"(s'];6&oQ/F_$g=GS8_Z/Ln"%K`G^3(1J_hf#\pJTiH+lP6%m!9,^1`[91R.q$p4!Z[(^e,$J+KQ30]1P?f/FW(""M[106ZbJiMq0bgm.Yn00&:Qkkag)WUai36'"%/"4Q](u&^4Xk.#2e)WY9qN'd02oA"?<oXVtmum2fA_D;Q#ZI8L.'"%D9FfKc]LbsYhP;P=DZjL[1E/b50,nhG5/6g3&2DU;g^J!,%:dq5A&Kap)(e5NN+XP,fb/B!A&;3K"YYca5K4,s[R?'daJ;DepZ4%CYaGPr&B-8bfK8lUj';dO5^-cOfLlpQ<&1L%.pE,`&bl,SY%.2P1IZijeU1`L"j@u&/l6oju`2glkD?OGi4GI%VHot**/-sF)K<2RpL&Mb=goQYEs2PNJ$d0pfT;G-;m1WKE*)8GYtOMZ]!NM>`5%_F+qk+2@;u!ru$#Lg>8BZ(^s<jtdQtiTWhZapD"756!R^6c2HE2og2]'c_g6,orhJcp]/pgJOsY>t5N\h0cM*qHB(+1A@;^2Knb]%B3H[&GFqu4:R)?]]2&gnGFraeO[>GX`-K*]*YL+%].&T8/eir+JkjUn*pK+hcM&C5\kp[<Do[qIT?oP'eS0'.cr>(,LdG&1aitT!%>q!0-2p*bB0XVJTrO-6-\EM7=K?__1_8@"g(88si'h?98B5,a#^tfHC%(R!%(?U*C1N@U@[Q]o!_\FC6JpFjWJ1"aZ1!I8&Z'8tn%m]-)XH06d('@Wk39_&ld).]bM%:o[b+?(M"jp_rVjX@E33W[XeZ+os2/k$?cVR&*!@5oHIS<36.%"r1?Z;Iu>Ml9%0mhF)4Sp_[/%3sClLFYIMZGe3gf:m^s!8V3Y<!pVNIm2/GR,W#W9<!q-k!`R+&&1)E3C1jjaI\Z-sdBX'WR5k5WS\r94Iqe<nNm5,N@'LLC/gi\O%oVpb(V_*R7BtI4h"kt3+JB1?)#7@lgB5"))(t`BISfV]>1l@SnR**?mcZC6A/paQAP6U-s4&VoGZI1h_At;hZ&dr*d:hYfiF@'(8%&<oiV8Bd(PV0<JI.(qtJ<Xjc&f_#lC1/5L+aSa`(o4RZ,M,@Oq867WiL/F6S:B?kZ(;d12)F]CJ7H=H*;(*80;G%0]'5G469bpq"%Ke8-NdAdYM11f>0h'(^La+1843XZ9,36KBVEBB$IZr:p>@[mTQ!m$C1JO:=b%i[:D4+i65^GA8U])gQ#dQ.cgP3aU+Cl>9H3<'"^%_nj<@>JbR6#NeUI*\>s3*o6(n"\WcnZeBM$o[/"@K677I6"^t;:u.28V,`JNL3JO>JJ91X(dlV$(_'jASiBI(Uqdhu*63)scl8kf%.Xk78?V=+H0bq5M;WBh5&2h+O:Ckrshak!bC-VuVE:t!E@;U`M22*YM4]'UUs26Cc!K4?/P+_Sf=>(qoL:9M7SslVT[Y[-iD:>l=%#AZ*!i8Ql`Z)M*[IIFunOLFBf=<Yd0^3F_9js%'i?X(jM2N>_JeA,`g_GmgL">Q%64eG)=pZKo=m5Eoka!RNg5g)iF,tI!"A3n?d%EhL-<lM`maO<jH!@&$FcO]&=/467l2TY;jiEu=bI#\@_/AZ[pdlAdc_E^l5pohEmgCGd)hZk7tR/CL>/HK?$BM*QL<oSX4#!.SHn%!CflrX6fiDlQ0cqk5;3?A/Um*&jt_kqR<YCeU:FB+W?aWZB8+?J"rH!+D`!c-5,&8B37o3MY8b$ka,=dfWt+g.H3%jkeP\b$bKi)%b585c?h47L<iK;NKS>0`oPbEK<N7<199/kh[fP.e^U2u=]Z7&8j]1#FQ12iH#pW<\Z-=I$"=L!B3EE@[@Qr"f$KJA^&VuDJ5(XM>%Jjl!aI2<u>@>0h!N6i/9^e(cia>?s5!Vnt_o$V,-!dcMWZ12GULg`mM_?gqBq?p.14!4^ld@GsP(Z:RoCDRJ"$E%RoLgnKG!$`]_%Qbu,i1D;r_6"!36*B`>c84BhR8=It`DCp$b?*$Il-HMC_DAX3lq:1j+)K?&G%u:[_WNY*.^s^Sr/ne;jiCK79M(2LTC4q^g!5.0>%r>eKo"uM9@j:$qMR$mFe$]5ig)W;Nk-.KbmDC,J$L[8bhN*S)F.FI5BC2>kS=7mpWa#QValI]7'C<Bp^B8OWJ#+I9m%3\]')jhXf%<tRO8.6NqRi1Pu'W#.FRi.rpLfHa8u$FGLRBJ9co@#I+8N$.n_=V;ZBb9fnoi]MX:6c[0g5=>4oV82<Y.(%6l(bF)uS7:,*1=Y8k%Wln<L].1$b)"_Z<$sPGBJJ2XS5kQVcBF#7)k"H11%G(oK!3X6%F-@IA5%PNu@qa,?VG*D]DfDXWkY2PeFm/$E"uB[rDS+h!cm3Y$%b!O_jAu#"dA;Dde_S$r1`.U--(mpkKCb>hJqj5=LRL)]V1>bE;-s0T"=B+,W"%T:,Bo,=93JX#Kr!=o4&+W]?8ZToQTI:6N"p)sM%S!W310M3(1O;np"b^B2UKgg6G*T8E).AHSX4(%'#HtZMtP[1i;<2RuGN7@>OZKdL5C`Q292?hhQ/CsYIR7rugXR`:1X<Ip+i7o_r%SN0@R'&!EP$mp+bFbWKO'Il#5Y_cCs<A]S6DDAQGkM$=b,">Tc)8QB@Z)Nm#7EUn2@&\%&S\Rj.WZ=d50/foA&L>d*@!_q1=WF_%%ar;'@%#on,am_$:Tro"s,7Y=B(eHWPrXI3#EpO'8Yf5!VQ7meK4T+gFl,?ap<TXJ9@JiuYG.V$qC^Rrj3AFNj-&QCF0nmt6Lma4.%/iKP3*?nG\eP/LZ@blWL%'A3WBq`cJf/F*ho]?b((8#"JL>8nb),%R1OnBu.rfjCSADBl^@@f&/b.+Pj-A%W\Qu`X6VLTcI#f@@E%Hp0Jr6qMlG<A]S6:702rq0!8Y&L4tLBp.,Sd"+m:3c!"gVIQ1)q!E"_?#V$IgVBMeJCmcZ5`mC[OG'&G1ehYO7LPn%G,9kd7#c-"%bb*$8D_b*GeLk]='`Q(RMNt?&>Ep=IX0PT7'/E5aa]c,&euUKA<L!3rX\'/5<S8d(H!8q%Cd,ThDho7pmpf&-B$+X`i*dC7_oSr<%'A>-\1g(+ITc7RRj"OVlSWE@r`KV8,KhRk39UQ4?F9]N@87RGi6;o5Vqj08f>kI3N:8=*_-L;1F]O4VhA.'2I"Q@'p2p1ni*?klI%aqma=1L7S"8nIgMa[3L]eW$;7LSYA*2P"IkooO-to$7k@Sfh&Q,d_\+)(a4d%-&>N.0Z.!K^'0ckP-)$K)eVRKdF"bUX6-)"qec6%+JGo9aC%nI1LulgN`4YoS'O@X3O^IV74Yj7>3PSN,n;(CrAeL9&/'Y9_6Y9#`lCQRAB88rHHmK<ju;l^fFd0u+<1l#B&[\3R5VoE%MOdrPl[5_%!BZPM0XlWQ6OU>9>0-:&RJGn=kO6kmEneX^_9tSm,,)uQ68]r1HH^<I3]hq\69#6[BB$!c1;2WQ&"&,LbZSQZN-0"H%&Rj(oOQHGiqr@M8bmB$#I*%q0M?e>QUe/t)@"17^JfA-'"V-4i6nRg0e2Xs"+dGK?K)P)l$#YE%BioC'\7tk%@K'6/q3,ck+H+L\%Up78iE!VFP7]/UEp)4q^Fpr4P6K92?bV]V5N1EE#6`r!q3Z`<WXO69?8'li>NY\q59=R3XJ,UX#&n(mq(ej3#1`%X(KT060c]S>Z%/;+7I\5>.@_dOaFYi0.%(23#oKnAB!mRnTT@N[d`_i:CU';dO5hBQH`LQPSdN1eO,+g+N'QUXn^YY8gM.;YM6(OC"2YYS0L>@Aj!%i"Vd"WC&QJp7o^6loLh[OOWP+%$kQYK-A,*!I.GNfaJ"]UF";9=uKe='BeUQ*',]uN"/7N7`AC`R'j9U<]6hBgW=!.\W(FG;#D6*%+c)PFmpf&WcV`A<qq0V3DBCrmc0]!Z7E[#OA`EWC"qCkSrCKB#`_+a;_I.(&:Os4hC%=slJ9"l;6MO<Q;7&n$PCo7upf>DkF`EeS%Xc05^W/%_T,24`-XboTqapD"7548PmGSo\k)'*9H[aN"O5Y"4'De1JAe>2\M=pXkrdO=[H&gi4_q7$qm9!rj10L^iLcJ<j`_L8A#%'N&?p[F"*m)*L*@XB[N42NWY[D_RB)aC(uB*DE_(]/$#L9P50=fSD8F$j%@V4!]R";%btC$BBrcM9QK?YZN7a1/*hm4e"+1M25tJ%1l>=/R*,'sP)McLaN?_::eIN[h)HWZ.eoNd@MM_/K"<)4ZX*7f:-iYl71(UHa8ois'9\E560D:OFc1nQH6R`m5Z0,rKLHaVS7WDB%M`36-%WSO,8BMYBqYGqtF8iO5X;n3f>mqK`\a7h#37;j#.2Nc:Po1K/C'nBi&8@\3$mr?^MI?jV2iCBH(l&o3P9!$6-8];n]W6]Q%_F8B@%suS>l]/f?=_9Q#Fp:CIc#,!-g[/9*_JDl"JfnT<0po5d#`gYd)bhX"Y-X%[+`=h+9++V2-/Y??4`AaZHYMW!8oS/l'>6q`%6qWDE%,")o#huh+PhhH3PCo7ufY5>eN[e>#@D[CpjL^o-5hO@nUM/bBWD&q&!B<K+oO`hc;bc<CB/&AE-Tr3rVO[IXbn>\DcYSin%M]!jnO:.YrN2,6<'#p@.jqHhHGH5bZB]XoH9V65ZA;D)enI@Qo#Sh3u5d;fFjDI5H7]>@,lj]lon/G1c`nbJM/.S=c.boM_Q"s'`%-8`Tp=4'tO^huEn(j9Pmd?LX$ItRZ3F3iTRLD=X,Qf#VI0s1tDlL;;AqqEic7Tc6A*"EUCMk;tqkJf5p3L=BT\2F_&S9&0kT*S.!%=h[,55G*H),[Nl]TGYn;Dkb3?VSEiWA-$MudMUsOTlCXDbJ[e>9p2p]eeE@Lqj+6I\U@+\B[%;e$YA26hCu1\A&<P*qXcI<KW,/,%f/g?+4Z<8l!-kZS*TOH(%2K0S:#?op&urF$_\1nX,Wde5J1"OL(g=,Z;PqQcVYZq/4+AR^eclUVRW=MU3]9_\"c2H*j"sgFiL7%k%AT_C9M'-CoXsjS^fO="4EgYiUJr0c%cTo";lpfCF#ud6Umj?*E0[cTk9-oi(Fg04ln>*kjaOL!\aRY/PJ5U'k*TLVP/K+kV<!h'j%KIPnPLs5OiRk141TX5g[6Yj,D=t&tp#)@b`*eRO(H\aXXU;akT0M9Rri?F4Y3_!A1&WNMe8rJK*YrtSs.+BVp6R0i!i?jb1P.2gc%-sF#I<2.TdeEW[P6%?<rCkHc9*N>2l=g]8aF%=>sZN+UNd24Xi#`XH>/_,#TOr(1d@)L;W[2f=Yc-+,Z2%uDob.O4Y_n\Tgo$;JP%jP)VgWeP]'fRAZp93DPX^M]:lRgp)t'!"tc=KGL5L+1R9$(ETR8dno=NM;[OVD<SV`Sg5>d[rFba0!(/4=U(=o!IINYQ1QCcktrC%9$4jN4'BCf'pX.QH!'V`=9*PWKk4TmTkU4E]/DVW/F9k-C3ON'T!W4R'&aM6%9Q8hT%\63^Sj:s,[d24V81[-P#upUCstJ#ki'3b%HD%/4#&6:Dp"X`@Z3IA67Tg?>H,KL?&9A3WEdAk(q^-jD&/8P`7@ohOEc$4E6+j<q%g;j*L;?7h7KS@U-kaJ0%hV*]mR',Ke>C]l%:P,eOCSj26[V_2gk[@2KH6C6u2q#Wc"'4DUL&n_KfOH;F`(/;0\4q=e.VTC?!GoWAP;#RF&(WWD;k$Nmq!!<_%&[Om!4*dg8D<[W%'R,$^%G2(F9!C*T'OgIO/2BA4<F1(d15Z@c01!@S]-es#B+_'f"bJH,+\VXCFJ+(SqINB'0aT'rFK8Xj8Jr$oiLcYCoh3^dl]dlH%,'"525<IsIa+A;I`t>7WP($OuitSQX8DX9sOe`'8ZD%o8TRKK/2$[]M/ZHPn.aZY^.Xdh:Z/>.+M5!HVA/I0.,c?.Hb4_^&puirm%hV:W2#@ocC5!:$(o7<6imB>*\=*ESuNN_gE:]C+TU0b$_O$>c&E;&q`jPuT5MqWs0PQ,\^Eq8lRIKjHBi@cDt0$Z'Mle0A@^Yf"q%+n1:.5!H^N@'fS,!S9dr^A~>%AI9_PrivateDataEnd